/* tslint:disable */
/* eslint-disable */
/**
 * HCL Commerce Transaction server Services 
 * These services provide APIs to interact with transaction
 *
 * The version of the OpenAPI document: 9.1.6
 * 
 * (C) Copyright HCL Technologies Limited 2021
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AddressBookTC } from './address-book-tc';
import { AddressReference } from './address-reference';
import { AttributeDetail } from './attribute-detail';
import { BusinessPolicyRef } from './business-policy-ref';
import { ExtendedTC } from './extended-tc';
import { MonetaryAmount } from './monetary-amount';
import { OrderApprovalTC } from './order-approval-tc';
import { Participant } from './participant';
import { PaymentMethodDisplayString } from './payment-method-display-string';
import { PaymentTC } from './payment-tc';
import { PaymentTCAllOfBillToAddress } from './payment-tcall-of-bill-to-address';
import { PaymentTCAllOfPaymentMethod } from './payment-tcall-of-payment-method';
import { Property } from './property';
import { ShippingTCShipToAddress } from './shipping-tcship-to-address';
import { ShippingTCShippingCharge } from './shipping-tcshipping-charge';
import { ShippingTCShippingMode } from './shipping-tcshipping-mode';
import { TermConditionDescription } from './term-condition-description';

/**
 * 
 * @export
 * @interface BuyerContractTermCondition
 */
export interface BuyerContractTermCondition {
    /**
     * The full entity class name of the extended term and condition.
     * @type {string}
     * @memberof BuyerContractTermCondition
     */
    _class: BuyerContractTermConditionClassEnum;
    /**
     * The additional properties of the term and condtion.
     * @type {Array<Property>}
     * @memberof BuyerContractTermCondition
     */
    properties?: Array<Property>;
    /**
     * 
     * @type {TermConditionDescription}
     * @memberof BuyerContractTermCondition
     */
    termConditionDescription?: TermConditionDescription;
    /**
     * The participants of the term and condtion.
     * @type {Array<Participant>}
     * @memberof BuyerContractTermCondition
     */
    participants?: Array<Participant>;
    /**
     * The unique ID of the term and condition.
     * @type {number}
     * @memberof BuyerContractTermCondition
     */
    referenceNumber?: number;
    /**
     * The action to the term condition.
     * @type {string}
     * @memberof BuyerContractTermCondition
     */
    action?: BuyerContractTermConditionActionEnum;
    /**
     * This column is used to indicate if the trading agreement participant must respond to this term during negotiation.
     * @type {boolean}
     * @memberof BuyerContractTermCondition
     */
    mandatory?: boolean;
    /**
     * This column indicates if the trading agreement participant can change the term.
     * @type {boolean}
     * @memberof BuyerContractTermCondition
     */
    changeable?: boolean;
    /**
     * a number indicating the sequence of the term within a trading agreement. This number must be unique within a trading agreement.
     * @type {number}
     * @memberof BuyerContractTermCondition
     */
    sequenceNumber?: number;
    /**
     * Time that this term and condition was created.
     * @type {string}
     * @memberof BuyerContractTermCondition
     */
    createTime?: string;
    /**
     * Time that this term and condition was last updated.
     * @type {string}
     * @memberof BuyerContractTermCondition
     */
    updateTime?: string;
    /**
     * 
     * @type {PaymentTCAllOfPaymentMethod}
     * @memberof BuyerContractTermCondition
     */
    paymentMethod?: PaymentTCAllOfPaymentMethod;
    /**
     * 
     * @type {PaymentTCAllOfBillToAddress}
     * @memberof BuyerContractTermCondition
     */
    billToAddress?: PaymentTCAllOfBillToAddress;
    /**
     * 
     * @type {PaymentMethodDisplayString}
     * @memberof BuyerContractTermCondition
     */
    paymentMethodDisplayString?: PaymentMethodDisplayString;
    /**
     * The attributes of the payment method term and condition.
     * @type {Array<AttributeDetail>}
     * @memberof BuyerContractTermCondition
     */
    attributeDetails?: Array<AttributeDetail>;
    /**
     * 
     * @type {BusinessPolicyRef}
     * @memberof BuyerContractTermCondition
     */
    shippingModePolicyRef?: BusinessPolicyRef;
    /**
     * 
     * @type {BusinessPolicyRef}
     * @memberof BuyerContractTermCondition
     */
    shippingChargePolicyRef?: BusinessPolicyRef;
    /**
     * 
     * @type {AddressReference}
     * @memberof BuyerContractTermCondition
     */
    addressReference?: AddressReference;
    /**
     * The usage of the address.
     * @type {string}
     * @memberof BuyerContractTermCondition
     */
    usage?: BuyerContractTermConditionUsageEnum;
    /**
     * If the billing address is not predefined, customers can whether or not select and address from their personal address book.
     * @type {boolean}
     * @memberof BuyerContractTermCondition
     */
    usePersonal?: boolean;
    /**
     * If the billing address is not predefined, customers can whether or not select and address from their parent organization\'s address book.
     * @type {boolean}
     * @memberof BuyerContractTermCondition
     */
    useParentOrganization?: boolean;
    /**
     * If the billing address is not predefined, customers can whether or not select and address from their business account organization\'s address book.
     * @type {boolean}
     * @memberof BuyerContractTermCondition
     */
    useAccountHolderOrganization?: boolean;
    /**
     * 
     * @type {MonetaryAmount}
     * @memberof BuyerContractTermCondition
     */
    monetaryAmount?: MonetaryAmount;
    /**
     * The types of the extended term and condition.
     * @type {string}
     * @memberof BuyerContractTermCondition
     */
    type?: BuyerContractTermConditionTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum BuyerContractTermConditionClassEnum {
    ComIbmCommerceTradingEntitiesTermCondition = 'com.ibm.commerce.trading.entities.TermCondition'
}
/**
    * @export
    * @enum {string}
    */
export enum BuyerContractTermConditionActionEnum {
    New = 'new',
    Update = 'update',
    Delete = 'delete',
    Noaction = 'noaction',
    Ignore = 'ignore'
}
/**
    * @export
    * @enum {string}
    */
export enum BuyerContractTermConditionUsageEnum {
    Shipping = 'shipping',
    Billing = 'billing'
}
/**
    * @export
    * @enum {string}
    */
export enum BuyerContractTermConditionTypeEnum {
    CatalogFilterTc = 'CatalogFilterTC',
    PriceRuleTc = 'PriceRuleTC'
}



