/* tslint:disable */
/* eslint-disable */
/**
 * HCL Commerce Transaction server Services 
 * These services provide APIs to interact with transaction
 *
 * The version of the OpenAPI document: 9.1.6
 * 
 * (C) Copyright HCL Technologies Limited 2021
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CartAdjustment } from './cart-adjustment';
import { CartOrderItemAmountUserDataField } from './cart-order-item-amount-user-data-field';
import { ComIbmCommerceFoundationCommonDatatypesGenericTotalType } from './com-ibm-commerce-foundation-common-datatypes-generic-total-type';
import { ComIbmCommerceFoundationCommonDatatypesMonetaryAmountType } from './com-ibm-commerce-foundation-common-datatypes-monetary-amount-type';
import { ComIbmCommerceFoundationCommonDatatypesTaxByTaxCategoryType } from './com-ibm-commerce-foundation-common-datatypes-tax-by-tax-category-type';

/**
 * 
 * @export
 * @interface CartOrderItemAmount
 */
export interface CartOrderItemAmount {
    /**
     * 
     * @type {number}
     * @memberof CartOrderItemAmount
     */
    unitQuantity?: number;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    salesTaxCurrency?: string;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    shippingTaxCurrency?: string;
    /**
     * 
     * @type {number}
     * @memberof CartOrderItemAmount
     */
    shippingCharge?: number;
    /**
     * 
     * @type {number}
     * @memberof CartOrderItemAmount
     */
    unitPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof CartOrderItemAmount
     */
    shippingTax?: number;
    /**
     * 
     * @type {Array<ComIbmCommerceFoundationCommonDatatypesTaxByTaxCategoryType>}
     * @memberof CartOrderItemAmount
     */
    taxByTaxCategory?: Array<ComIbmCommerceFoundationCommonDatatypesTaxByTaxCategoryType>;
    /**
     * 
     * @type {Array<CartAdjustment>}
     * @memberof CartOrderItemAmount
     */
    adjustment?: Array<CartAdjustment>;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    unitUom?: string;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    currency?: string;
    /**
     * 
     * @type {ComIbmCommerceFoundationCommonDatatypesMonetaryAmountType}
     * @memberof CartOrderItemAmount
     */
    totalAdjustment?: ComIbmCommerceFoundationCommonDatatypesMonetaryAmountType;
    /**
     * 
     * @type {Array<CartOrderItemAmountUserDataField>}
     * @memberof CartOrderItemAmount
     */
    userDataField?: Array<CartOrderItemAmountUserDataField>;
    /**
     * 
     * @type {Array<ComIbmCommerceFoundationCommonDatatypesMonetaryAmountType>}
     * @memberof CartOrderItemAmount
     */
    alternativeCurrencyPrice?: Array<ComIbmCommerceFoundationCommonDatatypesMonetaryAmountType>;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    priceOverride?: string;
    /**
     * 
     * @type {Array<ComIbmCommerceFoundationCommonDatatypesGenericTotalType>}
     * @memberof CartOrderItemAmount
     */
    genericTotal?: Array<ComIbmCommerceFoundationCommonDatatypesGenericTotalType>;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    freeGift?: string;
    /**
     * 
     * @type {string}
     * @memberof CartOrderItemAmount
     */
    shippingChargeCurrency?: string;
    /**
     * 
     * @type {number}
     * @memberof CartOrderItemAmount
     */
    orderItemPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof CartOrderItemAmount
     */
    salesTax?: number;
}


