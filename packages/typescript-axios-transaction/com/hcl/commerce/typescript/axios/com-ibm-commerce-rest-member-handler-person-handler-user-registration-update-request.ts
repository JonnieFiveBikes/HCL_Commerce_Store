/* tslint:disable */
/* eslint-disable */
/**
 * HCL Commerce Transaction server Services 
 * These services provide APIs to interact with transaction
 *
 * The version of the OpenAPI document: 9.1.6
 * 
 * (C) Copyright HCL Technologies Limited 2021
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Request of UserRegistrationUpdateCmd.
 * @export
 * @interface ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
 */
export interface ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest {
    /**
     * The registrant\'s street address, to a maximum of three lines of information.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    address1?: string;
    /**
     * The registrant\'s street address, to a maximum of three lines of information.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    address2?: string;
    /**
     * The registrant\'s street address, to a maximum of three lines of information.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    address3?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    addressField1?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    addressField2?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    addressField3?: string;
    /**
     * The purpose of the address. Valid values are: S - shipto, B - billto, SB - shipto and billto (The default value.).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    addressType?: string;
    /**
     * The registrant\'s age.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    age?: string;
    /**
     * A special ID assigned by the registrant\'s business organization or organizational unit to this particular registrant..
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    alternateId?: string;
    /**
     * You can manage custom member attributes (MBRATTRVAL table) for this user using the following syntax: {attributeName}_{storeId}_{action}_{sequence}: string. The curly braced values must be replaced as follows: attributeName is any attribute specified in MBRATTRVAL table, storeId is the numerical id of the store (or null to indicate all stores), action is either \'r\' (for replace) or \'d\' (for delete), and sequence to indicate the sequence of this value in relation to other values for this attribute. Some examples. \'JobFunction_10001_r_1\' : \'ProductManager\' is specifying that the user has a JobFunction attribute value of ProductManager for the store 10001, this is for replacing the first (r_1) JobFunction attribute value for the user. JobFunction_null_d deletes all job functions for the user in all stores. 
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    attributeName_storeId_action_sequence?: string;
    /**
     * D - An indicator that daytime is the best time to call the registrant; E - An indicator that evening is the best time to call the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    bestCallingTime?: string;
    /**
     * The registrant\'s organization\'s code to identify the shipping or billing addresses and cost center.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    billingCode?: string;
    /**
     * Code designating the method of code structure used for the billing code. The default value is D, assigned by buyer.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    billingCodeType?: string;
    /**
     * Answer to the challenge question.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    challengeAnswer?: string;
    /**
     * Challenge question for verbal confirmation of the customer\'s identity.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    challengeQuestion?: string;
    /**
     * The number of children the registrant has.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    children?: string;
    /**
     * The name of the city where the registrant resides.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    city?: string;
    /**
     * The company name of the organization that the registrant represents, obtained when filling in demographic information.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    companyName?: string;
    /**
     * The name of the country or region where the registrant resides.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    country?: string;
    /**
     * Date of birth. The format is yyyy-mm-dd, for example: 1980-01-01.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    dateOfBirth?: string;
    /**
     * The department identifier for the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    departmentNumber?: string;
    /**
     * A description of the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    description?: string;
    /**
     * The registrant\'s primary e-mail or Web address.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    email1?: string;
    /**
     * The registrant\'s secondary e-mail or Web address.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    email2?: string;
    /**
     * The registrant\'s ID with his or her employer.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    employeeId?: string;
    /**
     * The registrant\'s status as an employee (for example, regular, permanent, contractor, or part time).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    employeeType?: string;
    /**
     * The registrant\'s primary facsimile number.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    fax1?: string;
    /**
     * The registrant\'s secondary facsimile number.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    fax2?: string;
    /**
     * The first name of the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    firstName?: string;
    /**
     * The registrant\'s gender.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    gender?: string;
    /**
     * The registrant\'s hobbies.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    hobbies?: string;
    /**
     * The number of people in the registrant\'s household; the default is 1.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    household?: string;
    /**
     * The registrant\'s annual income.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    income?: string;
    /**
     * The currency in which the registrant\'s income is paid.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    incomeCurrency?: string;
    /**
     * Required if the authentication mode is LDAP: The last name of the registrant. If the authentication mode is LDAP, this parameter is mandatory.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    lastName?: string;
    /**
     * The registrant\'s logon ID. If you are using LDAP, changing a user\'s logonID is not supported because it would require deleting and recreating the user in LDAP. This process would cause all non-WebSphere Commerce user attributes, such as the password, to be lost. If you are not using LDAP, changing the user\'s logon ID is not recommended, because the promotion subsystem stores the logon ID of the creator of the promotion in the XMLPARAM column of the PX_PROMOTION table. Note: When the UserRegistrationUpdate command is used to change the logonID, the command will automatically update the USERS.DN database column. Do not assume that ADDRESS.NICKNAME will also change. Instead, the following finder should be used to get the single self address of a user: AddressAccessBean.findSelfAddressByMember(Long memberID).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    logonId?: string;
    /**
     * The registrant\'s password. During password reset, this value also acts as the new password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    logonPassword?: string;
    /**
     * Required if the logonPassword is used: The registrant\'s password, entered a second time.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    logonPasswordVerify?: string;
    /**
     * The name of the registrant\'s manager.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    manager?: string;
    /**
     * The registrant\'s marital status.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    maritalStatus?: string;
    /**
     * The marketing tracking consent. 0 means opt-out, 1 means opt-in.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    marketingTrackingConsent?: string;
    /**
     * The middle name of the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    middleName?: string;
    /**
     * The registrant\'s mobile phone number used for SMS, for example, 4161235555.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    mobilePhone1?: string;
    /**
     * The country code used for the registrant\'s mobile phone number, for example, CA for Canada.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    mobilePhone1Country?: string;
    /**
     * The internal address (for example, mail stop).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    officeAddress?: string;
    /**
     * Whether the registrant has previously placed an order. This value is supplied by the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    orderBefore?: string;
    /**
     * The identifier of the registrant\'s company.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    organizationId?: string;
    /**
     * The name of the organization that the registrant represents.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    organizationName?: string;
    /**
     * The identifier of the registrant\'s organizational unit.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    organizationUnitId?: string;
    /**
     * The name of the unit within the organization that the registrant represents.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    organizationUnitName?: string;
    /**
     * 1 - An indicator to include package inserts when the order is shipped; 0 - An indicator to not include package inserts when the order is shipped. There is no default for this field. If the field is left unused, it remains null in the database.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    packageSuppression?: string;
    /**
     * The title of the user whose address is being entered (for example, Dr., Rev., Mr. or Ms.).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    personTitle?: string;
    /**
     * The registrant\'s primary phone number.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    phone1?: string;
    /**
     * The type of phone used for the registrant\'s primary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    phone1Type?: string;
    /**
     * The registrant\'s secondary phone number.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    phone2?: string;
    /**
     * The type of phone used for the registrant\'s secondary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    phone2Type?: string;
    /**
     * URL or path to a photo of the registrant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    photo?: string;
    /**
     * The preferred phone for the registrant (stored in the ADDRESS table), for example: P1=phone 1 P2=phone 2.
     * @type {Array<string>}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    preferredCommunication?: Array<string>;
    /**
     * The registrant\'s preferred currency for transactions.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    preferredCurrency?: string;
    /**
     * The registrant\'s preferred mode of delivery.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    preferredDelivery?: string;
    /**
     * The registrant\'s preferred language.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    preferredLanguage?: string;
    /**
     * The registrant\'s preferred unit of measure.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    preferredMeasure?: string;
    /**
     * The version of the privacy notice. For example \'1.0\'.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    privacyNoticeVersion?: string;
    /**
     * 1 - An indicator that the registrant\'s primary phone number is listed; 0 - An indicator that the registrant\'s primary phone number is unlisted. There is no default for these publishPhone fields. If the field is left unused, it remains null in the database.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    publishPhone1?: string;
    /**
     * 1 - An indicator that the registrant\'s secondary phone number is listed; 0 - An indicator that the registrant\'s secondary phone number is unlisted.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    publishPhone2?: string;
    /**
     * Determines whether the registrant wants to receive marketing e-mail activities for the current store (or all stores if no stores have been visited during the session): true - The user wants to receive marketing e-mail activities; false - The user does not want to receive e-mail activities (the default).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    receiveEmail?: string;
    /**
     * Specifies whether the registrant wants to receive marketing SMS messages for the current store (or all stores if no stores have been visited during the session). Valid values are true or false (default).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    receiveSMS?: string;
    /**
     * Indicates whether the user wants to receive order notification SMS text messages. Valid values are true or false (default).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    receiveSMSNotification?: string;
    /**
     * During password reset, this value must be set to \'true\'.
     * @type {boolean}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    resetPassword?: boolean;
    /**
     * The name of the registrant\'s secretary or administrative assistant.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    secretary?: string;
    /**
     * A shipping code based on geographical region, especially useful with tax software.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    shippingGeoCode?: string;
    /**
     * The name of the state, province, or equivalent where the registrant resides.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    state?: string;
    /**
     * A tax code based on geographical region, especially useful with tax software.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    taxGeoCode?: string;
    /**
     * The time zone in which the registrant does business (report as GMT +/- hours).
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    timeZone?: string;
    /**
     * The URL to call when the command completes successfully.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    URL?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    userField1?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    userField2?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    userField3?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    userProfileField1?: string;
    /**
     * Customizable field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    userProfileField2?: string;
    /**
     * During password reset, the registrant must enter the old password.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    xcred_logonPasswordOld?: string;
    /**
     * During password reset, the registrant must enter the new password a second time.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    xcred_logonPasswordVerify?: string;
    /**
     * Customizable field for demographic information; this is single-character field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField1?: string;
    /**
     * Customizable field for demographic information; this is single-character field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField2?: string;
    /**
     * Customizable field for demographic information; this is single-character field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField3?: string;
    /**
     * Customizable field for demographic information; this is single-character field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField4?: string;
    /**
     * Customizable field for demographic information; a field of 254 characters.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField5?: string;
    /**
     * Customizable field for demographic information; an integer field.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField6?: string;
    /**
     * Customizable field for demographic information; a field var char, length 6.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_demographicField7?: string;
    /**
     * A string used to identify the user for taxation purposes.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    x_taxPayerId?: string;
    /**
     * The ZIP or postal code of the registrant\'s address.
     * @type {string}
     * @memberof ComIbmCommerceRestMemberHandlerPersonHandlerUserRegistrationUpdateRequest
     */
    zipCode?: string;
}


