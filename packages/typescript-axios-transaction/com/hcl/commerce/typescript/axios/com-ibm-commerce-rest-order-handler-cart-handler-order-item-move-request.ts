/* tslint:disable */
/* eslint-disable */
/**
 * HCL Commerce Transaction server Services 
 * These services provide APIs to interact with transaction
 *
 * The version of the OpenAPI document: 9.1.6
 * 
 * (C) Copyright HCL Technologies Limited 2021
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 * @interface ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
 */
export interface ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest {
    /**
     * List of OrderItems whose allocations should be released.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outReverse?: string;
    /**
     * The orders from which OrderItems is moved.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    fromOrderId?: string;
    /**
     * The valid value of this parameter is 1 or 0. The default value is 0. If the parameter createIfEmpty is specified to 1 and there is no transferred order items, a new empty order is created when either the toOrderId parameter is ** or the toOrderId parameter is .**. but there is no current pending order. The symbol \"**\" means to create new pending order; the symbol \".**.\" means to create new pending order if there are no pending orders currently.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    createIfEmpty?: string;
    /**
     * List of OrderItems whose allocations should be released.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inReverse?: string;
    /**
     * The reference number of an output order.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outOrderName?: string;
    /**
     * List of the OrderItems that should be merged with other OrderItems in the same order and with the same correlationGroup attribute, if possible.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outRemerge?: string;
    /**
     * List of OrderItems that should be allocated from existing inventory.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outAllocate?: string;
    /**
     * List of OrderItems that should be allocated from existing inventory.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inAllocate?: string;
    /**
     * The input OrderItems to move.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    fromOrderItemId?: string;
    /**
     * The destination order for the output OrderItems.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    toOrderId?: string;
    /**
     * Whether the auto added order items is moved.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    moveAutoAddedOrderItems?: string;
    /**
     * List of OrderItems that should be checked on inventory.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inCheck?: string;
    /**
     * List of OrderItems that should be merged with other OrderItems in the same order if possible, regardless of their correlationGroup attributes.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outMerge?: string;
    /**
     * List of OrderItems that should be merged with other OrderItems in the same order if possible, regardless of their correlationGroup attributes.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inMerge?: string;
    /**
     * Whether the inventory action is performed.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    doInventory?: string;
    /**
     * Whether orders should be deleted if no OrderItems remain when the OrderItems are moved.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    deleteIfEmpty?: string;
    /**
     * List of OrderItems that should be allocated from expected inventory.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outBackorder?: string;
    /**
     * Whether the promotion code is merged into the target order.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    moveOrderPromotionCode?: string;
    /**
     * The reference number of an input order.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inOrderName?: string;
    /**
     * Whether the price information for all of the order items is refreshed.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    refreshContractAndOffer?: string;
    /**
     * The reference number of an output OrderItem.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outOrderItemName?: string;
    /**
     * List of OrderItems that should be allocated from expected inventory.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inBackorder?: string;
    /**
     * List of OrderItems that should be checked on inventory.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    outCheck?: string;
    /**
     * List of OrderItems that should be merged with other OrderItems in the same order and with the same correlationGroup attribute, if possible.
     * @type {string}
     * @memberof ComIbmCommerceRestOrderHandlerCartHandlerOrderItemMoveRequest
     */
    inRemerge?: string;
}


