{
  "openapi": "3.0.1",
  "info": {
    "title": "HCL Commerce Services - Cart",
    "description": "These services provide APIs related to the shopping cart in a B2C store. Use these classes to: <ul><li>Get, add, update, or delete payment instructions</li><li>Get, add, update, or delete items in the shopping cart</li><li>Get the billing address</li><li>Calculate order prices</li><li>Lock or unlock the cart</li><li>Checkout</li><li>Get or update shipping information</li></ul>",
    "version": "9.1.6"
  },
  "servers": [
    {
      "url": "https://localhost/wcs/resources"
    }
  ],
  "tags": [
    {
      "name": "Payment Instruction",
      "description": "This class provides RESTful services to get, add, update, or delete payment instructions."
    },
    {
      "name": "Cart",
      "description": "This class provides RESTful services to get, add, update, or delete items in the shopping cart, calculate order price, get the billing address, lock or unlock the cart, checkout, and many other things. It also provides services to get usable shipping and payment information by delegating to the Order BOD service."
    },
    {
      "name": "Shipping Info",
      "description": "This class provides RESTful services to get or update shipping information."
    },
    {
      "name": "assigned_coupon",
      "description": "This class provides RESTful services to add, get, update, and delete assigned coupons for the current shopping cart."
    },
    {
      "name": "assigned_promotion_code",
      "description": "This class provides RESTful services to add, get, update, and delete assigned promotion codes for the current shopping cart."
    }
  ],
  "paths": {
    "/store/{storeId}/cart/@self/usable_shipping_mode": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Gets usable shipping information for the shopping cart by address.",
        "operationId": "getUsableShippingMode",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "10001",
                "10051",
                "10101",
                "10151",
                "10201",
                "10202"
              ]
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting at 1. Valid values include positive integers of 1 and above. The \"pageSize\" must be specified for paging to work.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values include positive integers of 1 and above. The \"pageNumber\" must be specified for paging to work.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "The order ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "content": {}
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource couldn't be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/shipping_info": {
      "get": {
        "tags": [
          "Shipping Info"
        ],
        "summary": "Get shipping instructions",
        "description": "Gets shipping information for the shopping cart.",
        "operationId": "ShippingInfo-getShippingInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "langId",
            "in": "query",
            "description": "Language identifier. If not specified, the \"locale\" parameter is used. If \"locale\" is not specified, then the store default language is used.",
            "schema": {
              "type": "string",
              "enum": [
                -1,
                -2,
                -3,
                -4,
                -5,
                -6,
                -7,
                -8,
                -9,
                -10,
                -20,
                -21,
                -22,
                -23
              ]
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale to use for example, locale=en_US. If the \"langId\" parameter is specified, the \"locale\" parameter is ignored. If no locale is specified, the store default locale is used.",
            "schema": {
              "type": "string",
              "enum": [
                "en_US",
                "fr_FR",
                "de_DE",
                "it_IT",
                "es_ES",
                "pt_BR",
                "zh_CN",
                "zh_TW",
                "ko_KR",
                "ja_JP",
                "ru_RU",
                "ro_RO",
                "pl_PL",
                "ar_EG"
              ]
            }
          },
          {
            "name": "forUser",
            "in": "query",
            "description": "User name to act on behalf of.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forUserId",
            "in": "query",
            "description": "User identifier to act on behalf of.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-shipping_info"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-shipping_info"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-shipping_info"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-shipping_info"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Shipping Info"
        ],
        "summary": "Update shipping information",
        "description": "Updates shipping information for the shopping cart.",
        "operationId": "ShippingInfo-updateOrderShippingInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "forUser",
            "in": "query",
            "description": "User name to act on behalf of.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forUserId",
            "in": "query",
            "description": "User identifier to act on behalf of.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.ShippingInfoHandler-UpdateShippingInfoBodyDescription"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.ShippingInfoHandler-UpdateShippingInfoBodyDescription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cartUpdate"
                },
                "example": {
                  "orderId": "25206",
                  "orderItem": [
                    {
                      "orderItemId": "85205"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cartUpdate"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cartUpdate"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cartUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Check out",
        "description": "Checks out the shopping cart.",
        "operationId": "Cart-checkOut",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for checkout.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CheckoutRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                },
                "example": {
                  "orderId": "25206"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/{orderId}/csrcancel_order": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Cancel order (CSR)",
        "description": "Allows the CSR to cancel the specified order.",
        "operationId": "Cart-csrCancelOrder",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "forcedCancel",
            "in": "query",
            "description": "This parameter is used to cancel an order that has deposited payment.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/move_order_item": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Move order items",
        "description": "Moves order items from one order to another.",
        "operationId": "Cart-moveOrderItem",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request body for MoveOrderItem.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderItemMoveRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderItemMoveRequest"
                },
                "example": {
                  "orderId": [
                    "14029",
                    "14029"
                  ],
                  "redirecturl": "RESTOrderCalculate?URL=http://localhost/webapp/wcs/stores/servlet/en/aurora?calculationUsageId=-1&calculationUsageId=-2&deleteCartCookie=true",
                  "viewTaskName": "RedirectView"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderItemMoveRequest"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderItemMoveRequest"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderItemMoveRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/pattribute/{initKey_referenceNumber}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get terms and conditions",
        "description": "Gets payment attribute order information for the terms and conditions ID.",
        "operationId": "Cart-getPAttributeDataBean",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initKey_referenceNumber",
            "in": "path",
            "description": "The referenceNumber key of the access bean.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/punchoutPaymentInfo": {
      "get": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Get punch-out payment instructions",
        "description": "Gets payment instruction for the punch-out payment.",
        "operationId": "PaymentInstruction-getPunchoutPaymentInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "piId",
            "in": "query",
            "description": "The payment instruction identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "The currency code to use for example, currency=USD. If no currency code is specified, the store default currency is used.",
            "schema": {
              "type": "string",
              "enum": [
                "JPY",
                "CNY",
                "BRL",
                "EUR",
                "RON",
                "RUB",
                "PLN",
                "USD",
                "KRW",
                "TWD",
                "CAD",
                "GBP"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/update_reward_option": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Update reward option",
        "description": "Updates the reward option.",
        "operationId": "Cart-updateRewardOption",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request body for updating a reward option.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/calculate": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Calculate order price",
        "description": "Calculates the price of the order.",
        "operationId": "Cart-calculateOrder1",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The body data required for the REST method.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CalculateOrderRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                },
                "example": {
                  "orderId": [
                    "14029"
                  ],
                  "viewTaskName": "RedirectView"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction": {
      "get": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Get payment instructions",
        "description": "Gets payment instructions for the shopping cart.",
        "operationId": "PaymentInstruction-getPaymentInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "The currency code to use for example, currency=USD. If no currency code is specified, the store default currency is used.",
            "schema": {
              "type": "string",
              "enum": [
                "JPY",
                "CNY",
                "BRL",
                "EUR",
                "RON",
                "RUB",
                "PLN",
                "USD",
                "KRW",
                "TWD",
                "CAD",
                "GBP"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-payment_instruction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Update payment instructions",
        "description": "Updates a payment instruction in the shopping cart.",
        "operationId": "PaymentInstruction-updatePaymentInstruction",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cart-payment_instruction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/cart-payment_instruction"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Add payment instructions",
        "description": "Adds payment instructions to the shopping cart.",
        "operationId": "PaymentInstruction-addPaymentInstruction",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The body data required for the REST method.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cart-payment_instruction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/cart-payment_instruction"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                },
                "example": {
                  "orderId": "25206",
                  "paymentInstruction": [
                    {
                      "piId": "14018"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList"
                }
              }
            }
          },
          "201": {
            "description": "The requested resource has been created.",
            "content": {}
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Delete payment instructions",
        "description": "Deletes all payment instructions from the shopping cart.",
        "operationId": "PaymentInstruction-deleteAllPaymentInstructions",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/update_order_item": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Update order items",
        "description": "Updates one or more order items in the shopping cart.",
        "operationId": "Cart-updateOrderItem",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Update order item body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                },
                "example": {
                  "orderId": "25207"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/buyer_purchase_order/{buyerPurchaseOrderId}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get purchase order information",
        "description": "Gets buyer purchase order information for the specified buyer purchase order ID.",
        "operationId": "Cart-getBuyerPurchaseOrderDataBean",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerPurchaseOrderId",
            "in": "path",
            "description": "The buyer purchase order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/copy_order": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Copy order",
        "description": "Copies the order into a new order.",
        "operationId": "Cart-copyOrder",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for copy order.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CopyOrderRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CopyOrderRequest"
                },
                "example": {
                  "orderId": [
                    "25040"
                  ],
                  "viewTaskName": "RedirectView"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CopyOrderRequest"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CopyOrderRequest"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CopyOrderRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/payment_token": {
      "get": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "fetch payment token data.",
        "description": "Gets payment instructions for the shopping cart.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_token",
            "in": "query",
            "description": "payment_token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_method",
            "in": "query",
            "description": "payment_method",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string/{plainString}": {
      "get": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Get sensitive data mask information",
        "description": "Gets sensitive data mask information for plain string.",
        "operationId": "PaymentInstruction-getSensitiveDataMaskByPlainString",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plainString",
            "in": "path",
            "description": "The plain string for the sensitive data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                },
                "example": {
                  "resultList": [
                    {
                      "maskedString": "************1111",
                      "plainLength": -4,
                      "maskChar": "*"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string": {
      "get": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Get sensitive data mask information",
        "description": "Gets sensitive data mask information for plain string.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "The plain string for the sensitive data.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                },
                "example": {
                  "resultList": [
                    {
                      "maskedString": "************1111",
                      "plainLength": -4,
                      "maskChar": "*"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/shipping_modes": {
      "get": {
        "tags": [
          "Shipping Info"
        ],
        "summary": "Get shipping modes",
        "description": "Gets shipping modes for the shopping cart.",
        "operationId": "Cart-getAllowableShippingModes",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The locale to use for example, locale=en_US. If the \"langId\" parameter is specified, the \"locale\" parameter is ignored. If no locale is specified, the store default locale is used.",
            "schema": {
              "type": "string",
              "enum": [
                "en_US",
                "fr_FR",
                "de_DE",
                "it_IT",
                "es_ES",
                "pt_BR",
                "zh_CN",
                "zh_TW",
                "ko_KR",
                "ja_JP",
                "ru_RU",
                "ro_RO",
                "pl_PL",
                "ar_EG"
              ]
            }
          },
          {
            "name": "langId",
            "in": "query",
            "description": "Language identifier. If not specified, the \"locale\" parameter is used. If \"locale\" is not specified, then the store default language is used.",
            "schema": {
              "type": "string",
              "enum": [
                -1,
                -2,
                -3,
                -4,
                -5,
                -6,
                -7,
                -8,
                -9,
                -10,
                -20,
                -21,
                -22,
                -23
              ]
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes"
                },
                "example": {
                  "usableShippingMode": [
                    {
                      "field2": "1 to 3 business days",
                      "shipModeCode": "International Priority",
                      "shipModeDescription": "International Priority",
                      "shipModeId": "10054"
                    },
                    {
                      "field2": "7 to 14 business days",
                      "shipModeCode": "International Regular",
                      "shipModeDescription": "International Regular",
                      "shipModeId": "10055"
                    },
                    {
                      "shipModeCode": "PickupInStore",
                      "shipModeDescription": "Pickup in store",
                      "shipModeId": "10001"
                    },
                    {
                      "field2": "2 business days",
                      "shipModeCode": "US - 2-Day Express Delivery",
                      "shipModeDescription": "US - 2-Day Express Delivery",
                      "shipModeId": "10053"
                    },
                    {
                      "field2": "1 business day",
                      "shipModeCode": "US - Overnight Delivery",
                      "shipModeDescription": "US - Overnight Delivery",
                      "shipModeId": "10052"
                    },
                    {
                      "field2": "5 to 10 business days",
                      "shipModeCode": "US Regular Delivery",
                      "shipModeDescription": "US - Regular Delivery",
                      "shipModeId": "10051"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/repay": {
      "post": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Process payment punch-out request",
        "description": "Processes the punch-out payment requests.",
        "operationId": "PaymentInstruction-repay",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "piId",
            "in": "query",
            "description": "The payment instruction identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{orderId}/set_pending_order": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Set pending order",
        "description": "Sets the specified order as the pending order.",
        "operationId": "Cart-setPendingOrder",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for SetPendingOrder.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-SetPendingOrderRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-SetPendingOrderRequest"
                },
                "example": {
                  "orderId": [
                    "25039"
                  ],
                  "viewTaskName": "RedirectView"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-SetPendingOrderRequest"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-SetPendingOrderRequest"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-SetPendingOrderRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/{cartId}/lockOnBehalf": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Lock cart (buyer administrator)",
        "description": "Allows the buyer administrator or CSR to lock the shopping cart. The administrator must have already established a session to act on behalf of a user.",
        "operationId": "Cart-lockCartOnBehalf",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "Order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "forUser",
            "in": "query",
            "description": "User name to act on behalf of.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forUserId",
            "in": "query",
            "description": "User identifier to act on behalf of.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/{paymentInstruction_id}": {
      "delete": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Delete payment instructions",
        "description": "Deletes payment instructions from the shopping cart.",
        "operationId": "PaymentInstruction-deletePaymentInstruction",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentInstruction_id",
            "in": "path",
            "description": "Payment instruction identifier to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{orderId}/schedule_order": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Create scheduled order",
        "description": "Creates a scheduled order. The order is related to a scheduled job.",
        "operationId": "Cart-scheduleOrder",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for scheduleOrder.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderScheduleRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderScheduleRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderScheduleRequest"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderScheduleRequest"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderScheduleRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add items",
        "description": "Adds one or more order items to the shopping cart.",
        "operationId": "Cart-addOrderItem",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for AddOrderItem.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                },
                "example": {
                  "orderId": "25207",
                  "orderItem": [
                    {
                      "orderItemId": "85206"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              }
            }
          },
          "201": {
            "description": "The requested resource has been created.",
            "content": {}
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/usable_shipping_info": {
      "get": {
        "tags": [
          "Shipping Info"
        ],
        "summary": "Get shipping information",
        "description": "Gets shipping information for the shopping cart.",
        "operationId": "Cart-getUsableShippingInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "The order ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                },
                "example": {
                  "orderId": "25207",
                  "resourceId": "https://localhost:443/wcs/resources/store/10001/cart/@self/usable_shipping_info?pageSize=1&pageNumber=1&orderId=25207&responseFormat=json",
                  "orderItem": [
                    {
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "usableShippingAddress": [
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "orderItemId": "85206",
                      "usableShippingMode": [
                        {
                          "carrier": "International Carrier",
                          "shipModeCode": "International Priority",
                          "description": "International Priority",
                          "language": -1,
                          "shipModeId": "10054"
                        },
                        {
                          "carrier": "International Carrier",
                          "shipModeCode": "International Regular",
                          "description": "International Regular",
                          "language": -1,
                          "shipModeId": "10055"
                        },
                        {
                          "shipModeCode": "PickupInStore",
                          "description": "Pickup in store",
                          "language": -1,
                          "shipModeId": "10001"
                        },
                        {
                          "carrier": "XYZ Carrier",
                          "shipModeCode": "US - 2-Day Express Delivery",
                          "description": "US - 2-Day Express Delivery",
                          "language": -1,
                          "shipModeId": "10053"
                        },
                        {
                          "carrier": "XYZ Carrier",
                          "shipModeCode": "US - Overnight Delivery",
                          "description": "US - Overnight Delivery",
                          "language": -1,
                          "shipModeId": "10052"
                        },
                        {
                          "carrier": "XYZ Carrier",
                          "shipModeCode": "US Regular Delivery",
                          "description": "US - Regular Delivery",
                          "language": -1,
                          "shipModeId": "10051"
                        }
                      ]
                    }
                  ],
                  "resourceName": "cart",
                  "usableShippingAddress": [
                    {
                      "nickName": "jane",
                      "addressId": "15308"
                    },
                    {
                      "nickName": "john",
                      "addressId": "15309"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_shipping_info"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/renew_order_items": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Renew inventory status",
        "description": "Renews inventory status, price and address ID for order items. Remove order items that are out of stock.",
        "operationId": "Cart-orderItemDisplay",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/applyCheckoutProfile": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Apply quick checkout profile",
        "description": "Applies the quick checkout profile to the shopping cart.",
        "operationId": "Cart-applyCheckoutProfile",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Request body required for apply checkout profile.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/{orderId}/calculate": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Calculate order price",
        "description": "Calculates the price of the order.",
        "operationId": "Cart-calculateOrder2",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for calculate order.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CalculateOrderRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/usable_billing_address/{orderId}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get billing address",
        "description": "Gets billing address information for the specified order ID.",
        "operationId": "Cart-getUsableBillingAddressListTCDataBean",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentTCId",
            "in": "query",
            "description": "The payment Term & Condition identifier for this payment instruction.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{orderId}/cancel_order": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Cancel order",
        "description": "Cancels the specified order.",
        "operationId": "Cart-cancelOrder",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "forcedCancel",
            "in": "query",
            "description": "This parameter is used to cancel an order that has deposited payment.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                },
                "example": {
                  "viewTaskName": "RedirectView"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_instruction/callback": {
      "post": {
        "tags": [
          "Payment Instruction"
        ],
        "summary": "Process punch-out call back request",
        "description": "Processes punch-out call back requests.",
        "operationId": "PaymentInstruction-punchoutPaymentCallBack",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/usable_payment_info": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get payment information",
        "description": "Gets payment information for the shopping cart.",
        "operationId": "Cart-getUsablePaymentInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "The order ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_payment_info"
                },
                "example": {
                  "orderId": "25207",
                  "resourceId": "https://localhost:443/wcs/resources/store/10001/cart/@self/usable_payment_info?orderId=&responseFormat=json",
                  "usablePaymentInformation": [
                    {
                      "paymentTermConditionId": "",
                      "description": "Discover Credit Card",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10009",
                      "paymentMethodName": "Discover",
                      "xumet_attrPageName": "StandardDiscover"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "Cash on delivery",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10007",
                      "paymentMethodName": "COD",
                      "xumet_attrPageName": "StandardCOD"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "Bill me later",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10006",
                      "paymentMethodName": "BillMeLater",
                      "xumet_attrPageName": "StandardBillMeLater"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "MasterCard Credit Card",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10003",
                      "paymentMethodName": "Master Card",
                      "xumet_attrPageName": "StandardMasterCard"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "Pay later",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10008",
                      "paymentMethodName": "PayLater",
                      "xumet_attrPageName": "StandardPayLater"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "VISA Credit Card",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10002",
                      "paymentMethodName": "VISA",
                      "xumet_attrPageName": "StandardVisa"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "Check",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10004",
                      "paymentMethodName": "Check",
                      "xumet_attrPageName": "StandardCheck"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "American Express Credit Card",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10005",
                      "paymentMethodName": "AMEX",
                      "xumet_attrPageName": "StandardAmex"
                    },
                    {
                      "paymentTermConditionId": "",
                      "description": "Simple Punchout",
                      "language": -1,
                      "usableBillingAddress": [
                        {
                          "nickName": "Default_Billing_10001",
                          "addressId": "15810"
                        },
                        {
                          "nickName": "jane",
                          "addressId": "15308"
                        },
                        {
                          "nickName": "john",
                          "addressId": "15309"
                        }
                      ],
                      "xumet_policyId": "10010",
                      "paymentMethodName": "SimplePunchout",
                      "xumet_attrPageName": "SimplePunchout"
                    }
                  ],
                  "resourceName": "cart"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_payment_info"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_payment_info"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-usable_payment_info"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{cartId}/unlock": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Unlock cart (CSR)",
        "description": "Unlocks the shopping cart by a CSR.",
        "operationId": "Cart-unlockCart",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "Order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{orderId}/csrcancel_order_onbehalf": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Cancel order (CSR on behalf of)",
        "description": "Allows the CSR to cancel the specific order on behalf of a shopper.",
        "operationId": "Cart-csrCancelOrderOnBehalf",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "forcedCancel",
            "in": "query",
            "description": "This parameter is used to cancel an order that has deposited payment.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/precheckout": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Prepare for checkout",
        "description": "Prepares the shopping cart for checkout. This method must be called before the checkout service.",
        "operationId": "Cart-preCheckout",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request object for preCheckout.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                },
                "example": {
                  "orderId": "25206"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get order details",
        "description": "Gets order details for the shopping cart.",
        "operationId": "Cart-getCart",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "langId",
            "in": "query",
            "description": "Language identifier. If not specified, the locale parameter will be used. If locale isn't specified, then the store default language shall be used.",
            "schema": {
              "type": "string",
              "enum": [
                -1,
                -2,
                -3,
                -4,
                -5,
                -6,
                -7,
                -8,
                -10,
                -20,
                -21,
                -9,
                -22,
                -23
              ]
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Valid values are positive integers starting at 1. Use pageNumber with pageSize.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Used to limit the amount of data returned by a query. Valid values are integers starting with 1. Use pageSize with pageNumber.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "The currency code to use for example, currency=USD. If no currency code is specified, the store default currency is used.",
            "schema": {
              "type": "string",
              "enum": [
                "JPY",
                "CNY",
                "BRL",
                "EUR",
                "RON",
                "RUB",
                "PLN",
                "USD",
                "KRW",
                "TWD",
                "CAD",
                "GBP"
              ]
            }
          },
          {
            "name": "sortOrderItemBy",
            "in": "query",
            "description": "The sort order of the results for example, sort by orderItemID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string",
              "enum": [
                "IBM_Summary",
                "IBM_Details"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cart"
                },
                "example": {
                  "orderId": "14029",
                  "grandTotal": "600.00000",
                  "orderItem": [
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "middleName": "",
                      "createDate": "2014-11-06T19:54:28.619Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-24T20:35:44.084Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "30021",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "30021",
                      "firstName": "",
                      "orderItemInventoryStatus": "Available",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "lastUpdateDate": "2014-11-24T20:35:41.847Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "middleName": "",
                      "createDate": "2014-11-06T20:13:42.317Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-24T20:35:44.098Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "35016",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "35016",
                      "firstName": "",
                      "orderItemInventoryStatus": "Available",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "lastUpdateDate": "2014-11-24T20:35:41.847Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "middleName": "",
                      "createDate": "2014-11-06T20:27:26.112Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-24T20:35:44.100Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "35195",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "35195",
                      "firstName": "",
                      "orderItemInventoryStatus": "Available",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "lastUpdateDate": "2014-11-24T20:35:41.847Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "middleName": "",
                      "createDate": "2014-11-10T16:35:48.600Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-24T20:35:44.101Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "35374",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "35374",
                      "firstName": "",
                      "orderItemInventoryStatus": "Available",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "lastUpdateDate": "2014-11-24T20:35:41.847Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "middleName": "",
                      "createDate": "2014-11-11T00:32:42.188Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-24T20:35:44.102Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "40016",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "40016",
                      "firstName": "",
                      "orderItemInventoryStatus": "Available",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "lastUpdateDate": "2014-11-24T20:35:41.848Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "lastUpdateDate": "2014-11-24T20:35:42.075Z",
                      "middleName": "",
                      "createDate": "2014-11-17T20:10:06.441Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-25T20:35:44.104Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "45016",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "45016",
                      "firstName": "",
                      "orderItemInventoryStatus": "Allocated",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "availableDate": "2014-11-24T20:35:42.069Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "lastUpdateDate": "2014-11-24T20:35:42.102Z",
                      "middleName": "",
                      "createDate": "2014-11-19T20:46:25.449Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-25T20:35:44.106Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "50016",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "50016",
                      "firstName": "",
                      "orderItemInventoryStatus": "Allocated",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "availableDate": "2014-11-24T20:35:42.101Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "lastUpdateDate": "2014-11-24T20:35:42.121Z",
                      "middleName": "",
                      "createDate": "2014-11-20T06:16:21.229Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-25T20:35:44.109Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "75193",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "75193",
                      "firstName": "",
                      "orderItemInventoryStatus": "Allocated",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "availableDate": "2014-11-24T20:35:42.120Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "lastUpdateDate": "2014-11-24T20:35:42.141Z",
                      "middleName": "",
                      "createDate": "2014-11-20T08:22:50.535Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-25T20:35:44.115Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "80053",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "80053",
                      "firstName": "",
                      "orderItemInventoryStatus": "Allocated",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "availableDate": "2014-11-24T20:35:42.141Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    },
                    {
                      "orderItemFulfillmentStatus": "Unreleased",
                      "addressId": -1000,
                      "personTitle": "",
                      "shipModeLanguage": -1,
                      "language": -1,
                      "unitUom": "C62",
                      "currency": "USD",
                      "totalAdjustment": {
                        "currency": "USD",
                        "value": "0.00000"
                      },
                      "email2": "",
                      "shippingChargeCurrency": "USD",
                      "UOM": "C62",
                      "email1": "",
                      "city": "",
                      "salesTaxCurrency": "USD",
                      "lastUpdateDate": "2014-11-24T20:35:42.164Z",
                      "middleName": "",
                      "createDate": "2014-11-24T16:22:46.067Z",
                      "offerID": "13011",
                      "shippingCharge": "0.00000",
                      "state": "",
                      "shipModeCode": "US Regular Delivery",
                      "isExpedited": "false",
                      "fax1": "",
                      "freeGift": "false",
                      "postalCode": "",
                      "shipModeDescription": "US - Regular Delivery",
                      "nickName": "wcsadmin",
                      "expectedShipDate": "2014-11-25T20:35:44.117Z",
                      "productId": "13011",
                      "shippingTaxCurrency": "USD",
                      "description": "US - Regular Delivery",
                      "fulfillmentCenterName": "Aurora",
                      "phone2": "",
                      "xitem_field1": "1",
                      "shippingTax": "0.00000",
                      "phone1": "",
                      "zipCode": "",
                      "fulfillmentCenterId": "10001",
                      "fax2": "",
                      "phone2Publish": "true",
                      "quantity": "3.0",
                      "unitPrice": "20.00000",
                      "correlationGroup": "85053",
                      "orderItemPrice": "60.00000",
                      "contractId": "10001",
                      "unitQuantity": "1.0",
                      "orderItemStatus": "P",
                      "orderItemId": "85053",
                      "firstName": "",
                      "orderItemInventoryStatus": "Allocated",
                      "country": "",
                      "lastName": "wcsadmin",
                      "stateOrProvinceName": "",
                      "xitem_field2": "2.0",
                      "availableDate": "2014-11-24T20:35:42.164Z",
                      "addressLine": [
                        "",
                        "",
                        ""
                      ],
                      "carrier": "XYZ Carrier",
                      "xitem_isPersonalAddressesAllowedForShipping": "true",
                      "phone1Publish": "true",
                      "partNumber": "HTA029_292001",
                      "salesTax": "0.00000",
                      "usableShippingChargePolicy": [
                        {
                          "type": "ShippingCharge",
                          "name": "StandardShippingChargeBySeller",
                          "uniqueID": -7001
                        }
                      ],
                      "shipModeId": "10051"
                    }
                  ],
                  "resourceId": "http://localhost:80/wcs/resources/store/10001/cart/@self?pageSize=50&pageNumber=1&responseFormat=json",
                  "totalProductPriceCurrency": "USD",
                  "totalAdjustment": "0.00000",
                  "orderStatus": "P",
                  "totalShippingChargeCurrency": "USD",
                  "resourceName": "cart",
                  "orgDistinguishedName": "o=root organization",
                  "recordSetComplete": "true",
                  "totalShippingTax": "0.00000",
                  "prepareIndicator": "false",
                  "x_isPurchaseOrderNumberRequired": "false",
                  "totalShippingTaxCurrency": "USD",
                  "grandTotalCurrency": "USD",
                  "totalSalesTaxCurrency": "USD",
                  "storeUniqueID": "10001",
                  "buyerId": -1000,
                  "orgUniqueID": -2001,
                  "x_trackingIds": "",
                  "recordSetStartNumber": "0",
                  "shipAsComplete": "true",
                  "recordSetCount": "10",
                  "totalProductPrice": "600.00000",
                  "totalAdjustmentCurrency": "USD",
                  "totalShippingCharge": "0.00000",
                  "locked": "false",
                  "storeNameIdentifier": "Aurora",
                  "lastUpdateDate": "2014-11-24T20:35:42.165Z",
                  "buyerDistinguishedName": "uid=wcsadmin,o=root organization",
                  "totalSalesTax": "0.00000",
                  "x_isPersonalAddressesAllowedForShipping": "true",
                  "recordSetTotal": "10"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cart"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cart"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-cart"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete items",
        "description": "Deletes all order items from the shopping cart.",
        "operationId": "Cart-cancelOrderInCart",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully."
          },
          "204": {
            "description": "The requested completed successfully. No content is returned in the response.",
            "content": {}
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{cartId}/unlockOnBehalf": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Unlock cart (buyer administrator)",
        "description": "Allows the buyer administrator or CSR to unlock the shopping cart. The administrator must have already established a session to act on behalf of a user.",
        "operationId": "Cart-unlockCartOnBehalf",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "Order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "forUser",
            "in": "query",
            "description": "User name to act on behalf of.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forUserId",
            "in": "query",
            "description": "User identifier to act on behalf of.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/payment_policy_list": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get payment policy list",
        "description": "Lists payment policies for the store.",
        "operationId": "Cart-getPaymentPolicyListDataBean",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed"
                },
                "example": {
                  "resultList": [
                    {
                      "secondaryRC": -1,
                      "paymentPolicyInfoUsableWithoutTA": [
                        {
                          "policyName": "Discover",
                          "attrPageName": "StandardDiscover",
                          "longDescription": "Discover Credit Card",
                          "policyType": "Payment",
                          "policyId": "10009",
                          "shortDescription": "Discover Credit Card"
                        },
                        {
                          "policyName": "COD",
                          "attrPageName": "StandardCOD",
                          "longDescription": "Customer will pay cash on delivery",
                          "policyType": "Payment",
                          "policyId": "10007",
                          "shortDescription": "Cash on delivery"
                        },
                        {
                          "policyName": "BillMeLater",
                          "attrPageName": "StandardBillMeLater",
                          "longDescription": "Bill customer later",
                          "policyType": "Payment",
                          "policyId": "10006",
                          "shortDescription": "Bill me later"
                        },
                        {
                          "policyName": "Master Card",
                          "attrPageName": "StandardMasterCard",
                          "longDescription": "MasterCard Credit Card",
                          "policyType": "Payment",
                          "policyId": "10003",
                          "shortDescription": "MasterCard Credit Card"
                        },
                        {
                          "policyName": "PayLater",
                          "attrPageName": "StandardPayLater",
                          "longDescription": "Customer will pay later",
                          "policyType": "Payment",
                          "policyId": "10008",
                          "shortDescription": "Pay later"
                        },
                        {
                          "policyName": "VISA",
                          "attrPageName": "StandardVisa",
                          "longDescription": "VISA Credit Card",
                          "policyType": "Payment",
                          "policyId": "10002",
                          "shortDescription": "VISA Credit Card"
                        },
                        {
                          "policyName": "Check",
                          "attrPageName": "StandardCheck",
                          "longDescription": "Payment by Check",
                          "policyType": "Payment",
                          "policyId": "10004",
                          "shortDescription": "Check"
                        },
                        {
                          "policyName": "AMEX",
                          "attrPageName": "StandardAmex",
                          "longDescription": "American Express Credit Card",
                          "policyType": "Payment",
                          "policyId": "10005",
                          "shortDescription": "American Express Credit Card"
                        },
                        {
                          "policyName": "PayInStore",
                          "attrPageName": "StandardCOD",
                          "longDescription": "Pay In Store",
                          "policyType": "Payment",
                          "policyId": -10021,
                          "shortDescription": "Pay In Store"
                        },
                        {
                          "policyName": "SimplePunchout",
                          "attrPageName": "SimplePunchout",
                          "longDescription": "Simple Punchout",
                          "policyType": "Payment",
                          "policyId": "10010",
                          "shortDescription": "Simple Punchout"
                        }
                      ],
                      "message": "",
                      "primaryRC": -1
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/create_order": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Create order",
        "description": "Creates an order.",
        "operationId": "Cart-createOrder",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The body data required for the REST method.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CreateOrderRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                },
                "example": {
                  "redirecturl": "",
                  "outOrderId": "25041",
                  "viewTaskName": "RedirectView"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/add_preconfiguration_to_cart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add order item",
        "description": "Adds a pre-configuration of a dynamic kit to the cart.",
        "operationId": "Cart-addPreConfigurationOrderItem",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request body for adding a dynamic kit configuration to cart.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddPreConfigurationToCartRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },	 
    "/store/{storeId}/cart/@self/delete_order_item": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete order item",
        "description": "Deletes the specified order item from the order.",
        "operationId": "Cart-deleteOrderItem",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request body for deleting an order item.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-DeleteOrderItemRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/{cartId}/lock": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Lock cart (CSR)",
        "description": "Allows the CSR to lock the shopping cart.",
        "operationId": "Cart-lockCart",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "Order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                },
                "example": {
                  "orderId": "25012"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/{orderId}/usable_ship_charges_by_ship_mode": {
      "get": {
        "tags": [
          "Shipping Info"
        ],
        "summary": "Get shipping charge",
        "description": "Gets usable shipping charge information for the specified order ID.",
        "operationId": "Cart-getUsableShipChargesByShipMode",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "profileName",
            "in": "query",
            "description": "Profile name. Profiles determine the subset of data returned by a query.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode"
                },
                "example": {
                  "resultList": [
                    {
                      "shipChargesByShipMode": [
                        {
                          "shipModeDesc": "US - Regular Delivery",
                          "shippingChargeTypes": [
                            {
                              "policyName": "StandardShippingChargeBySeller",
                              "internalPolicyId": -7001,
                              "policyDescription": "Shipping charged by seller",
                              "selected": true,
                              "policyId": "StandardShippingChargeBySeller"
                            }
                          ],
                          "numberOfShipChargeTypes": 1,
                          "shipModeId": "11051"
                        }
                      ],
                      "isShipChargesExist": true,
                      "numberOfShipModes": 1
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/assigned_coupon": {
      "get": {
        "tags": [
          "assigned_coupon"
        ],
        "summary": "Gets assigned coupons for the shopping cart.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_coupon"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_coupon"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_coupon"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_coupon"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "assigned_coupon"
        ],
        "summary": "Applies coupons to the shopping cart.",
        "operationId": "applyCoupon",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "10001",
                "10501",
                "11001",
                "1",
                "11501",
                "2"
              ]
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request body for applying a coupon to the shopping cart.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponResponse"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponResponse"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponResponse"
                }
              }
            }
          },
          "201": {
            "description": "The requested resource has been created.",
            "content": {}
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "content": {}
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/store/{storeId}/cart/@self/assigned_coupon/{couponId}": {
      "delete": {
        "tags": [
          "assigned_coupon"
        ],
        "summary": "Removes coupons from the shopping cart.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "couponId",
            "in": "path",
            "description": "Coupon identifier..",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.RemoveCouponResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.RemoveCouponResponse"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.RemoveCouponResponse"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedCouponHandler.RemoveCouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/assigned_promotion_code": {
      "get": {
        "tags": [
          "assigned_promotion_code"
        ],
        "summary": "Gets assigned promotion codes for the shopping cart.",
        "operationId": "getAssignedPromotioncodeInfo",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "10001",
                "10501",
                "11001",
                "1",
                "11501",
                "2"
              ]
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_promotion_code"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_promotion_code"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_promotion_code"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/cart-assigned_promotion_code"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "content": {}
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource couldn't be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "assigned_promotion_code"
        ],
        "summary": "Applies promotion codes to the shopping cart.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "0",
                "10001",
                "10501",
                "11001",
                "1",
                "11501",
                "2"
              ]
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "The request body for applying promotion codes to the shopping cart.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeResponse"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeResponse"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeResponse"
                }
              }
            }
          },
          "201": {
            "description": "The requested resource has been created.",
            "content": {}
          },
          "400": {
            "description": "Bad request. Some of the inputs provided to the request aren't valid.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session isn't valid.",
            "content": {}
          },
          "403": {
            "description": "The user isn't authorized to perform the specified request.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. Additional details will be contained on the server logs.",
            "content": {}
          }
        }
      }
    },
    "/store/{storeId}/cart/@self/assigned_promotion_code/{promoCode}": {
      "delete": {
        "tags": [
          "assigned_promotion_code"
        ],
        "summary": "Removes promotion codes from the shopping cart.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "The store identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promoCode",
            "in": "path",
            "description": "The promotion code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseFormat",
            "in": "query",
            "description": "The response format. Valid values are json and xml. If the request contains an input body, it must use the format specified in responseFormat. If the responseFormat is not specified, the accept  HTTP header determines the format of the response. If the accept  HTTP header is not specified then default response format is json.",
            "schema": {
              "type": "string",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.RemovePromotionCodeResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.RemovePromotionCodeResponse"
                }
              },
              "application/xhtml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.RemovePromotionCodeResponse"
                }
              },
              "application/atom+xml": {
                "schema": {
                  "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.RemovePromotionCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {}
          },
          "401": {
            "description": "Not authenticated. The user session is not valid.",
            "content": {}
          },
          "403": {
            "description": "The user is not authorized to perform the specified request.",
            "content": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {}
          },
          "500": {
            "description": "Internal server error. For details, see the server log files.",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary": {
        "type": "object",
        "properties": {
          "resultList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-CheckoutRequest-OrderExtendAttributeBodyDescription": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "Attribute name."
          },
          "attributeType": {
            "type": "string",
            "description": "Attribute type."
          },
          "attributeValue": {
            "type": "string",
            "description": "Attribute value."
          }
        },
        "description": "Description of order extended attribute."
      },
      "cart-cartUpdate_item.orderItem.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.ShippingInfoHandler-UpdateShippingInfoBodyDescription": {
        "required": [
          "orderItem",
          "shipAsComplete",
          "shipModeId",
          "x_calculationUsage"
        ],
        "type": "object",
        "properties": {
          "shipAsComplete": {
            "type": "string",
            "description": "Option to ship the order as complete. Valid values include \"true\" and \"false\"."
          },
          "orderItem": {
            "type": "array",
            "description": "A list of order items.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.ShippingInfoHandler-UpdateShippingInfoBodyDescription-OrderItemBodyDescription"
            }
          },
          "shipModeId": {
            "type": "string",
            "description": "Shipping mode identifier."
          },
          "addressId": {
            "type": "string",
            "description": "Address identifier."
          },
          "x_calculationUsage": {
            "type": "string",
            "description": "Calculation usage codes."
          }
        },
        "description": "Order update shipping information."
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier": {
        "type": "object",
        "properties": {
          "calculationCodeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier"
          },
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.adjustment": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.userData"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.description"
          },
          "displayLevel": {
            "type": "string"
          },
          "calculationCodeID": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.calculationCodeID"
          },
          "amount": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.amount"
          },
          "promotionType": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "isPromotionCodeRequired": {
            "type": "boolean"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-AddPreConfigurationToCartRequest": {
        "required": [
          "orderItem"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The identifier of the Order."
          },
          "quantity": {
            "type": "string",
            "description": "The quantity of the item to be added to the order"
          },
          "calculateOrder": {
            "type": "string",
            "description": "Specifies whether OrderCalculateCmd will be called to calculate the charges for the order. 0 = do not call OrderCalculateCmd, 1 = call OrderCalculateCmd."
          },
          "calculationUsage": {
            "type": "string",
            "description": "The identifier for the type of calculation to be performed on the order."
          },
          "partNumber": {
            "type": "string",
            "description": "he part number of catalog entry."
          }
        },
        "description": "Description of the addOrderItem input body.",
        "example": {          
            "calculationUsage": "-1,-2,-3,-4,-5,-6,-7",    
			"orderId": "59772382958",			
			"quantity": "2",
			"calculateOrder": "0",    			
			"partNumber": "FSC039_390103"          
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription": {
        "required": [
          "orderItem"
        ],
        "type": "object",
        "properties": {
          "orderExtendAttribute": {
            "type": "array",
            "description": "order extended attribute",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderExtendAttributeBodyDescription"
            }
          },
          "orderId": {
            "type": "string",
            "description": "The order ID"
          },
          "orderItem": {
            "type": "array",
            "description": "list of order items",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderItemBodyDescription"
            }
          },
          "x_calculateOrder": {
            "type": "string",
            "description": "Specifies whether OrderCalculateCmd will be called to calculate the charges for the order. 0 = do not call OrderCalculateCmd, 1 = call OrderCalculateCmd."
          },
          "x_calculationUsage": {
            "type": "string",
            "description": "The identifier for the type of calculation to be performed on the order."
          },
          "x_inventoryValidation": {
            "type": "string",
            "description": "Specifies whether inventory status should be validated for adding to cart."
          }
        },
        "description": "Description of the addOrderItem input body.",
        "example": {
          "application/json": {
            "orderId": ".",
            "orderItem": [
              {
                "productId": "10706",
                "quantity": "1"
              }
            ],
            "x_calculateOrder": "0",
            "x_inventoryValidation": "true"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderExtendAttributeBodyDescription": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "attribute name"
          },
          "attributeType": {
            "type": "string",
            "description": "attribute type"
          },
          "attributeValue": {
            "type": "string",
            "description": "attribute value"
          }
        },
        "description": "Description of order extended attribute."
      },
      "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType": {
        "type": "object",
        "properties": {
          "distinguishedName": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-CalculateOrderRequest": {
        "required": [
          "calculationUsageId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          },
          "calculationUsageId": {
            "type": "string",
            "description": "Gives predefined codes for calculation of discounts (-1), shipping (-2), sales tax (-3), shipping tax (-4), coupons (-5), surcharge (-6) and shipping adjustment (-7)."
          },
          "doPrice": {
            "type": "string",
            "description": "Specifies whether the command should perform the price calculation subtasks. Set to enable the price tasks (Y), or to disable price tasks (N)."
          },
          "updatePrices": {
            "type": "string",
            "description": "Flag to indicate whether the price of order item is refreshed in this command. if the flag is \"1\", price is updated. others will not."
          },
          "outOrderName": {
            "type": "string",
            "description": "Specifies the names of name-value pairs to pass to a JSP file. The value of each added name-value pair is the reference number of the order to display. If the name is not provided, the default name <code>orderId</code> is used. This parameter can be repeated."
          },
          "doFreeGift": {
            "type": "string",
            "description": "Specifies whether the command should perform the free gift handling logic. Set to enable free gift handling, or not to handle free gifts when not required for order recalculation (N). The default value is (Y)."
          }
        },
        "description": "Body of request input for calculateOrder.",
        "example": {
          "application/json": {
            "URL": [
              "http://localhost/webapp/wcs/stores/servlet/en/aurora?calculationUsageId=-1"
            ],
            "calculationUsageId": [
              -2
            ],
            "continue": [
              "1"
            ],
            "createIfEmpty": [
              "1"
            ],
            "deleteCartCookie": [
              "true"
            ],
            "deleteIfEmpty": [
              "*"
            ],
            "fromOrderId": [
              "*"
            ],
            "orderId": [
              "14029",
              "14029"
            ],
            "page": [
              ""
            ],
            "toOrderId": [
              "."
            ],
            "updatePrices": [
              "0"
            ]
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification": {
        "type": "object",
        "properties": {
          "giftSetSpecification": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.userData"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-CreateOrderRequest": {
        "type": "object",
        "properties": {
          "outOrderName": {
            "type": "string",
            "description": "The reference number of a destination order."
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.userData"
          },
          "orderItemComponentIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.orderItemComponentIdentifier"
          },
          "configurationID": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "unitPrice": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice"
          },
          "quantity": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.quantity"
          }
        }
      },
      "com.ibm.commerce.payment.punchout.commands.PunchoutPaymentCallBackCmd": {
        "type": "object"
      },
      "cart-cartUpdate_item.orderItem.orderItemExtendAttribute": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "attributeValue": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType": {
        "type": "object",
        "properties": {
          "calculationCodeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier"
          },
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ParentInfoType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ParentInfoType.userData.userDataField"
            }
          }
        }
      },
      "cart-OrderAmount.totalTaxByTaxCategory": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "double"
          },
          "taxCategoryCode": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-RewardChoiceUpdateRequest": {
        "required": [
          "orderId",
          "rewardOptionId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The id of the order to which the reward option record is associated with."
          },
          "rewardOptionId": {
            "type": "string",
            "description": "The ID of the reward option record to update with reward choice information."
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.TaxByTaxCategoryType": {
        "type": "object",
        "properties": {
          "taxCategoryCode": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          },
          "requestAmount": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.requestAmount"
          },
          "requestTime": {
            "type": "string"
          },
          "trackingID": {
            "type": "string"
          },
          "paymentProtocolData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.paymentProtocolData"
            }
          },
          "referenceNumber": {
            "type": "string"
          },
          "transactionExtensionData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.transactionExtensionData"
            }
          },
          "paymentInstructionID": {
            "type": "string"
          },
          "merchantOrderNumber": {
            "type": "string"
          },
          "responseCode": {
            "type": "string"
          },
          "financialTransactionIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.financialTransactionIdentifier"
          },
          "reasonCode": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.userData"
          },
          "avsCode": {
            "type": "string"
          },
          "expirationTime": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.calculationCodeID": {
        "type": "object",
        "properties": {
          "calculationCodeExternalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.calculationCodeID.calculationCodeExternalIdentifier"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderItemBodyDescription-OrderItemExtendAttributeBodyDescription": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "Attribute name."
          },
          "attributeType": {
            "type": "string",
            "description": "Attribute type."
          },
          "attributeValue": {
            "type": "string",
            "description": "Attribute value."
          }
        },
        "description": "Description of orderitem extended attribute."
      },
      "cart-cart_item.promotionCode": {
        "type": "object",
        "properties": {
          "associatedPromotion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cart_item.promotionCode.associatedPromotion"
            }
          },
          "code": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-usable_payment_info": {
        "type": "object",
        "properties": {
          "orderEditor": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "orderId": {
            "type": "string"
          },
          "quoteID": {
            "type": "string"
          },
          "couponCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType"
            }
          },
          "cSRComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType"
            }
          },
          "externalOrderID": {
            "type": "string"
          },
          "usablePaymentInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsablePaymentInformation"
            }
          },
          "comments": {
            "type": "string"
          },
          "adjustmentRequirement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType"
            }
          },
          "lastUpdateDate": {
            "type": "string"
          },
          "quoteIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.QuoteIdentifierType"
          },
          "shipAsComplete": {
            "type": "string"
          },
          "buyerPONumber": {
            "type": "string"
          },
          "customerOrderNumber": {
            "type": "string"
          },
          "placedDate": {
            "type": "string"
          },
          "bLockInfo": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType"
          },
          "orderVersion": {
            "type": "string"
          },
          "promotionCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType"
            }
          },
          "channel": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType"
          }
        }
      },
      "cart-OrderIdentifier": {
        "type": "object",
        "properties": {
          "customerOrderNumber": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "externalOrderID": {
            "type": "string"
          }
        }
      },
      "cart-UsableShippingChargePolicy": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "storeId": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.StoreIdentifierType"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-SetPendingOrderRequest": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Specifies an order using the order reference number or one of the Order abbreviations. If the parameter is omitted, all the pending orders is set to current. If a specified pending order no longer exists, it is not set to current."
          },
          "outOrderName": {
            "type": "string",
            "description": "The reference number of a destination order."
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ParentInfoType.parentOrderItemIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalOrderItemID": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardSpecification": {
        "type": "object",
        "properties": {
          "giftSetSpecification": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification"
          },
          "userData": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.userData"
          }
        }
      },
      "cart-OrderItemShippingInfo": {
        "required": [
          "shippingChargeType"
        ],
        "type": "object",
        "properties": {
          "shippingAddress": {
            "$ref": "#/components/schemas/cart-ShippingAddress"
          },
          "requestedShipDate": {
            "type": "string"
          },
          "shippingChargeType": {
            "type": "string"
          },
          "shipInstruction": {
            "type": "string"
          },
          "shipTieCode": {
            "type": "string"
          },
          "shippingChargePolicyID": {
            "type": "string"
          },
          "shippingCarrierAccountNumber": {
            "type": "string"
          },
          "isExpedited": {
            "type": "string"
          },
          "shipCarrAccntNum": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-OrderItemShippingInfo.userDataField"
            }
          },
          "shippingMode": {
            "$ref": "#/components/schemas/cart-ShippingMode"
          },
          "physicalStoreId": {
            "type": "string"
          },
          "physicalStoreExternalId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-OrderItemAmount": {
        "type": "object",
        "properties": {
          "unitQuantity": {
            "type": "string",
            "format": "double"
          },
          "salesTaxCurrency": {
            "type": "string"
          },
          "shippingTaxCurrency": {
            "type": "string"
          },
          "shippingCharge": {
            "type": "string",
            "format": "double"
          },
          "unitPrice": {
            "type": "string",
            "format": "double"
          },
          "shippingTax": {
            "type": "string",
            "format": "double"
          },
          "taxByTaxCategory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.TaxByTaxCategoryType"
            }
          },
          "adjustment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-Adjustment"
            }
          },
          "unitUom": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "totalAdjustment": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-OrderItemAmount.userDataField"
            }
          },
          "alternativeCurrencyPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType"
            }
          },
          "priceOverride": {
            "type": "string"
          },
          "genericTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.GenericTotalType"
            }
          },
          "freeGift": {
            "type": "string"
          },
          "shippingChargeCurrency": {
            "type": "string"
          },
          "orderItemPrice": {
            "type": "string",
            "format": "double"
          },
          "salesTax": {
            "type": "string",
            "format": "double"
          }
        }
      },
      "cart-UsableShippingInfoOrderItem.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-UsableShippingAddress": {
        "required": [
          "nickName"
        ],
        "type": "object",
        "properties": {
          "organizationIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType"
          },
          "nickName": {
            "type": "string"
          },
          "personIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "addressId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier.calculationCodeExternalIdentifier": {
        "type": "object",
        "properties": {
          "calculationUsageID": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ChannelType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          },
          "description": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason.description"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason.userData"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderItemBodyDescription-ItemAttributesBodyDescription": {
        "required": [
          "attrName",
          "attrValue"
        ],
        "type": "object",
        "properties": {
          "attrName": {
            "type": "string",
            "description": "Attribute name."
          },
          "attrValue": {
            "type": "string",
            "description": "Attribute value."
          }
        },
        "description": "Description of item attributes."
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-OrderIdContainer": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          }
        },
        "description": "Structure containing an order identifier."
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode.userData.userDataField"
            }
          }
        }
      },
      "cart-UsablePaymentInformation": {
        "type": "object",
        "properties": {
          "paymentTermConditionId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "protocolData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsablePaymentInformation.protocolData"
            }
          },
          "usableBillingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsablePaymentInformation.usableBillingAddress"
            }
          },
          "paymentMethodName": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsablePaymentInformation.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "cart-payment_instruction.paymentInstruction.protocolData": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "cart-payment_instruction.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.GenericTotalType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "cart-OrderAmount": {
        "type": "object",
        "properties": {
          "grandTotal": {
            "type": "string",
            "format": "double"
          },
          "adjustment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-Adjustment"
            }
          },
          "totalShippingTax": {
            "type": "string",
            "format": "double"
          },
          "totalSalesTaxCurrency": {
            "type": "string"
          },
          "totalShippingTaxCurrency": {
            "type": "string"
          },
          "totalProductPrice": {
            "type": "string",
            "format": "double"
          },
          "totalTaxByTaxCategory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-OrderAmount.totalTaxByTaxCategory"
            }
          },
          "totalProductPriceCurrency": {
            "type": "string"
          },
          "grandTotalCurrency": {
            "type": "string"
          },
          "totalAdjustment": {
            "type": "string",
            "format": "double"
          },
          "totalShippingChargeCurrency": {
            "type": "string"
          },
          "totalSalesTax": {
            "type": "string",
            "format": "double"
          },
          "totalAdjustmentCurrency": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-OrderAmount.userDataField"
            }
          },
          "genericTotal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.GenericTotalType"
            }
          },
          "totalShippingCharge": {
            "type": "string",
            "format": "double"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID.calculationCodeExternalIdentifier": {
        "type": "object",
        "properties": {
          "calculationUsageID": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary": {
        "type": "object",
        "properties": {
          "resultList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary.resultList"
            }
          }
        }
      },
      "cart-ShippingMode": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "shipModeLanguage": {
            "type": "string"
          },
          "trackingURL": {
            "type": "string"
          },
          "carrier": {
            "type": "string"
          },
          "shipModeDescription": {
            "type": "string"
          },
          "shipModeId": {
            "type": "string"
          },
          "shipModeCode": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier"
          },
          "quantity": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.quantity"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier": {
        "type": "object",
        "properties": {
          "calculationCodeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier"
          },
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason.userData.userDataField"
            }
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification": {
        "required": [
          "maximumQuantity"
        ],
        "type": "object",
        "properties": {
          "maximumQuantity": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.maximumQuantity"
          },
          "giftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem"
            }
          }
        }
      },
      "cart-UsableShippingMode.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-Adjustment.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.externalIdentifier": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.externalIdentifier.storeIdentifier"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier": {
        "type": "object",
        "properties": {
          "calculationCodeExternalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.QuoteIdentifierType": {
        "type": "object",
        "properties": {
          "externalQuoteID": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ChannelType": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType.userData"
          },
          "channelIdentifer": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType.channelIdentifer"
          },
          "description": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType.description"
          }
        }
      },
      "com.ibm.commerce.edp.beans.EDPSensitiveDataMaskHelperDataBean_IBM_sensitiveDataMaskByPlainString": {
        "type": "object",
        "properties": {
          "maskedString": {
            "type": "string"
          },
          "plainLength": {
            "type": "integer",
            "format": "int32"
          },
          "maskChar": {
            "type": "string"
          }
        }
      },
      "cart-PaymentInstruction.protocolData": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSet.giftItem": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier"
          },
          "quantity": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSet.giftItem.quantity"
          }
        }
      },
      "cart-UsableShippingInfoOrderItem": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "externalOrderItemID": {
            "type": "string"
          },
          "usableShippingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingAddress"
            }
          },
          "configurationID": {
            "type": "string"
          },
          "offerID": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "adjustmentRequirement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType"
            }
          },
          "lastUpdateDate": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "usableShippingMode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingMode"
            }
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingInfoOrderItem.userDataField"
            }
          },
          "correlationGroup": {
            "type": "string"
          },
          "usableShippingChargePolicy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingChargePolicy"
            }
          },
          "UOM": {
            "type": "string"
          },
          "quantity": {
            "type": "string",
            "format": "double"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderItemBodyDescription": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The order item comment."
          },
          "fulfillmentCenterName": {
            "type": "string",
            "description": "The name of the fulfillment center where the order item should be fulfilled."
          },
          "quantity": {
            "type": "string",
            "description": "Quantity."
          },
          "fulfillmentCenterId": {
            "type": "string",
            "description": "The fulfillment center ID where the order item should be fulfilled."
          },
          "orderItemExtendAttribute": {
            "type": "array",
            "description": "Order item extended attribute.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderItemBodyDescription-OrderItemExtendAttributeBodyDescription"
            }
          },
          "itemAttributes": {
            "type": "array",
            "description": "Item attributes.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-AddOrderItemBodyDescription-OrderItemBodyDescription-ItemAttributesBodyDescription"
            }
          },
          "partNumber": {
            "type": "string",
            "description": "The reference number that identifies the external part number of the catalog."
          },
          "productId": {
            "type": "string",
            "description": "Product ID."
          },
          "UOM": {
            "type": "string",
            "description": "The unit of measure of the order item."
          },
          "contractId": {
            "type": "string",
            "description": "The contract ID of the contract on which the order item addition is based."
          },
          "shipModeId": {
            "type": "string",
            "description": "Shipping mode identifier."
          }
        },
        "description": "Description of orderItem."
      },
      "com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.orderDataBean.uniqueShippingAddresses": {
        "type": "object",
        "properties": {
          "dataBeanKeyAddressId": {
            "type": "string"
          },
          "organizationNameURL": {
            "type": "string"
          },
          "stateURL": {
            "type": "string"
          },
          "fax1URL": {
            "type": "string"
          },
          "email2": {
            "type": "string"
          },
          "email1": {
            "type": "string"
          },
          "middleNameURL": {
            "type": "string"
          },
          "countryDisplayName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "addressIdURL": {
            "type": "string"
          },
          "officeAddress": {
            "type": "string"
          },
          "phone1TypeURL": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "mobilePhone1": {
            "type": "string"
          },
          "primaryURL": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "addressField2URL": {
            "type": "string"
          },
          "storeIdURL": {
            "type": "string"
          },
          "addressId": {
            "type": "string"
          },
          "fax2URL": {
            "type": "string"
          },
          "statusURL": {
            "type": "string"
          },
          "billingCodeType": {
            "type": "string"
          },
          "email1URL": {
            "type": "string"
          },
          "stateProvDisplayName": {
            "type": "string"
          },
          "lastCreateURL": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "phone1Type": {
            "type": "string"
          },
          "phone2Type": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "businessTitle": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "firstNameURL": {
            "type": "string"
          },
          "createdTimestamp": {
            "type": "string"
          },
          "nickNameURL": {
            "type": "string"
          },
          "organizationUnitName": {
            "type": "string"
          },
          "billingCodeURL": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "storeDirectory": {
            "type": "string"
          },
          "countryURL": {
            "type": "string"
          },
          "cityURL": {
            "type": "string"
          },
          "organizationUnitNameURL": {
            "type": "string"
          },
          "primary": {
            "type": "string"
          },
          "publishPhone1URL": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "lastCreate": {
            "type": "string"
          },
          "addressField1": {
            "type": "string"
          },
          "phone2URL": {
            "type": "string"
          },
          "addressField3": {
            "type": "string"
          },
          "addressField2": {
            "type": "string"
          },
          "fax2": {
            "type": "string"
          },
          "fax1": {
            "type": "string"
          },
          "address1URL": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "urlURL": {
            "type": "string"
          },
          "officeAddressURL": {
            "type": "string"
          },
          "phone1URL": {
            "type": "string"
          },
          "email2URL": {
            "type": "string"
          },
          "mobilePhone1Country": {
            "type": "string"
          },
          "mobilePhone1URL": {
            "type": "string"
          },
          "addressTypeURL": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdTime": {
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "address2URL": {
            "type": "string"
          },
          "personTitle": {
            "type": "string"
          },
          "lastNameURL": {
            "type": "string"
          },
          "phone2TypeURL": {
            "type": "string"
          },
          "address3URL": {
            "type": "string"
          },
          "businessTitleURL": {
            "type": "string"
          },
          "zipCodeURL": {
            "type": "string"
          },
          "addressField3URL": {
            "type": "string"
          },
          "billingCodeTypeURL": {
            "type": "string"
          },
          "packageSuppressionURL": {
            "type": "string"
          },
          "addressField1URL": {
            "type": "string"
          },
          "publishPhone1": {
            "type": "string"
          },
          "publishPhone2": {
            "type": "string"
          },
          "bestCallingTimeURL": {
            "type": "string"
          },
          "packageSuppression": {
            "type": "string"
          },
          "personTitleURL": {
            "type": "string"
          },
          "bestCallingTime": {
            "type": "string"
          },
          "isSelfAddress": {
            "type": "boolean"
          },
          "mobilePhone1CountryURL": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "publishPhone2URL": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType.comments": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier"
          },
          "quantity": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.quantity"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-DeleteOrderItemRequest": {
        "required": [
          "orderItemId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order ID."
          },
          "calculationUsage": {
            "type": "string",
            "description": "The identifier for the type of calculation to perform on the order."
          },
          "orderItemId": {
            "type": "string",
            "description": "The order item identifier."
          },
          "calculateOrder": {
            "type": "string",
            "description": "Specifies whether OrderCalculateCmd is called to calculate the charges for the order. 0 = do not call OrderCalculateCmd, 1 = call OrderCalculateCmd."
          },
          "catEntryId": {
            "type": "string",
            "description": "The catalog entry ID of the item to delete from the order."
          },
          "outOrderName": {
            "type": "string",
            "description": "Specifies the name-value pairs to add to the redirection URL. The values of the added name-value pairs are the reference numbers of the input orders."
          },
          "check": {
            "type": "string",
            "description": "A list of order items that is to check by the CheckInventory task command."
          }
        }
      },
      "cart-rewardOption.rewardChoice.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice.alternativeCurrencyPrice": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "cart-ShippingInfoOrderItem.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-ShippingAddress.attributes": {
        "required": [
          "attrKey"
        ],
        "type": "object",
        "properties": {
          "attrKey": {
            "type": "string"
          },
          "attrValue": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.adjustment.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.description": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.description.userData"
          },
          "shortDescription": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "longDescription": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType": {
        "type": "object",
        "properties": {
          "distinguishedName": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "cart-payment_instruction.paymentInstruction": {
        "required": [
          "email1",
          "email2",
          "fax1",
          "fax2",
          "mobilePhone1",
          "mobilePhone1Country",
          "nickName",
          "phone1",
          "phone2"
        ],
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "addressLine": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "piId": {
            "type": "string"
          },
          "refundAllowed": {
            "type": "string"
          },
          "personTitle": {
            "type": "string"
          },
          "minAmount": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType"
          },
          "primary": {
            "type": "string"
          },
          "payMethodId": {
            "type": "string"
          },
          "paymentRule": {
            "type": "string"
          },
          "piDescription": {
            "type": "string"
          },
          "email2": {
            "type": "string"
          },
          "piAmount": {
            "type": "string",
            "format": "double"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType"
          },
          "city": {
            "type": "string"
          },
          "piCurrency": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "string",
            "format": "int64"
          },
          "piStatus": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "geographicalTaxCode": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "format": "int64"
          },
          "protocolData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-payment_instruction.paymentInstruction.protocolData"
            }
          },
          "state": {
            "type": "string"
          },
          "fax2": {
            "type": "string"
          },
          "fax1": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "organizationIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType"
          },
          "email1": {
            "type": "string"
          },
          "internalOfficeAddress": {
            "type": "string"
          },
          "billing_address_id": {
            "type": "string"
          },
          "paymentTermConditionId": {
            "type": "string"
          },
          "phone2Type": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "businessTitle": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "bestCallingTime": {
            "type": "string"
          },
          "mobilePhone1Country": {
            "type": "string"
          },
          "piLanguage": {
            "type": "string"
          },
          "phone2Publish": {
            "type": "string"
          },
          "mobilePhone1": {
            "type": "string"
          },
          "phone1Type": {
            "type": "string"
          },
          "personIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "organizationUnitName": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "geographicalShippingCode": {
            "type": "string"
          },
          "stateOrProvinceName": {
            "type": "string"
          },
          "phone1Publish": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-payment_instruction.paymentInstruction.attributes"
            }
          },
          "country": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-payment_instruction.paymentInstruction.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.cSRIdentifier": {
        "type": "object",
        "properties": {
          "distinguishedName": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.cSRIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock": {
        "type": "object",
        "properties": {
          "resovled": {
            "type": "boolean"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.userData"
          },
          "blockReason": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason"
          },
          "timeBlocked": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes-UsableShippingMode": {
        "required": [
          "description",
          "shipModeCode",
          "shipModeId"
        ],
        "type": "object",
        "properties": {
          "userData": {
            "type": "string",
            "description": "User data."
          },
          "description": {
            "type": "string",
            "description": "Shiping mode description."
          },
          "trackingURL": {
            "type": "string",
            "description": "Shipping mode tracking URL."
          },
          "carrier": {
            "type": "string",
            "description": "Shipping mode carrier."
          },
          "shipModeCode": {
            "type": "string",
            "description": "Shipping mode code."
          },
          "shipModeId": {
            "type": "string",
            "description": "Shipping mode identifier."
          }
        },
        "description": "Description of orderItem."
      },
      "cart-OrderShippingInfo.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ChannelType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType.userData.userDataField"
            }
          }
        }
      },
      "cart-rewardOption.adjustment.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.adjustment.userData.userDataField"
            }
          }
        }
      },
      "cart-OrderItemShippingInfo.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.StoreIdentifierType": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.StoreIdentifierType.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode.resultList.shipChargesByShipMode": {
        "type": "object",
        "properties": {
          "shipModeDesc": {
            "type": "string"
          },
          "shippingChargeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode.resultList.shipChargesByShipMode.shippingChargeTypes"
            }
          },
          "carrierAccountNumber": {
            "type": "string"
          },
          "numberOfShipChargeTypes": {
            "type": "integer",
            "format": "int32"
          },
          "shipModeId": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSet": {
        "type": "object",
        "properties": {
          "giftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.giftSet.giftItem"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.paymentProtocolData": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.ShippingInfoHandler-UpdateShippingInfoBodyDescription-OrderItemBodyDescription": {
        "required": [
          "orderItemId"
        ],
        "type": "object",
        "properties": {
          "physicalStoreId": {
            "type": "string",
            "description": "Physical mode identifier."
          },
          "shipModeId": {
            "type": "string",
            "description": "Shipping mode identifier."
          },
          "shipInstructions": {
            "type": "string",
            "description": "Shipping instructions."
          },
          "addressId": {
            "type": "string",
            "description": "Address identifier."
          },
          "orderItemId": {
            "type": "string",
            "description": "Order item identifier."
          }
        },
        "description": "Order item update shipping information."
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-OrderItemMoveRequest": {
        "type": "object",
        "properties": {
          "outReverse": {
            "type": "string",
            "description": "List of OrderItems whose allocations should be released."
          },
          "fromOrderId": {
            "type": "string",
            "description": "The orders from which OrderItems is moved."
          },
          "createIfEmpty": {
            "type": "string",
            "description": "The valid value of this parameter is 1 or 0. The default value is 0. If the parameter createIfEmpty is specified to 1 and there is no transferred order items, a new empty order is created when either the toOrderId parameter is ** or the toOrderId parameter is .**. but there is no current pending order. The symbol \"**\" means to create new pending order; the symbol \".**.\" means to create new pending order if there are no pending orders currently."
          },
          "inReverse": {
            "type": "string",
            "description": "List of OrderItems whose allocations should be released."
          },
          "outOrderName": {
            "type": "string",
            "description": "The reference number of an output order."
          },
          "outRemerge": {
            "type": "string",
            "description": "List of the OrderItems that should be merged with other OrderItems in the same order and with the same correlationGroup attribute, if possible."
          },
          "outAllocate": {
            "type": "string",
            "description": "List of OrderItems that should be allocated from existing inventory."
          },
          "inAllocate": {
            "type": "string",
            "description": "List of OrderItems that should be allocated from existing inventory."
          },
          "fromOrderItemId": {
            "type": "string",
            "description": "The input OrderItems to move."
          },
          "toOrderId": {
            "type": "string",
            "description": "The destination order for the output OrderItems."
          },
          "moveAutoAddedOrderItems": {
            "type": "string",
            "description": "Whether the auto added order items is moved."
          },
          "inCheck": {
            "type": "string",
            "description": "List of OrderItems that should be checked on inventory."
          },
          "outMerge": {
            "type": "string",
            "description": "List of OrderItems that should be merged with other OrderItems in the same order if possible, regardless of their correlationGroup attributes."
          },
          "inMerge": {
            "type": "string",
            "description": "List of OrderItems that should be merged with other OrderItems in the same order if possible, regardless of their correlationGroup attributes."
          },
          "doInventory": {
            "type": "string",
            "description": "Whether the inventory action is performed."
          },
          "deleteIfEmpty": {
            "type": "string",
            "description": "Whether orders should be deleted if no OrderItems remain when the OrderItems are moved."
          },
          "outBackorder": {
            "type": "string",
            "description": "List of OrderItems that should be allocated from expected inventory."
          },
          "moveOrderPromotionCode": {
            "type": "string",
            "description": "Whether the promotion code is merged into the target order."
          },
          "inOrderName": {
            "type": "string",
            "description": "The reference number of an input order."
          },
          "refreshContractAndOffer": {
            "type": "string",
            "description": "Whether the price information for all of the order items is refreshed."
          },
          "outOrderItemName": {
            "type": "string",
            "description": "The reference number of an output OrderItem."
          },
          "inBackorder": {
            "type": "string",
            "description": "List of OrderItems that should be allocated from expected inventory."
          },
          "outCheck": {
            "type": "string",
            "description": "List of OrderItems that should be checked on inventory."
          },
          "inRemerge": {
            "type": "string",
            "description": "List of OrderItems that should be merged with other OrderItems in the same order and with the same correlationGroup attribute, if possible."
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ParentInfoType": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ParentInfoType.userData"
          },
          "relationTypeCode": {
            "type": "string"
          },
          "parentOrderIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ParentInfoType.parentOrderIdentifier"
          },
          "parentOrderItemIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ParentInfoType.parentOrderItemIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification": {
        "required": [
          "maximumQuantity"
        ],
        "type": "object",
        "properties": {
          "maximumQuantity": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.maximumQuantity"
          },
          "giftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem"
            }
          }
        }
      },
      "cart-rewardOption.adjustment.amount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "cart-rewardOption": {
        "required": [
          "rewardOptionIdentifier"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "adjustmentLanguage": {
            "type": "string"
          },
          "adjustmentAmount": {
            "type": "string",
            "format": "double"
          },
          "calculationCodeID": {
            "$ref": "#/components/schemas/cart-rewardOption.calculationCodeID"
          },
          "adjustment": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment"
          },
          "giftSet": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSet"
          },
          "rewardSpecGiftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.rewardSpecGiftItem"
            }
          },
          "adjustmentCode": {
            "type": "string"
          },
          "adjustmentDescription": {
            "type": "string"
          },
          "adjustmentUsage": {
            "type": "string"
          },
          "rewardChoice": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice"
          },
          "adjustmentCurrency": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/cart-rewardOption.userData"
          },
          "description": {
            "$ref": "#/components/schemas/cart-rewardOption.description"
          },
          "rewardOptionIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardOptionIdentifier"
          },
          "rewardOptionExternalId": {
            "type": "string"
          },
          "promotionType": {
            "type": "string"
          },
          "isPromotionCodeRequired": {
            "type": "boolean"
          },
          "giftSetSpecification": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification"
          },
          "adjustmentDisplayLevel": {
            "type": "string"
          },
          "displayLevel": {
            "type": "string"
          },
          "amount": {
            "$ref": "#/components/schemas/cart-rewardOption.amount"
          },
          "rewardSpecification": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification"
          },
          "rewardChoiceGiftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.rewardChoiceGiftItem"
            }
          },
          "rewardSpecMaxQuantity": {
            "type": "string",
            "format": "double"
          },
          "rewardOptionId": {
            "type": "string"
          },
          "rewardSpecMaxQuantityUom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier": {
        "type": "object",
        "properties": {
          "calculationUsageID": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier"
          }
        }
      },
      "cart-cart_item": {
        "type": "object",
        "properties": {
          "orderItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartItem"
            }
          },
          "cSRComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType"
            }
          },
          "parentInfo": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ParentInfoType"
          },
          "adjustmentRequirement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType"
            }
          },
          "orderVersion": {
            "type": "string"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/cart-OrderStatus"
          },
          "quoteID": {
            "type": "string"
          },
          "bLockInfo": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType"
          },
          "orgDistinguishedName": {
            "type": "string"
          },
          "paymentInstruction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-PaymentInstruction"
            }
          },
          "orderIdentifier": {
            "$ref": "#/components/schemas/cart-OrderIdentifier"
          },
          "comments": {
            "type": "string"
          },
          "placedDate": {
            "type": "string"
          },
          "storeUniqueID": {
            "type": "string"
          },
          "buyerId": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cart_item.userDataField"
            }
          },
          "promotionCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cart_item.promotionCode"
            }
          },
          "channel": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType"
          },
          "orderId": {
            "type": "string"
          },
          "shipAsComplete": {
            "type": "string"
          },
          "rewardOption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption"
            }
          },
          "quoteIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.QuoteIdentifierType"
          },
          "buyerPONumber": {
            "type": "string"
          },
          "orderAmount": {
            "$ref": "#/components/schemas/cart-OrderAmount"
          },
          "orgUniqueID": {
            "type": "string"
          },
          "orderEditor": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "orderDescription": {
            "type": "string"
          },
          "couponCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-CouponCode"
            }
          },
          "orderExtendAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cart_item.orderExtendAttribute"
            }
          },
          "paymentStatus": {
            "type": "string"
          },
          "storeNameIdentifier": {
            "type": "string"
          },
          "lastUpdateDate": {
            "type": "string"
          },
          "buyerDistinguishedName": {
            "type": "string"
          },
          "financialTransaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType"
            }
          },
          "storeOwnerID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType": {
        "type": "object",
        "properties": {
          "orderBlock": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock"
            }
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.userData"
          }
        }
      },
      "cart-rewardOption.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription-OrderItemBodyDescription": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "description": "The order item ID."
          },
          "contractId": {
            "type": "string",
            "description": "The contract ID of the contract on which the order item addition is based."
          },
          "orderItemExtendAttribute": {
            "type": "array",
            "description": "Order item extended attribute.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription-OrderItemBodyDescription-OrderItemExtendAttributeBodyDescription"
            }
          },
          "partNumber": {
            "type": "string",
            "description": "The reference number that identifies the external part number of the catalog."
          },
          "quantity": {
            "type": "string",
            "description": "Quantity."
          },
          "productId": {
            "type": "string",
            "description": "Product ID."
          }
        },
        "description": "Description of orderItem."
      },
      "cart-rewardOption.rewardChoice.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-payment_instruction.paymentInstruction.attributes": {
        "required": [
          "attrKey"
        ],
        "type": "object",
        "properties": {
          "attrKey": {
            "type": "string"
          },
          "attrValue": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardOptionIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-cartItem": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "timeReleased": {
            "type": "string"
          },
          "orderItemFulfillmentStatus": {
            "type": "string"
          },
          "externalOrderItemID": {
            "type": "string"
          },
          "adjustmentRequirement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType"
            }
          },
          "orderItemInventoryStatus": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "orderItemExtendAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartItem.orderItemExtendAttribute"
            }
          },
          "fulfillmentCenterDescription": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.DescriptionType"
          },
          "UOM": {
            "type": "string"
          },
          "fulfillmentCenterName": {
            "type": "string"
          },
          "orderItemShippingInfo": {
            "$ref": "#/components/schemas/cart-OrderItemShippingInfo"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.StoreIdentifierType"
          },
          "availableDate": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "timeShipped": {
            "type": "string"
          },
          "offerID": {
            "type": "string"
          },
          "fulfillmentCenterId": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartItem.userDataField"
            }
          },
          "productId": {
            "type": "string"
          },
          "expectedShipDate": {
            "type": "string"
          },
          "itemAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartItem.itemAttributes"
            }
          },
          "ownerID": {
            "type": "string"
          },
          "correlationGroup": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          },
          "orderItemStatus": {
            "type": "string"
          },
          "orderItemId": {
            "type": "string"
          },
          "configurationID": {
            "type": "string"
          },
          "orderItemAmount": {
            "$ref": "#/components/schemas/cart-OrderItemAmount"
          },
          "lastUpdateDate": {
            "type": "string"
          },
          "orderItemComponent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType"
            }
          },
          "partNumber": {
            "type": "string"
          },
          "quantity": {
            "type": "string",
            "format": "double"
          },
          "usableShippingChargePolicy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingChargePolicy"
            }
          },
          "fulfillmentCenterOwnerId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID": {
        "type": "object",
        "properties": {
          "calculationCodeExternalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID.calculationCodeExternalIdentifier"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "cart-cartUpdate": {
        "type": "object",
        "properties": {
          "Order": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item"
            }
          }
        }
      },
      "cart-UsableShippingMode": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "trackingURL": {
            "type": "string"
          },
          "carrier": {
            "type": "string"
          },
          "shipModeCode": {
            "type": "string"
          },
          "shipModeId": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingMode.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.amount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-CheckoutRequest": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          },
          "notifyOrderSubmitted": {
            "type": "string",
            "description": "Specifies whether the customer is notified when the order is successfully submitted for processing. 1=Yes, 0=No (Default)."
          },
          "SMS": {
            "type": "string",
            "description": "Send SMS notifications to the target phone number."
          },
          "orderExtendAttribute": {
            "type": "array",
            "description": "Order extended attribute.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-CheckoutRequest-OrderExtendAttributeBodyDescription"
            }
          },
          "notifyMerchant": {
            "type": "string",
            "description": "Whether the store is notified when the order processing is complete. E-mail notifications are only sent when Digital Commerce is configured with Digital Commerce Payments. 1=Yes ,0=No."
          },
          "notifyShopper": {
            "type": "string",
            "description": "Whether the customer is notified when the order processing is complete. E-mail notifications are only sent when Digital Commerce is configured with Digital Commerce Payments. 1=Yes, 0=No."
          },
          "notify_EMailSender_recipient": {
            "type": "string",
            "description": "Send order e-mail notifications to the target recipient."
          },
          "purchaseorder_id": {
            "type": "string",
            "description": "The purchase order ID."
          }
        },
        "description": "Request body input for shopping cart submission for checkout."
      },
      "com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.orderDataBean.billingAddressDataBean": {
        "type": "object",
        "properties": {
          "dataBeanKeyAddressId": {
            "type": "string"
          },
          "organizationNameURL": {
            "type": "string"
          },
          "stateURL": {
            "type": "string"
          },
          "fax1URL": {
            "type": "string"
          },
          "email2": {
            "type": "string"
          },
          "email1": {
            "type": "string"
          },
          "middleNameURL": {
            "type": "string"
          },
          "countryDisplayName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "addressIdURL": {
            "type": "string"
          },
          "officeAddress": {
            "type": "string"
          },
          "phone1TypeURL": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "mobilePhone1": {
            "type": "string"
          },
          "primaryURL": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "addressField2URL": {
            "type": "string"
          },
          "storeIdURL": {
            "type": "string"
          },
          "addressId": {
            "type": "string"
          },
          "fax2URL": {
            "type": "string"
          },
          "statusURL": {
            "type": "string"
          },
          "billingCodeType": {
            "type": "string"
          },
          "email1URL": {
            "type": "string"
          },
          "stateProvDisplayName": {
            "type": "string"
          },
          "lastCreateURL": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "phone1Type": {
            "type": "string"
          },
          "phone2Type": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "businessTitle": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "firstNameURL": {
            "type": "string"
          },
          "createdTimestamp": {
            "type": "string"
          },
          "nickNameURL": {
            "type": "string"
          },
          "organizationUnitName": {
            "type": "string"
          },
          "billingCodeURL": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "storeDirectory": {
            "type": "string"
          },
          "countryURL": {
            "type": "string"
          },
          "cityURL": {
            "type": "string"
          },
          "organizationUnitNameURL": {
            "type": "string"
          },
          "primary": {
            "type": "string"
          },
          "publishPhone1URL": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "lastCreate": {
            "type": "string"
          },
          "addressField1": {
            "type": "string"
          },
          "phone2URL": {
            "type": "string"
          },
          "addressField3": {
            "type": "string"
          },
          "addressField2": {
            "type": "string"
          },
          "fax2": {
            "type": "string"
          },
          "fax1": {
            "type": "string"
          },
          "address1URL": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "urlURL": {
            "type": "string"
          },
          "officeAddressURL": {
            "type": "string"
          },
          "phone1URL": {
            "type": "string"
          },
          "email2URL": {
            "type": "string"
          },
          "mobilePhone1Country": {
            "type": "string"
          },
          "mobilePhone1URL": {
            "type": "string"
          },
          "addressTypeURL": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdTime": {
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "address2URL": {
            "type": "string"
          },
          "personTitle": {
            "type": "string"
          },
          "lastNameURL": {
            "type": "string"
          },
          "phone2TypeURL": {
            "type": "string"
          },
          "address3URL": {
            "type": "string"
          },
          "businessTitleURL": {
            "type": "string"
          },
          "zipCodeURL": {
            "type": "string"
          },
          "addressField3URL": {
            "type": "string"
          },
          "billingCodeTypeURL": {
            "type": "string"
          },
          "packageSuppressionURL": {
            "type": "string"
          },
          "addressField1URL": {
            "type": "string"
          },
          "publishPhone1": {
            "type": "string"
          },
          "publishPhone2": {
            "type": "string"
          },
          "bestCallingTimeURL": {
            "type": "string"
          },
          "packageSuppression": {
            "type": "string"
          },
          "personTitleURL": {
            "type": "string"
          },
          "bestCallingTime": {
            "type": "string"
          },
          "isSelfAddress": {
            "type": "boolean"
          },
          "mobilePhone1CountryURL": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "publishPhone2URL": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.billingAddresses": {
        "type": "object",
        "properties": {
          "dataBeanKeyAddressId": {
            "type": "string"
          },
          "organizationNameURL": {
            "type": "string"
          },
          "stateURL": {
            "type": "string"
          },
          "fax1URL": {
            "type": "string"
          },
          "email2": {
            "type": "string"
          },
          "email1": {
            "type": "string"
          },
          "middleNameURL": {
            "type": "string"
          },
          "countryDisplayName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "addressIdURL": {
            "type": "string"
          },
          "officeAddress": {
            "type": "string"
          },
          "phone1TypeURL": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "mobilePhone1": {
            "type": "string"
          },
          "primaryURL": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "addressField2URL": {
            "type": "string"
          },
          "storeIdURL": {
            "type": "string"
          },
          "addressId": {
            "type": "string"
          },
          "fax2URL": {
            "type": "string"
          },
          "statusURL": {
            "type": "string"
          },
          "billingCodeType": {
            "type": "string"
          },
          "email1URL": {
            "type": "string"
          },
          "stateProvDisplayName": {
            "type": "string"
          },
          "lastCreateURL": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "phone1Type": {
            "type": "string"
          },
          "phone2Type": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "businessTitle": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "firstNameURL": {
            "type": "string"
          },
          "createdTimestamp": {
            "type": "string"
          },
          "nickNameURL": {
            "type": "string"
          },
          "organizationUnitName": {
            "type": "string"
          },
          "billingCodeURL": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "storeDirectory": {
            "type": "string"
          },
          "countryURL": {
            "type": "string"
          },
          "cityURL": {
            "type": "string"
          },
          "organizationUnitNameURL": {
            "type": "string"
          },
          "primary": {
            "type": "string"
          },
          "publishPhone1URL": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "lastCreate": {
            "type": "string"
          },
          "addressField1": {
            "type": "string"
          },
          "phone2URL": {
            "type": "string"
          },
          "addressField3": {
            "type": "string"
          },
          "addressField2": {
            "type": "string"
          },
          "fax2": {
            "type": "string"
          },
          "fax1": {
            "type": "string"
          },
          "address1URL": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "urlURL": {
            "type": "string"
          },
          "officeAddressURL": {
            "type": "string"
          },
          "phone1URL": {
            "type": "string"
          },
          "email2URL": {
            "type": "string"
          },
          "mobilePhone1Country": {
            "type": "string"
          },
          "mobilePhone1URL": {
            "type": "string"
          },
          "addressTypeURL": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdTime": {
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "address2URL": {
            "type": "string"
          },
          "personTitle": {
            "type": "string"
          },
          "lastNameURL": {
            "type": "string"
          },
          "phone2TypeURL": {
            "type": "string"
          },
          "address3URL": {
            "type": "string"
          },
          "businessTitleURL": {
            "type": "string"
          },
          "zipCodeURL": {
            "type": "string"
          },
          "addressField3URL": {
            "type": "string"
          },
          "billingCodeTypeURL": {
            "type": "string"
          },
          "packageSuppressionURL": {
            "type": "string"
          },
          "addressField1URL": {
            "type": "string"
          },
          "publishPhone1": {
            "type": "string"
          },
          "publishPhone2": {
            "type": "string"
          },
          "bestCallingTimeURL": {
            "type": "string"
          },
          "packageSuppression": {
            "type": "string"
          },
          "personTitleURL": {
            "type": "string"
          },
          "bestCallingTime": {
            "type": "string"
          },
          "isSelfAddress": {
            "type": "boolean"
          },
          "mobilePhone1CountryURL": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "publishPhone2URL": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.payment.beans.BuyerPurchaseOrderDataBean_IBM_BuyerPurchaseOrder_Summary.resultList": {
        "type": "object",
        "properties": {
          "dataBeanKeyBuyerPurchaseOrderId": {
            "type": "string"
          },
          "purchaseOrderNumber": {
            "type": "string"
          },
          "state": {
            "type": "integer",
            "format": "int32"
          },
          "buyerPurchaseOrderTypeId": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "buyerPurchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "accountId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-OrderScheduleRequest": {
        "required": [
          "orderId",
          "start"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          },
          "interval": {
            "type": "string",
            "description": "The number of seconds between successive executions of this order."
          },
          "host": {
            "type": "string",
            "description": "Host name responsible for processing an order."
          },
          "delay": {
            "type": "string",
            "description": "The amount of time, in seconds, before order processing is retried, in case of order processing failure. This parameter must be paired with the attempts parameter."
          },
          "start": {
            "type": "string",
            "description": "The time at which the first execution of this order should occur in the format YYYY:MM:DD:hh:mm:ss. Only hh:mm:ss is mandatory."
          },
          "attempts": {
            "type": "string",
            "description": "The number of times the scheduler tries processing this order if order processing fails."
          }
        }
      },
      "cart-payment_instruction.paymentInstruction.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer-OrderItemBodyDescription": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "description": "The order item ID."
          }
        },
        "description": "Description of orderItem."
      },
      "cart-payment_instruction": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-payment_instruction.userDataField"
            }
          },
          "paymentInstruction": {
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-payment_instruction.paymentInstruction"
            }
          },
          "paymentStatus": {
            "type": "string"
          },
          "financialTransaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType"
            }
          }
        }
      },
      "cart-OrderShippingInfo": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-OrderShippingInfo.userDataField"
            }
          },
          "requestedShipDate": {
            "type": "string"
          },
          "shipModeId": {
            "type": "string"
          },
          "addressId": {
            "type": "string"
          },
          "pysicalStoreId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.userData.userDataField"
            }
          }
        }
      },
      "cart-cart_item.promotionCode.associatedPromotion": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "promotionId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardOptionIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardChoiceGiftItem": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "string",
            "format": "double"
          },
          "uom": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.maximumQuantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.userData"
          },
          "code": {
            "type": "string"
          },
          "couponId": {
            "type": "string"
          },
          "expirationDateTime": {
            "type": "string"
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.description"
            }
          },
          "effectiveDateTime": {
            "type": "string"
          },
          "promotionIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet.giftItem": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier"
          },
          "quantity": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet.giftItem.quantity"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "Empty": {
        "type": "object",
        "description": "Empty model. Used as default value when no model is specified."
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "cart-UsablePaymentInformation.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode.resultList": {
        "type": "object",
        "properties": {
          "shipChargesByShipMode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode.resultList.shipChargesByShipMode"
            }
          },
          "isShipChargesExist": {
            "type": "boolean"
          },
          "numberOfShipModes": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "cart-CouponCode": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "couponId": {
            "type": "string"
          },
          "expirationDateTime": {
            "type": "string"
          },
          "effectiveDateTime": {
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-CouponCode.userDataField"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponDescriptionType"
            }
          }
        }
      },
      "cart-cart_item.orderExtendAttribute": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "attributeValue": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType.externalIdentifier": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.userData"
          },
          "giftSet": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier": {
        "type": "object",
        "properties": {
          "calculationCodeExternalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.calculationCodeIdentifier.calculationCodeExternalIdentifier"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList": {
        "type": "object",
        "properties": {
          "orderDataBean": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.orderDataBean"
          },
          "isPersonalAddressAllowForBilling": {
            "type": "boolean"
          },
          "billingAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.billingAddresses"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.userData"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.description"
          },
          "displayLevel": {
            "type": "string"
          },
          "calculationCodeID": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID"
          },
          "amount": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.amount"
          },
          "promotionType": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "isPromotionCodeRequired": {
            "type": "boolean"
          }
        }
      },
      "cart-UsablePaymentInformation.usableBillingAddress": {
        "required": [
          "nickName"
        ],
        "type": "object",
        "properties": {
          "organizationIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType"
          },
          "nickName": {
            "type": "string"
          },
          "personIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "addressId": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.adjustment.calculationCodeID.calculationCodeExternalIdentifier": {
        "type": "object",
        "properties": {
          "calculationUsageID": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier"
          }
        }
      },
      "cart-cartItem.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.giftItem.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed.resultList": {
        "type": "object",
        "properties": {
          "PAttributeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "encryptFlag": {
            "type": "string"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "accessBeanName": {
            "type": "string"
          },
          "attrTypeId": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ChannelType.channelIdentifer": {
        "type": "object",
        "properties": {
          "channelName": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "cart-cartUpdate_item.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.userData.userDataField"
            }
          }
        }
      },
      "cart-cartItem.itemAttributes": {
        "required": [
          "attrName"
        ],
        "type": "object",
        "properties": {
          "attrName": {
            "type": "string"
          },
          "attrValue": {
            "type": "string"
          }
        }
      },
      "cart-cart": {
        "type": "object",
        "properties": {
          "Order": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cart_item"
            }
          }
        }
      },
      "com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed.resultList.paymentPolicyInfoUsableWithoutTA": {
        "type": "object",
        "properties": {
          "policyName": {
            "type": "string"
          },
          "attrPageName": {
            "type": "string"
          },
          "longDescription": {
            "type": "string"
          },
          "policyType": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes": {
        "required": [
          "usableShippingMode"
        ],
        "type": "object",
        "properties": {
          "usableShippingMode": {
            "type": "array",
            "description": "List of order items.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-ShippingModes-UsableShippingMode"
            }
          }
        },
        "description": "Shipping mode list."
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-UsablePaymentInformation.protocolData": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "cart-OrderAmount.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet.giftItem.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed": {
        "type": "object",
        "properties": {
          "resultList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed.resultList"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet": {
        "type": "object",
        "properties": {
          "giftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion": {
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.description"
          },
          "promotionIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-CopyOrderRequest": {
        "type": "object",
        "properties": {
          "orderId": {
            "type":"string",
            "description": "The new copied order."
          },
          "comment": {
            "type": "string",
            "description": "A comment to include with the item when order items are added to or updated in the destination order."
          },
          "requestedShipDate": {
            "type": "string",
            "description": "The date which the destination order should be shipped."
          },
          "addressId": {
            "type": "string",
            "description": "The reference number of the address to which the order items are shipped."
          },
          "fromOrderId": {
            "type": "string",
            "description": "Specifies zero or more source orders from which order items is copied."
          },
          "catEntryId": {
            "type": "string",
            "description": "The catalog entry ID of the order item."
          },
          "offerId": {
            "type": "string",
            "description": "List of offer IDs to chose from when creating a new order item."
          },
          "currency": {
            "type": "string",
            "description": "The currency of the order items."
          },
          "pay_paymentname": {
            "type": "string",
            "description": "(Deprecated) This is supported for compatibility with earlier versions. With payment rule, ORDPAYINFO is not used, while using payment plugin controller and payment plugins. Sets the payment name-value pairs of the destination order."
          },
          "copyOrderItemId": {
            "type": "string",
            "description": "Specifies which order items should be copied from the source orders specified by fromOrderId and added to the destination order specified by toOrderId."
          },
          "toOrderId": {
            "type": "string",
            "description": "Specifies the order to create or modify."
          },
          "check": {
            "type": "string",
            "description": "List of order items that is to check by the CheckInventory task command."
          },
          "UOM": {
            "type": "string",
            "description": "The unit of measure for the quantity."
          },
          "prepare": {
            "type": "string",
            "description": "Whether to prepare the order by calling the PrepareOrder command."
          },
          "field2": {
            "type": "string",
            "description": "Sets the field2 value of the destination order. If not specified, the corresponding field value of the \"orderInfoFrom\" order is used, if there is one."
          },
          "field3": {
            "type": "string",
            "description": "Sets the field3 value of the destination order. If not specified, the corresponding field value of the \"orderInfoFrom\" order is used, if there is one."
          },
          "field1": {
            "type": "string",
            "description": "Sets the field1 value of the destination order. If not specified, the corresponding field value of the \"orderInfoFrom\" order is used, if there is one."
          },
          "copyOrderPromotionCode": {
            "type": "string",
            "description": "Whether to copy public promotion codes applied to the order."
          },
          "inventoryValidation": {
            "type": "string",
            "description": "Whether inventory status should be validated for adding to cart."
          },
          "updateOrderItemId": {
            "type": "string",
            "description": "Specifies order items in the destination order to update. It is updated using information from other parameters in the enumeration group specified by i, but not from the source orders for that enumeration group and not from catEntryId and partNumber. Note that the catalog entry ID of an order item cannot be updated."
          },
          "keepOrdItemValidContract": {
            "type": "string",
            "description": "Whether to keep eligible contracts."
          },
          "allocate": {
            "type": "string",
            "description": "List of order items that is to allocate from existing inventory."
          },
          "shipModeId": {
            "type": "string",
            "description": "The reference number associated with a particular shipping service."
          },
          "copyOrderUniquePromotionCode": {
            "type": "string",
            "description": "Whether to copy unique promotion codes applied to the order."
          },
          "orderInfoFrom": {
            "type": "string",
            "description": "The reference number of an order from which to copy order-level information."
          },
          "billingAddressId": {
            "type": "string",
            "description": "The billing address ID of the destination order."
          },
          "price": {
            "type": "string",
            "description": "The price of the order items."
          },
          "payInfoFrom": {
            "type": "string",
            "description": "The reference number of an order from which to obtain payment information. If more than one order is specified, only the most recently updated of those orders applies."
          },
          "status": {
            "type": "string",
            "description": "The status of the destination order."
          },
          "shipAsComplete": {
            "type": "string",
            "description": "Specifies if the created or modified order can be partially shipped. If the value is Y, the order is shipped when all order items are available. If the value is N, the order can be partially shipped when some of the order items are available."
          },
          "orderComment": {
            "type": "string",
            "description": "The order comment."
          },
          "description": {
            "type": "string",
            "description": "The description of the destination order."
          },
          "copyAutoAddedOrderItems": {
            "type": "string",
            "description": "Whether to copy auto-added order items."
          },
          "shippingModeFromOrderProfile": {
            "type": "string",
            "description": "Whether to use the default shipping mode held in the order profile: if the value is 1, the default shipping mode is copied from the order profile to all the order items of the order specified in toOrderId."
          },
          "configurationId": {
            "type": "string",
            "description": "If the order item represents a configured Dynamic Kit, this is the configuration ID."
          },
          "blockInfoCopy": {
            "type": "string",
            "description": "Whether the orderblock objects is copied."
          },
          "displaySeq": {
            "type": "string",
            "description": "The display sequence of the destination order."
          },
          "partOwnerId": {
            "type": "string",
            "description": "The member ID of the part owner, used with partNumber."
          },
          "copyOrdPayInfo": {
            "type": "string",
            "description": "Whether to copy order payment information."
          },
          "correlationGroup": {
            "type": "string",
            "description": "The group to which this order item is related."
          },
          "contractId": {
            "type": "string",
            "description": "The contract reference number associated with the order."
          },
          "reverse": {
            "type": "string",
            "description": "List of order items to release the allocation for."
          },
          "remerge": {
            "type": "string",
            "description": "List of the order items to merge with other order items in the same order and with the same correlationGroup attribute, if possible."
          },
          "outOrderName": {
            "type": "string",
            "description": "The reference number of a destination order."
          },
          "outOrderItemName": {
            "type": "string",
            "description": "The reference number of a destination order item."
          },
          "isPONumberCopied": {
            "type": "string",
            "description": "Whether the PO number of source order is copied to the destination order."
          },
          "refreshContractAndOffer": {
            "type": "string",
            "description": "Whether to refresh the price information for all order items."
          },
          "memberId": {
            "type": "string",
            "description": "The reference number of a member, used to resolve special order abbreviations when they appear in fromOrderId."
          },
          "merge": {
            "type": "string",
            "description": "List of order items that is to merge with other order items in the same order if possible, regardless of their correlationGroup attributes."
          },
          "sensitiveInfoCopy": {
            "type": "string",
            "description": "Whether the payment methods is copied."
          },
          "continue": {
            "type": "string",
            "description": "Controls whether the order copy continues when one or more of the order items cannot be copied. A value of 0 terminates and rolls back execution if an order item cannot be created or updated in the target order. A value of 1 ignores the create or update operation for that order item and continues execution. The default value is 0."
          },
          "shippingAddressFromOrderProfile": {
            "type": "string",
            "description": "Whether to use the default shipping address held in the order profile: if the value is 1, the default shipping address is copied from the order profile to all the order items of the order specified in toOrderId."
          },
          "backorder": {
            "type": "string",
            "description": "List of order items that is to allocate from expected inventory."
          },
          "partNumber": {
            "type": "string",
            "description": "Part number to resolve to a catalog entry. It overrides catEntryId."
          },
          "tcId": {
            "type": "string",
            "description": "The term and condition ID of the destination order."
          },
          "quantity": {
            "type": "string",
            "description": "The quantity of the order item."
          }
        },
        "example": {
          "application/json": {
            "URL": "https://localhost/wcs/resources/store/10801/cart/copy_order",
            "copyOrderItemId": "*",
            "description": "",
            "fromOrderId": -13579,
            "requesttype": "ajax",
            "toOrderId": "**"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.StoreIdentifierType.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-PaymentInstruction": {
        "type": "object",
        "properties": {
          "paymentTermConditionId": {
            "type": "string"
          },
          "paymentRule": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "string",
            "format": "int64"
          },
          "piId": {
            "type": "string"
          },
          "piStatus": {
            "type": "string"
          },
          "protocolData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-PaymentInstruction.protocolData"
            }
          },
          "minAmount": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType"
          },
          "refundAllowed": {
            "type": "string"
          },
          "piCurrency": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "format": "int64"
          },
          "payMethodId": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/cart-BillingAddress"
          },
          "piDescription": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-PaymentInstruction.userDataField"
            }
          },
          "piLanguage": {
            "type": "string"
          },
          "piAmount": {
            "type": "string",
            "format": "double"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.MonetaryAmountType"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.DescriptionType": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponDescriptionType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode": {
        "type": "object",
        "properties": {
          "resultList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode.resultList"
            }
          }
        }
      },
      "cart-rewardOption.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableShipChargesAndAccountByShipModeDataBean_IBM_usableShipChargesByShipMode.resultList.shipChargesByShipMode.shippingChargeTypes": {
        "type": "object",
        "properties": {
          "policyName": {
            "type": "string"
          },
          "internalPolicyId": {
            "type": "string"
          },
          "policyDescription": {
            "type": "string"
          },
          "selected": {
            "type": "boolean"
          },
          "policyId": {
            "type": "string"
          },
          "carrAccntNumber": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice.price"
          },
          "quantity": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice.quantity"
          },
          "alternativeCurrencyPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice.alternativeCurrencyPrice"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.financialTransactionIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-usable_shipping_info": {
        "type": "object",
        "properties": {
          "orderEditor": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "orderId": {
            "type": "string"
          },
          "quoteID": {
            "type": "string"
          },
          "usableShippingAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-usable_shipping_info.usableShippingAddress"
            }
          },
          "usableShippingMode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingMode"
            }
          },
          "couponCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType"
            }
          },
          "cSRComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType"
            }
          },
          "rewardOption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType"
            }
          },
          "externalOrderID": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "adjustmentRequirement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType"
            }
          },
          "lastUpdateDate": {
            "type": "string"
          },
          "quoteIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.QuoteIdentifierType"
          },
          "shipAsComplete": {
            "type": "string"
          },
          "buyerPONumber": {
            "type": "string"
          },
          "customerOrderNumber": {
            "type": "string"
          },
          "placedDate": {
            "type": "string"
          },
          "bLockInfo": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType"
          },
          "orderItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-UsableShippingInfoOrderItem"
            }
          },
          "orderVersion": {
            "type": "string"
          },
          "promotionCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType"
            }
          },
          "channel": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType"
          }
        }
      },
      "cart-rewardOption.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed.resultList": {
        "type": "object",
        "properties": {
          "secondaryRC": {
            "type": "integer",
            "format": "int32"
          },
          "paymentPolicyInfoUsableWithoutTA": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.payment.beans.PaymentPolicyListDataBean_IBM_PaymentPolicyList_Detailed.resultList.paymentPolicyInfoUsableWithoutTA"
            }
          },
          "message": {
            "type": "string"
          },
          "primaryRC": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "cart-BillingAddress.attributes": {
        "required": [
          "attrKey"
        ],
        "type": "object",
        "properties": {
          "attrKey": {
            "type": "string"
          },
          "attrValue": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSet.giftItem.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponDescriptionType": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponDescriptionType.userData"
          },
          "shortDescription": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "longDescription": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription-OrderItemBodyDescription-OrderItemExtendAttributeBodyDescription": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "The attribute name."
          },
          "attributeType": {
            "type": "string",
            "description": "The attribute type."
          },
          "attributeValue": {
            "type": "string",
            "description": "The attribute value."
          }
        },
        "description": "Description of orderitem extended attribute."
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "cart-cartUpdate_item": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "shipAsComplete": {
            "type": "string"
          },
          "orderComment": {
            "type": "string"
          },
          "orderItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item.orderItem"
            }
          },
          "orderDescription": {
            "type": "string"
          },
          "orderExtendAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item.orderExtendAttribute"
            }
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item.userDataField"
            }
          }
        }
      },
      "cart-cartUpdate_item.orderExtendAttribute": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "attributeValue": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "cart-shipping_info": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "shipAsComplete": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-shipping_info.userDataField"
            }
          },
          "orderItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-ShippingInfoOrderItem"
            }
          },
          "orderShippingInfo": {
            "$ref": "#/components/schemas/cart-OrderShippingInfo"
          }
        }
      },
      "cart-rewardOption.amount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "cart-ShippingAddress": {
        "required": [
          "email1",
          "email2",
          "fax1",
          "fax2",
          "mobilePhone1",
          "mobilePhone1Country",
          "nickName",
          "phone1",
          "phone2"
        ],
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "addressLine": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addressId": {
            "type": "string"
          },
          "personTitle": {
            "type": "string"
          },
          "primary": {
            "type": "string"
          },
          "email2": {
            "type": "string"
          },
          "email1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "geographicalTaxCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "internalOfficeAddress": {
            "type": "string"
          },
          "fax2": {
            "type": "string"
          },
          "fax1": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "organizationIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType"
          },
          "phone1Type": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "phone2Type": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "businessTitle": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "bestCallingTime": {
            "type": "string"
          },
          "mobilePhone1Country": {
            "type": "string"
          },
          "phone2Publish": {
            "type": "string"
          },
          "mobilePhone1": {
            "type": "string"
          },
          "personIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "organizationUnitName": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "geographicalShippingCode": {
            "type": "string"
          },
          "stateOrProvinceName": {
            "type": "string"
          },
          "phone1Publish": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-ShippingAddress.attributes"
            }
          },
          "country": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-cartUpdate_item.orderItem.itemAttributes": {
        "required": [
          "attrName"
        ],
        "type": "object",
        "properties": {
          "attrName": {
            "type": "string"
          },
          "attrValue": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "cart-PaymentInstruction.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.description.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode.description"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode.userData"
          }
        }
      },
      "cart-cartItem.orderItemExtendAttribute": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "attributeValue": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.externalIdentifier": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.externalIdentifier.storeIdentifier"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.externalIdentifier": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PromotionIdentifierType.externalIdentifier.storeIdentifier"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "java.util.Map-Entry": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.transactionExtensionData": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "cart-OrderStatus": {
        "type": "object",
        "properties": {
          "xstat_": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/java.util.Map-Entry"
            }
          },
          "locked": {
            "type": "string"
          },
          "prepareIndicator": {
            "type": "string"
          },
          "buyerApprovalStatus": {
            "type": "string"
          },
          "editable": {
            "type": "string"
          },
          "orderStatus": {
            "type": "string"
          },
          "blocked": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList-PaymentInstruction": {
        "required": [
          "piId"
        ],
        "type": "object",
        "properties": {
          "piId": {
            "type": "string",
            "description": "Payment instruction ID."
          }
        },
        "description": "Payment instruction."
      },
      "cart-rewardOption.giftSetSpecification": {
        "required": [
          "maximumQuantity"
        ],
        "type": "object",
        "properties": {
          "maximumQuantity": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.maximumQuantity"
          },
          "giftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.giftItem"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.requestAmount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "cart-rewardOption.adjustment.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ChannelType.description": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier": {
        "type": "object",
        "properties": {
          "calculationCodeExternalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.description.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.description.userData.userDataField"
            }
          }
        }
      },
      "cart-shipping_info.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-Adjustment": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "displayLevel": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "format": "double"
          },
          "usage": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-Adjustment.userDataField"
            }
          },
          "descriptionLanguage": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType": {
        "required": [
          "rewardOptionIdentifier"
        ],
        "type": "object",
        "properties": {
          "rewardChoice": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.userData"
          },
          "rewardSpecification": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification"
          },
          "rewardOptionIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardOptionIdentifier"
          },
          "adjustment": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription-OrderExtendAttributeBodyDescription": {
        "required": [
          "attributeName",
          "attributeValue"
        ],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "attribute name"
          },
          "attributeType": {
            "type": "string",
            "description": "attribute type"
          },
          "attributeValue": {
            "type": "string",
            "description": "attribute value"
          }
        },
        "description": "Description of order extended attribute."
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription": {
        "required": [
          "orderItem"
        ],
        "type": "object",
        "properties": {
          "orderExtendAttribute": {
            "type": "array",
            "description": "order extended attribute",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription-OrderExtendAttributeBodyDescription"
            }
          },
          "orderId": {
            "type": "string",
            "description": "The order ID."
          },
          "x_calculationUsage": {
            "type": "string",
            "description": "The identifier for the type of calculation to perform on the order."
          },
          "x_calculateOrder": {
            "type": "string",
            "description": "Specifies whether OrderCalculateCmd is called to calculate the charges for the order. 0 = do not call OrderCalculateCmd, 1 = call OrderCalculateCmd."
          },
          "orderItem": {
            "type": "array",
            "description": "List of order items.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-UpdateOrderItemBodyDescription-OrderItemBodyDescription"
            }
          },
          "x_inventoryValidation": {
            "type": "string",
            "description": "Specifies whether inventory status should be validated for adding to cart."
          }
        },
        "description": "Description of the updateOrderItem input body."
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.unitPrice.price": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponDescriptionType.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponDescriptionType.userData.userDataField"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.maximumQuantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList": {
        "required": [
          "orderId",
          "paymentInstruction"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          },
          "paymentInstruction": {
            "type": "array",
            "description": "List of payment instructions.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.PaymentInstructionHandler-PaymentInstructionList-PaymentInstruction"
            }
          }
        },
        "description": "Payment instruction list."
      },
      "cart-rewardOption.rewardChoice": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.userData"
          },
          "giftSet": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet"
          }
        }
      },
      "cart-usable_shipping_info.usableShippingAddress": {
        "required": [
          "nickName"
        ],
        "type": "object",
        "properties": {
          "organizationIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType"
          },
          "nickName": {
            "type": "string"
          },
          "personIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "addressId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType.cSRIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          }
        }
      },
      "cart-BillingAddress": {
        "required": [
          "email1",
          "email2",
          "fax1",
          "fax2",
          "mobilePhone1",
          "mobilePhone1Country",
          "nickName",
          "phone1",
          "phone2"
        ],
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "addressLine": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "personTitle": {
            "type": "string"
          },
          "primary": {
            "type": "string"
          },
          "email2": {
            "type": "string"
          },
          "email1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "geographicalTaxCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "internalOfficeAddress": {
            "type": "string"
          },
          "fax2": {
            "type": "string"
          },
          "fax1": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "organizationIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType"
          },
          "phone1Type": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "billing_address_id": {
            "type": "string"
          },
          "phone2Type": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "businessTitle": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "bestCallingTime": {
            "type": "string"
          },
          "mobilePhone1Country": {
            "type": "string"
          },
          "phone2Publish": {
            "type": "string"
          },
          "mobilePhone1": {
            "type": "string"
          },
          "personIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType"
          },
          "organizationUnitName": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "geographicalShippingCode": {
            "type": "string"
          },
          "stateOrProvinceName": {
            "type": "string"
          },
          "phone1Publish": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-BillingAddress.attributes"
            }
          },
          "country": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType": {
        "required": [
          "adjustmentCategory",
          "adjustmentUsage"
        ],
        "type": "object",
        "properties": {
          "adjustmentUsage": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType.userData"
          },
          "adjustmentValue": {
            "type": "string"
          },
          "comments": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.AdjustmentRequirementType.comments"
          },
          "adjustmentCategory": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.giftItem": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier"
          },
          "quantity": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.giftItem.quantity"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.userData": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.userData.userDataField"
            }
          }
        }
      },
      "cart-OrderItemAmount.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardChoice.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "cart-rewardOption.adjustment.calculationCodeID": {
        "type": "object",
        "properties": {
          "calculationCodeExternalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.adjustment.calculationCodeID.calculationCodeExternalIdentifier"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ParentInfoType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.FinancialTransactionType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason.userData"
          },
          "description": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.OrderBLockInfoType.orderBlock.blockReason.description"
          },
          "reansonType": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.adjustment.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.RewardOptionType.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem": {
        "type": "object",
        "properties": {
          "catalogEntryIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier"
          },
          "quantity": {
            "$ref": "#/components/schemas/cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.quantity"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.userData.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.maximumQuantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.orderItemComponentIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.calculationCodeID.calculationCodeExternalIdentifier": {
        "type": "object",
        "properties": {
          "calculationUsageID": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.calculationCodeID.calculationCodeExternalIdentifier.storeIdentifier"
          }
        }
      },
      "cart-cartUpdate_item.orderItem": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "fulfillmentCenterName": {
            "type": "string"
          },
          "orderItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "string",
            "format": "double"
          },
          "fulfillmentCenterId": {
            "type": "string"
          },
          "orderItemExtendAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item.orderItem.orderItemExtendAttribute"
            }
          },
          "itemAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item.orderItem.itemAttributes"
            }
          },
          "partNumber": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-cartUpdate_item.orderItem.userDataField"
            }
          },
          "UOM": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier": {
        "type": "object",
        "properties": {
          "calculationUsageID": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer": {
        "required": [
          "orderId",
          "orderItem"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          },
          "orderItem": {
            "type": "array",
            "description": "List of order items.",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.rest.order.handler.CartHandler-OrderWithOrderItemContainer-OrderItemBodyDescription"
            }
          }
        },
        "description": "Structure containing an order ID and order item ID."
      },
      "com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed": {
        "type": "object",
        "properties": {
          "resultList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.utf.beans.PAttributeDataBean_IBM_PAttribute_Detailed.resultList"
            }
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CSRCommentsType": {
        "type": "object",
        "properties": {
          "cSRIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.cSRIdentifier"
          },
          "comment": {
            "type": "string"
          },
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.userData"
          },
          "changeReasonCode": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CSRCommentsType.changeReasonCode"
          },
          "orderVersion": {
            "type": "string"
          },
          "creationDate": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier": {
        "required": [
          "partNumber"
        ],
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "partNumber": {
            "type": "string"
          },
          "storeIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSet.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.PromotionCodeType": {
        "type": "object",
        "properties": {
          "userData": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.userData"
          },
          "associatedPromotion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.associatedPromotion"
            }
          },
          "code": {
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.PromotionCodeType.reason"
          }
        }
      },
      "cart-rewardOption.rewardSpecGiftItem": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "double"
          },
          "uom": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.PartNumberIdentifierType"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.CouponCodeType.promotionIdentifier.calculationCodeIdentifier.calculationCodeExternalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.OrderItemComponentType.quantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.facade.datatypes.ParentInfoType.parentOrderIdentifier": {
        "type": "object",
        "properties": {
          "customerOrderNumber": {
            "type": "string"
          },
          "externalOrderID": {
            "type": "string"
          },
          "uniqueID": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardChoice.giftSet": {
        "type": "object",
        "properties": {
          "giftItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-rewardOption.rewardChoice.giftSet.giftItem"
            }
          }
        }
      },
      "cart-cart_item.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "cart-rewardOption.rewardSpecification.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier": {
        "type": "object",
        "properties": {
          "ownerID": {
            "type": "string"
          },
          "nameIdentifier": {
            "type": "string"
          }
        }
      },
      "cart-ShippingInfoOrderItem": {
        "type": "object",
        "properties": {
          "userDataField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-ShippingInfoOrderItem.userDataField"
            }
          },
          "orderItemId": {
            "type": "string"
          },
          "orderItemShippingInfo": {
            "$ref": "#/components/schemas/cart-OrderItemShippingInfo"
          }
        }
      },
      "cart-CouponCode.userDataField": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.orderDataBean": {
        "type": "object",
        "properties": {
          "totalOrderItemsPrice": {
            "type": "string"
          },
          "totalProductPrice": {
            "type": "number",
            "format": "double"
          },
          "actualShipDate": {
            "type": "string",
            "format": "date"
          },
          "addressId": {
            "type": "integer",
            "format": "int64"
          },
          "totalShippingTax": {
            "type": "number",
            "format": "double"
          },
          "totalSize": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "uniqueShippingAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.orderDataBean.uniqueShippingAddresses"
            }
          },
          "surchargeAdjustmentTotal": {
            "type": "number",
            "format": "double"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "totalAdjustment": {
            "type": "string"
          },
          "billingAddressDataBean": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.beans.UsableBillingAddressListDataBean_IBM_UsableBillingAddressList_Summary.resultList.orderDataBean.billingAddressDataBean"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "transferStatus": {
            "type": "integer",
            "format": "int32"
          },
          "buschnId": {
            "type": "integer",
            "format": "int32"
          },
          "totalProductPriceBySumUp": {
            "type": "number",
            "format": "double"
          },
          "totalShippingCharge": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier": {
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "externalIdentifier": {
            "$ref": "#/components/schemas/cart-rewardOption.giftSetSpecification.giftItem.catalogEntryIdentifier.externalIdentifier.storeIdentifier.externalIdentifier"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeBody": {
        "required": [
          "promoCode"
        ],
        "type": "object",
        "properties": {
          "promoCode": {
            "type": "string",
            "description": "The promotion code."
          }
        },
        "description": "Body of a request to apply a promotion code to a shopping cart."
      },
      "com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponResponse": {
        "required": [
          "couponId",
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          },
          "couponId": {
            "type": "string",
            "description": "Coupon identifier."
          }
        },
        "description": "Body of a response to apply a coupon to a shopping cart."
      },
      "com.ibm.commerce.rest.order.handler.AssignedCouponHandler.ApplyCouponBody": {
        "required": [
          "couponId"
        ],
        "type": "object",
        "properties": {
          "couponId": {
            "type": "string",
            "description": "Coupon identifier."
          }
        },
        "description": "Body of a request to apply a coupon to a shopping cart."
      },
      "com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.RemovePromotionCodeResponse": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order identifier."
          }
        },
        "description": "Body of a response to remove a promotion code from a shopping cart."
      },
      "cart-assigned_promotion_code": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "quoteID": {
            "type": "string"
          },
          "externalOrderID": {
            "type": "string"
          },
          "quoteIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.QuoteIdentifierType"
          },
          "buyerPONumber": {
            "type": "string"
          },
          "customerOrderNumber": {
            "type": "string"
          },
          "promotionCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-assigned_promotion_code"
            }
          },
          "channel": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.AssignedPromotionCodeHandler.ApplyPromotionCodeResponse": {
        "required": [
          "orderId",
          "promoCode"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order identifier."
          },
          "promoCode": {
            "type": "string",
            "description": "The promotion code."
          }
        },
        "description": "Body of a response to apply a promotion code to a shopping cart."
      },
      "cart-assigned_coupon": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "quoteID": {
            "type": "string"
          },
          "couponCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cart-assigned_coupon"
            }
          },
          "externalOrderID": {
            "type": "string"
          },
          "quoteIdentifier": {
            "$ref": "#/components/schemas/com.ibm.commerce.foundation.common.datatypes.QuoteIdentifierType"
          },
          "buyerPONumber": {
            "type": "string"
          },
          "customerOrderNumber": {
            "type": "string"
          },
          "channel": {
            "$ref": "#/components/schemas/com.ibm.commerce.order.facade.datatypes.ChannelType"
          }
        }
      },
      "com.ibm.commerce.rest.order.handler.AssignedCouponHandler.RemoveCouponResponse": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order identifier."
          }
        },
        "description": "Body of a response to remove a coupon from a shopping cart."
      }
    }
  },
  "x-aes-documentation": {
    "gettingstarted": [
      {
        "content": "Some REST services require authentication. HCL Commerce REST services are authenticated on secure and unsecured channels. This authentication can include the use of the WCToken and WCTrustedToken. To use REST services that require authentication, you must first get authentication data by using a supported identity services.\n\nAfter you obtain the authentication data, you must pass either the WCToken or WCTustedToken parameters, or both, within the HTTP header for every request that requires authentication. If a request is sent over HTTP, pass the WCToken parameter in the HTTP header. Do not pass the WCTrustedToken in HTTP requests, as the parameter value might display. Send both the WCToken and the WCTrustedToken parameters when the request is being sent over HTTPS.\n\nThe HCL Commerce REST APIs can also use session cookies that are created by the HCL Commerce store runtime for authentication. These cookies allow you to mix requests to the HCL Commerce REST APIs and the HCL Commerce store runtime within the same user session.\n\n See more here: <a href=https://help.hcltechsw.com/commerce/9.0.0/restapi/concepts/cwvrestapi_store.html </a> ",
        "codeSnippets": [],
        "name": "Authentication"
      },
      {
        "content": "HCL Commerce REST services support JSON and XML formats for input and output data by default. The default format is JSON. When an XML String is sent to a REST service, you must set Content-Type HTTP header to be \"application/xml\". The REST service converts the XML input data to the JSON format that is accepted by REST services. Therefore, your input XML format must follow a certain structure so that it can be transformed to the JSON object that is accepted by REST services. See more here: <a href=https://help.hcltechsw.com/commerce/9.0.0/restapi/concepts/cwvrestapi_store.html </a> ",
        "codeSnippets": [],
        "name": "Response formats"
      },
      {
        "content": "Preview tokens are encrypted strings that encapsulates a set of preview options and restrictions on when and where the token can be used. Any user who is authorized to access your server and has a preview token, can complete preview actions in the same store for which that token is generated. See more here: <a href=https://help.hcltechsw.com/commerce/9.0.0/restapi/concepts/cwvrestapi_store.html</a>",
        "codeSnippets": [],
        "name": "Preview tokens"
      },
      {
        "content": "Some HCL Commerce REST services require a request to be sent over HTTPS. Learn more here: <a href=https://help.hcltechsw.com/commerce/9.0.0/restapi/concepts/cwvrestapi_store.html </a> ",
        "codeSnippets": [],
        "name": "Secure Sockets Layer"
      }
    ]
  }
}
