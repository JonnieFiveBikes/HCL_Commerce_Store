{
    "models": {
        "person-person.receiveEmailPreference": {
            "id": "person-person.receiveEmailPreference",
            "properties": {
                "storeID": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "value": {
                    "description": "",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminUpdateRequest": {
            "description": "Request of UserRegistrationAdminUpdateCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminUpdateRequest",
            "properties": {
                "country": {
                    "name": "country",
                    "description": "The name of the country or region where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "personTitle": {
                    "name": "personTitle",
                    "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr. or Ms.).",
                    "type": "string",
                    "required": false
                },
                "taxGeoCode": {
                    "name": "taxGeoCode",
                    "description": "A tax code based on geographical region, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "zipCode": {
                    "name": "zipCode",
                    "description": "The ZIP or postal code of the registrant's address.",
                    "type": "string",
                    "required": false
                },
                "challengeAnswer": {
                    "name": "challengeAnswer",
                    "description": "Answer to the challenge question.",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1": {
                    "name": "mobilePhone1",
                    "description": "The registrant's mobile phone number used for SMS, for example, 4161235555.",
                    "type": "string",
                    "required": false
                },
                "preferredCurrency": {
                    "name": "preferredCurrency",
                    "description": "The registrant's preferred currency for transactions.",
                    "type": "string",
                    "required": false
                },
                "companyName": {
                    "name": "companyName",
                    "description": "The company name of the organization that the registrant represents, obtained when filling in demographic information.",
                    "type": "string",
                    "required": false
                },
                "phone2": {
                    "name": "phone2",
                    "description": "The registrant's secondary phone number.",
                    "type": "string",
                    "required": false
                },
                "organizationUnitName": {
                    "name": "organizationUnitName",
                    "description": "The name of the unit within the organization that the registrant represents.",
                    "type": "string",
                    "required": false
                },
                "receiveSMS": {
                    "name": "receiveSMS",
                    "description": "Specifies whether the registrant wants to receive marketing SMS messages for the current store (or all stores if no stores have been visited during the session). Valid values are true or false (default).",
                    "type": "string",
                    "required": false
                },
                "phone1": {
                    "name": "phone1",
                    "description": "The registrant's primary phone number.",
                    "type": "string",
                    "required": false
                },
                "organizationId": {
                    "name": "organizationId",
                    "description": "The identifier of the registrant's company.",
                    "type": "string",
                    "required": false
                },
                "email2": {
                    "name": "email2",
                    "description": "The registrant's secondary e-mail or Web address.",
                    "type": "string",
                    "required": false
                },
                "email1": {
                    "name": "email1",
                    "description": "The registrant's primary e-mail or Web address.",
                    "type": "string",
                    "required": false
                },
                "children": {
                    "name": "children",
                    "description": "The number of children the registrant has.",
                    "type": "string",
                    "required": false
                },
                "addressField1": {
                    "name": "addressField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "organizationUnitId": {
                    "name": "organizationUnitId",
                    "description": "The identifier of the registrant's organizational unit.",
                    "type": "string",
                    "required": false
                },
                "fax2": {
                    "name": "fax2",
                    "description": "The registrant's secondary facsimile number.",
                    "type": "string",
                    "required": false
                },
                "fax1": {
                    "name": "fax1",
                    "description": "The registrant's primary facsimile number.",
                    "type": "string",
                    "required": false
                },
                "state": {
                    "name": "state",
                    "description": "The name of the state, province, or equivalent where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "addressField2": {
                    "name": "addressField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "phone2Type": {
                    "name": "phone2Type",
                    "description": "The type of phone used for the registrant's secondary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.",
                    "type": "string",
                    "required": false
                },
                "addressField3": {
                    "name": "addressField3",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "organizationName": {
                    "name": "organizationName",
                    "description": "The name of the organization that the registrant represents.",
                    "type": "string",
                    "required": false
                },
                "addressType": {
                    "name": "addressType",
                    "description": "The purpose of the address. Valid values are: S - shipto, B - billto, SB - shipto and billto (The default value.).",
                    "type": "string",
                    "required": false
                },
                "timeZone": {
                    "name": "timeZone",
                    "description": "The time zone in which the registrant does business (report as GMT +\/- hours).",
                    "type": "string",
                    "required": false
                },
                "logonPassword": {
                    "name": "logonPassword",
                    "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server.",
                    "type": "string",
                    "required": false
                },
                "firstName": {
                    "name": "firstName",
                    "description": "The first name of the registrant.",
                    "type": "string",
                    "required": false
                },
                "userField3": {
                    "name": "userField3",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "customMemberAttributes": {
                    "name": "customMemberAttributes",
                    "description": "You can manage custom member attributes (MBRATTRVAL table) for this user using the following syntax: &attributeName_storeId_action_number=value.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "userField1": {
                    "name": "userField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "demographicField7": {
                    "name": "demographicField7",
                    "description": "Customizable field for demographic information; a field varchar, length 6.",
                    "type": "string",
                    "required": false
                },
                "userField2": {
                    "name": "userField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "taxPayerId": {
                    "name": "taxPayerId",
                    "description": "A string used to identify the user for taxation, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "demographicField5": {
                    "name": "demographicField5",
                    "description": "Customizable field for demographic information; a field of 254 characters.",
                    "type": "string",
                    "required": false
                },
                "departmentNumber": {
                    "name": "departmentNumber",
                    "description": "The department identifier for the registrant.",
                    "type": "string",
                    "required": false
                },
                "demographicField6": {
                    "name": "demographicField6",
                    "description": "Customizable field for demographic information; an integer field.",
                    "type": "string",
                    "required": false
                },
                "packageSuppression": {
                    "name": "packageSuppression",
                    "description": "1 - An indicator to include package inserts when the order is shipped; 0 - An indicator to not include package inserts when the order is shipped. There is no default for this field. If the field is left unused, it remains null in the database",
                    "type": "string",
                    "required": false
                },
                "orderBefore": {
                    "name": "orderBefore",
                    "description": "Whether the registrant has previously placed an order. This value is supplied by the registrant.",
                    "type": "string",
                    "required": false
                },
                "userProfileField1": {
                    "name": "userProfileField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "userProfileField2": {
                    "name": "userProfileField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "maritalStatus": {
                    "name": "maritalStatus",
                    "description": "The registrant's marital statu.",
                    "type": "string",
                    "required": false
                },
                "income": {
                    "name": "income",
                    "description": "The registrant's annual incom.",
                    "type": "string",
                    "required": false
                },
                "lastName": {
                    "name": "lastName",
                    "description": "Required if the authentication mode is LDAP: The last name of the registrant. If the authentication mode is LDAP, this parameter is mandatory.",
                    "type": "string",
                    "required": false
                },
                "preferredLanguage": {
                    "name": "preferredLanguage",
                    "description": "The registrant's preferred language.",
                    "type": "string",
                    "required": false
                },
                "gender": {
                    "name": "gender",
                    "description": "The registrant's gender.",
                    "type": "string",
                    "required": false
                },
                "city": {
                    "name": "city",
                    "description": "The name of the city where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "demographicField3": {
                    "name": "demographicField3",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "description": {
                    "name": "description",
                    "description": "A description of the registrant.",
                    "type": "string",
                    "required": false
                },
                "demographicField4": {
                    "name": "demographicField4",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "demographicField1": {
                    "name": "demographicField1",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "demographicField2": {
                    "name": "demographicField2",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                },
                "publishPhone2": {
                    "name": "publishPhone2",
                    "description": "1 - An indicator that the registrant's secondary phone number is listed; 0 - An indicator that the registrant's secondary phone number is unlisted.",
                    "type": "string",
                    "required": false
                },
                "publishPhone1": {
                    "name": "publishPhone1",
                    "description": "1 - An indicator that the registrant's primary phone number is listed; 0 - An indicator that the registrant's primary phone number is unlisted. There is no default for these publishPhone fields. If the field is left unused, it remains null in the database.",
                    "type": "string",
                    "required": false
                },
                "secretary": {
                    "name": "secretary",
                    "description": "The name of the registrant's secretary.",
                    "type": "string",
                    "required": false
                },
                "billingCodeType": {
                    "name": "billingCodeType",
                    "description": "Code designating the method of code structure used for the billing code. The default value is D, assigned by buyer.",
                    "type": "string",
                    "required": false
                },
                "incomeCurrency": {
                    "name": "incomeCurrency",
                    "description": "The currency in which the registrant's income is paid.",
                    "type": "string",
                    "required": false
                },
                "challengeQuestion": {
                    "name": "challengeQuestion",
                    "description": "Challenge question for verbal confirmation of the customer's identity.",
                    "type": "string",
                    "required": false
                },
                "preferredMeasure": {
                    "name": "preferredMeasure",
                    "description": "The registrant's preferred unit of measure.",
                    "type": "string",
                    "required": false
                },
                "manager": {
                    "name": "manager",
                    "description": "The name of the registrant's manager.",
                    "type": "string",
                    "required": false
                },
                "address3": {
                    "name": "address3",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "address2": {
                    "name": "address2",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "address1": {
                    "name": "address1",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1Country": {
                    "name": "mobilePhone1Country",
                    "description": "The country code used for the registrant's mobile phone number, for example, CA for Canada.",
                    "type": "string",
                    "required": false
                },
                "photo": {
                    "name": "photo",
                    "description": "URL or path to a photo of the registrant.",
                    "type": "string",
                    "required": false
                },
                "receiveEmail": {
                    "name": "receiveEmail",
                    "description": "Determines whether the registrant wants to receive marketing e-mail activities for the current store (or all stores if no stores have been visited during the session): true - The user wants to receive marketing e-mail activities; false - The user does not want to receive e-mail activities (the default).",
                    "type": "string",
                    "required": false
                },
                "employeeId": {
                    "name": "employeeId",
                    "description": "The registrant's ID with his or her employer.",
                    "type": "string",
                    "required": false
                },
                "dateOfBirth": {
                    "name": "dateOfBirth",
                    "description": "Date of birth. The format is yyyy-mm-dd, for example: 1980-01-01.",
                    "type": "string",
                    "required": false
                },
                "preferredDelivery": {
                    "name": "preferredDelivery",
                    "description": "The registrant's preferred mode of delivery.",
                    "type": "string",
                    "required": false
                },
                "officeAddress": {
                    "name": "officeAddress",
                    "description": "The internal address (for example, mail stop).",
                    "type": "string",
                    "required": false
                },
                "userId": {
                    "name": "userId",
                    "description": "The user the administrator will update.",
                    "type": "string",
                    "required": false
                },
                "phone1Type": {
                    "name": "phone1Type",
                    "description": "The type of phone used for the registrant's primary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.",
                    "type": "string",
                    "required": false
                },
                "shippingGeoCode": {
                    "name": "shippingGeoCode",
                    "description": "A shipping code based on geographical region, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "alternateId": {
                    "name": "alternateId",
                    "description": "A special ID assigned by the registrant's business organization or organizational unit to this particular registrant..",
                    "type": "string",
                    "required": false
                },
                "bestCallingTime": {
                    "name": "bestCallingTime",
                    "description": "D - An indicator that daytime is the best time to call the registrant; E - An indicator that evening is the best time to call the registrant.",
                    "type": "string",
                    "required": false
                },
                "billingCode": {
                    "name": "billingCode",
                    "description": "The registrant's organization's code to identify the shipping or billing addresses and cost center.",
                    "type": "string",
                    "required": false
                },
                "employeeType": {
                    "name": "employeeType",
                    "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time).",
                    "type": "string",
                    "required": false
                },
                "logonId": {
                    "name": "logonId",
                    "description": "The registrant's logon ID. If you are using LDAP, changing a user's logonID is not supported because it would require deleting and recreating the user in LDAP. This process would cause all non-WebSphere Commerce user attributes, such as the password, to be lost. If you are not using LDAP, changing the user's logon ID is not recommended, because the promotion subsystem stores the logon ID of the creator of the promotion in the XMLPARAM column of the PX_PROMOTION table. Note: When the UserRegistrationUpdate command is used to change the logonID, the command will automatically update the USERS.DN database column. Do not assume that ADDRESS.NICKNAME will also change. Instead, the following finder should be used to get the single self address of a user: AddressAccessBean.findSelfAddressByMember(Long memberID).",
                    "type": "string",
                    "required": false
                },
                "preferredCommunication": {
                    "name": "preferredCommunication",
                    "description": "The preferred phone for the registrant (stored in the ADDRESS table), for example: P1=phone 1 P2=phone 2.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "hobbies": {
                    "name": "hobbies",
                    "description": "The registrant's hobbies.",
                    "type": "string",
                    "required": false
                },
                "household": {
                    "name": "household",
                    "description": "The number of people in the registrant's household; the default is 1.",
                    "type": "string",
                    "required": false
                },
                "middleName": {
                    "name": "middleName",
                    "description": "The middle name of the registrant.",
                    "type": "string",
                    "required": false
                },
                "receiveSMSNotification": {
                    "name": "receiveSMSNotification",
                    "description": "Indicates whether the user wants to receive order notification SMS text messages. Valid values are true or false (default).",
                    "type": "string",
                    "required": false
                },
                "logonPasswordVerify": {
                    "name": "logonPasswordVerify",
                    "description": "Required if the logonPassword is used: The registrant's password, entered a second time.",
                    "type": "string",
                    "required": false
                },
                "age": {
                    "name": "age",
                    "description": "The registrant's age.",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.user.beans.UserDisplayDataBean_IBM_User_Display_Details": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserDisplayDataBean_IBM_User_Display_Details",
            "properties": {
                "manager": {
                    "description": "",
                    "type": "string"
                },
                "mobilePhone1": {
                    "description": "",
                    "type": "string"
                },
                "mobilePhone1Country": {
                    "description": "",
                    "type": "string"
                },
                "parentMemberId": {
                    "description": "",
                    "type": "string"
                },
                "phone2": {
                    "description": "",
                    "type": "string"
                },
                "dn": {
                    "description": "",
                    "type": "string"
                },
                "employeeId": {
                    "description": "",
                    "type": "string"
                },
                "logonPassword": {
                    "description": "",
                    "type": "string"
                },
                "parentOrgName": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "phone1": {
                    "description": "",
                    "type": "string"
                },
                "email2": {
                    "description": "",
                    "type": "string"
                },
                "email1": {
                    "description": "",
                    "type": "string"
                },
                "employeeType": {
                    "description": "",
                    "type": "string"
                },
                "secretary": {
                    "description": "",
                    "type": "string"
                },
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "departmentNumber": {
                    "description": "",
                    "type": "string"
                },
                "registrationUpdate": {
                    "description": "",
                    "type": "string"
                },
                "fax2": {
                    "description": "",
                    "type": "string"
                },
                "registration": {
                    "description": "",
                    "type": "string"
                },
                "fax1": {
                    "description": "",
                    "type": "string"
                },
                "lastSession": {
                    "description": "",
                    "type": "string"
                },
                "logonPasswordVerify": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.demographics": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.demographics",
            "properties": {
                "income": {
                    "description": "",
                    "type": "string"
                },
                "numberOfChildren": {
                    "description": "",
                    "type": "string"
                },
                "numberOfHouseholds": {
                    "description": "",
                    "type": "string"
                },
                "gender": {
                    "description": "",
                    "type": "string"
                },
                "hobbies": {
                    "description": "",
                    "type": "string"
                },
                "incomeCurrency": {
                    "description": "",
                    "type": "string"
                },
                "timezone": {
                    "description": "",
                    "type": "string"
                },
                "companyName": {
                    "description": "",
                    "type": "string"
                },
                "orderBefore": {
                    "description": "",
                    "type": "string"
                },
                "dateOfBirth": {
                    "description": "",
                    "type": "string"
                },
                "age": {
                    "description": "",
                    "type": "string"
                },
                "maritalStatus": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddRequest": {
            "description": "Request of UserRegistrationAdminAdd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddRequest",
            "properties": {
                "country": {
                    "name": "country",
                    "description": "The name of the country or region where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "personTitle": {
                    "name": "personTitle",
                    "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr. or Ms.).",
                    "type": "string",
                    "required": false
                },
                "taxGeoCode": {
                    "name": "taxGeoCode",
                    "description": "A tax code based on geographical region, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "zipCode": {
                    "name": "zipCode",
                    "description": "The ZIP or postal code of the registrant's address.",
                    "type": "string",
                    "required": false
                },
                "challengeAnswer": {
                    "name": "challengeAnswer",
                    "description": "Answer to the challenge question.",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1": {
                    "name": "mobilePhone1",
                    "description": "The registrant's mobile phone number used for SMS, for example, 4161235555.",
                    "type": "string",
                    "required": false
                },
                "preferredCurrency": {
                    "name": "preferredCurrency",
                    "description": "The registrant's preferred currency for transactions.",
                    "type": "string",
                    "required": false
                },
                "companyName": {
                    "name": "companyName",
                    "description": "The company name of the organization that the registrant represents, obtained when filling in demographic information.",
                    "type": "string",
                    "required": false
                },
                "phone2": {
                    "name": "phone2",
                    "description": "The registrant's secondary phone number.",
                    "type": "string",
                    "required": false
                },
                "organizationUnitName": {
                    "name": "organizationUnitName",
                    "description": "The name of the unit within the organization that the registrant represents.",
                    "type": "string",
                    "required": false
                },
                "receiveSMS": {
                    "name": "receiveSMS",
                    "description": "Specifies whether the registrant wants to receive marketing SMS messages for the current store (or all stores if no stores have been visited during the session). Valid values are true or false (default).",
                    "type": "string",
                    "required": false
                },
                "phone1": {
                    "name": "phone1",
                    "description": "The registrant's primary phone number.",
                    "type": "string",
                    "required": false
                },
                "organizationId": {
                    "name": "organizationId",
                    "description": "The identifier of the registrant's company.",
                    "type": "string",
                    "required": false
                },
                "email2": {
                    "name": "email2",
                    "description": "The registrant's secondary e-mail or Web address.",
                    "type": "string",
                    "required": false
                },
                "email1": {
                    "name": "email1",
                    "description": "The registrant's primary e-mail or Web address.",
                    "type": "string",
                    "required": false
                },
                "profileType": {
                    "name": "profileType",
                    "description": "The profile type of the user.",
                    "type": "string",
                    "required": false
                },
                "children": {
                    "name": "children",
                    "description": "The number of children the registrant has.",
                    "type": "string",
                    "required": false
                },
                "addressField1": {
                    "name": "addressField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "organizationUnitId": {
                    "name": "organizationUnitId",
                    "description": "The identifier of the registrant's organizational unit.",
                    "type": "string",
                    "required": false
                },
                "fax2": {
                    "name": "fax2",
                    "description": "The registrant's secondary facsimile number.",
                    "type": "string",
                    "required": false
                },
                "fax1": {
                    "name": "fax1",
                    "description": "The registrant's primary facsimile number.",
                    "type": "string",
                    "required": false
                },
                "state": {
                    "name": "state",
                    "description": "The name of the state, province, or equivalent where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "addressField2": {
                    "name": "addressField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "phone2Type": {
                    "name": "phone2Type",
                    "description": "The type of phone used for the registrant's secondary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.",
                    "type": "string",
                    "required": false
                },
                "addressField3": {
                    "name": "addressField3",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "organizationName": {
                    "name": "organizationName",
                    "description": "The name of the organization that the registrant represents.",
                    "type": "string",
                    "required": false
                },
                "parentMemberId": {
                    "name": "parentMemberId",
                    "description": "The parent member identifier of the user.",
                    "type": "string",
                    "required": false
                },
                "addressType": {
                    "name": "addressType",
                    "description": "The purpose of the address. Valid values are: S - shipto, B - billto, SB - shipto and billto (The default value.).",
                    "type": "string",
                    "required": false
                },
                "timeZone": {
                    "name": "timeZone",
                    "description": "The time zone in which the registrant does business (report as GMT +\/- hours).",
                    "type": "string",
                    "required": false
                },
                "logonPassword": {
                    "name": "logonPassword",
                    "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server.",
                    "type": "string",
                    "required": true
                },
                "firstName": {
                    "name": "firstName",
                    "description": "The first name of the registrant.",
                    "type": "string",
                    "required": false
                },
                "userField3": {
                    "name": "userField3",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "customMemberAttributes": {
                    "name": "customMemberAttributes",
                    "description": "You can manage custom member attributes (MBRATTRVAL table) for this user using the following syntax: &attributeName_storeId_action_number=value.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "userField1": {
                    "name": "userField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "demographicField7": {
                    "name": "demographicField7",
                    "description": "Customizable field for demographic information; a field varchar, length 6.",
                    "type": "string",
                    "required": false
                },
                "userField2": {
                    "name": "userField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "taxPayerId": {
                    "name": "taxPayerId",
                    "description": "A string used to identify the user for taxation, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "demographicField5": {
                    "name": "demographicField5",
                    "description": "Customizable field for demographic information; a field of 254 characters.",
                    "type": "string",
                    "required": false
                },
                "departmentNumber": {
                    "name": "departmentNumber",
                    "description": "The department identifier for the registrant.",
                    "type": "string",
                    "required": false
                },
                "demographicField6": {
                    "name": "demographicField6",
                    "description": "Customizable field for demographic information; an integer field.",
                    "type": "string",
                    "required": false
                },
                "packageSuppression": {
                    "name": "packageSuppression",
                    "description": "1 - An indicator to include package inserts when the order is shipped; 0 - An indicator to not include package inserts when the order is shipped. There is no default for this field. If the field is left unused, it remains null in the database",
                    "type": "string",
                    "required": false
                },
                "orderBefore": {
                    "name": "orderBefore",
                    "description": "Whether the registrant has previously placed an order. This value is supplied by the registrant.",
                    "type": "string",
                    "required": false
                },
                "userProfileField1": {
                    "name": "userProfileField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "userProfileField2": {
                    "name": "userProfileField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "maritalStatus": {
                    "name": "maritalStatus",
                    "description": "The registrant's marital statu.",
                    "type": "string",
                    "required": false
                },
                "income": {
                    "name": "income",
                    "description": "The registrant's annual incom.",
                    "type": "string",
                    "required": false
                },
                "lastName": {
                    "name": "lastName",
                    "description": "Required if the authentication mode is LDAP: The last name of the registrant. If the authentication mode is LDAP, this parameter is mandatory.",
                    "type": "string",
                    "required": false
                },
                "preferredLanguage": {
                    "name": "preferredLanguage",
                    "description": "The registrant's preferred language.",
                    "type": "string",
                    "required": false
                },
                "gender": {
                    "name": "gender",
                    "description": "The registrant's gender.",
                    "type": "string",
                    "required": false
                },
                "city": {
                    "name": "city",
                    "description": "The name of the city where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "demographicField3": {
                    "name": "demographicField3",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "description": {
                    "name": "description",
                    "description": "A description of the registrant.",
                    "type": "string",
                    "required": false
                },
                "demographicField4": {
                    "name": "demographicField4",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "demographicField1": {
                    "name": "demographicField1",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "demographicField2": {
                    "name": "demographicField2",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                },
                "publishPhone2": {
                    "name": "publishPhone2",
                    "description": "1 - An indicator that the registrant's secondary phone number is listed; 0 - An indicator that the registrant's secondary phone number is unlisted.",
                    "type": "string",
                    "required": false
                },
                "publishPhone1": {
                    "name": "publishPhone1",
                    "description": "1 - An indicator that the registrant's primary phone number is listed; 0 - An indicator that the registrant's primary phone number is unlisted. There is no default for these publishPhone fields. If the field is left unused, it remains null in the database.",
                    "type": "string",
                    "required": false
                },
                "secretary": {
                    "name": "secretary",
                    "description": "The name of the registrant's secretary.",
                    "type": "string",
                    "required": false
                },
                "billingCodeType": {
                    "name": "billingCodeType",
                    "description": "Code designating the method of code structure used for the billing code. The default value is D, assigned by buyer.",
                    "type": "string",
                    "required": false
                },
                "incomeCurrency": {
                    "name": "incomeCurrency",
                    "description": "The currency in which the registrant's income is paid.",
                    "type": "string",
                    "required": false
                },
                "challengeQuestion": {
                    "name": "challengeQuestion",
                    "description": "Challenge question for verbal confirmation of the customer's identity.",
                    "type": "string",
                    "required": false
                },
                "preferredMeasure": {
                    "name": "preferredMeasure",
                    "description": "The registrant's preferred unit of measure.",
                    "type": "string",
                    "required": false
                },
                "manager": {
                    "name": "manager",
                    "description": "The name of the registrant's manager.",
                    "type": "string",
                    "required": false
                },
                "address3": {
                    "name": "address3",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "address2": {
                    "name": "address2",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "address1": {
                    "name": "address1",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1Country": {
                    "name": "mobilePhone1Country",
                    "description": "The country code used for the registrant's mobile phone number, for example, CA for Canada.",
                    "type": "string",
                    "required": false
                },
                "photo": {
                    "name": "photo",
                    "description": "URL or path to a photo of the registrant.",
                    "type": "string",
                    "required": false
                },
                "receiveEmail": {
                    "name": "receiveEmail",
                    "description": "Determines whether the registrant wants to receive marketing e-mail activities for the current store (or all stores if no stores have been visited during the session): true - The user wants to receive marketing e-mail activities; false - The user does not want to receive e-mail activities (the default).",
                    "type": "string",
                    "required": false
                },
                "employeeId": {
                    "name": "employeeId",
                    "description": "The registrant's ID with his or her employer.",
                    "type": "string",
                    "required": false
                },
                "dateOfBirth": {
                    "name": "dateOfBirth",
                    "description": "Date of birth. The format is yyyy-mm-dd, for example: 1980-01-01.",
                    "type": "string",
                    "required": false
                },
                "preferredDelivery": {
                    "name": "preferredDelivery",
                    "description": "The registrant's preferred mode of delivery.",
                    "type": "string",
                    "required": false
                },
                "officeAddress": {
                    "name": "officeAddress",
                    "description": "The internal address (for example, mail stop).",
                    "type": "string",
                    "required": false
                },
                "phone1Type": {
                    "name": "phone1Type",
                    "description": "The type of phone used for the registrant's primary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.",
                    "type": "string",
                    "required": false
                },
                "shippingGeoCode": {
                    "name": "shippingGeoCode",
                    "description": "A shipping code based on geographical region, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "alternateId": {
                    "name": "alternateId",
                    "description": "A special ID assigned by the registrant's business organization or organizational unit to this particular registrant..",
                    "type": "string",
                    "required": false
                },
                "bestCallingTime": {
                    "name": "bestCallingTime",
                    "description": "D - An indicator that daytime is the best time to call the registrant; E - An indicator that evening is the best time to call the registrant.",
                    "type": "string",
                    "required": false
                },
                "billingCode": {
                    "name": "billingCode",
                    "description": "The registrant's organization's code to identify the shipping or billing addresses and cost center.",
                    "type": "string",
                    "required": false
                },
                "employeeType": {
                    "name": "employeeType",
                    "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time).",
                    "type": "string",
                    "required": false
                },
                "logonId": {
                    "name": "logonId",
                    "description": "The registrant's logon ID. If you are using LDAP, changing a user's logonID is not supported because it would require deleting and recreating the user in LDAP. This process would cause all non-WebSphere Commerce user attributes, such as the password, to be lost. If you are not using LDAP, changing the user's logon ID is not recommended, because the promotion subsystem stores the logon ID of the creator of the promotion in the XMLPARAM column of the PX_PROMOTION table. Note: When the UserRegistrationUpdate command is used to change the logonID, the command will automatically update the USERS.DN database column. Do not assume that ADDRESS.NICKNAME will also change. Instead, the following finder should be used to get the single self address of a user: AddressAccessBean.findSelfAddressByMember(Long memberID).",
                    "type": "string",
                    "required": true
                },
                "preferredCommunication": {
                    "name": "preferredCommunication",
                    "description": "The preferred phone for the registrant (stored in the ADDRESS table), for example: P1=phone 1 P2=phone 2.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "hobbies": {
                    "name": "hobbies",
                    "description": "The registrant's hobbies.",
                    "type": "string",
                    "required": false
                },
                "household": {
                    "name": "household",
                    "description": "The number of people in the registrant's household; the default is 1.",
                    "type": "string",
                    "required": false
                },
                "middleName": {
                    "name": "middleName",
                    "description": "The middle name of the registrant.",
                    "type": "string",
                    "required": false
                },
                "receiveSMSNotification": {
                    "name": "receiveSMSNotification",
                    "description": "Indicates whether the user wants to receive order notification SMS text messages. Valid values are true or false (default).",
                    "type": "string",
                    "required": false
                },
                "logonPasswordVerify": {
                    "name": "logonPasswordVerify",
                    "description": "Required if the logonPassword is used: The registrant's password, entered a second time.",
                    "type": "string",
                    "required": true
                },
                "age": {
                    "name": "age",
                    "description": "The registrant's age.",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$ResetPasswordAdministratorRequest": {
            "description": "Request of ResetPasswordAdministratorCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$ResetPasswordAdministratorRequest",
            "properties": {
                "logonId": {
                    "name": "logonId",
                    "description": "The logonId of shopper whose password needs to be reset.",
                    "type": "string",
                    "required": true
                },
                "administratorPassword": {
                    "name": "administratorPassword",
                    "description": "The administrator password",
                    "type": "string",
                    "required": false
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUser": {
            "description": "Body of MemberGroupMemberUpdateCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUser",
            "properties": {
                "addAsExplicitExclusionToMemberGroupId": {
                    "name": "addAsExplicitExclusionToMemberGroupId",
                    "description": "MemberGroup Identifiers to explicitly exclude the user from ",
                    "type": "string",
                    "required": false
                },
                "addAsExplicitInclusionToMemberGroupId": {
                    "name": "addAsExplicitInclusionToMemberGroupId",
                    "description": "MemberGroup Identifiers to explicitly add the user too .",
                    "type": "string",
                    "required": false
                },
                "removeFromMemberGroupId": {
                    "name": "removeFromMemberGroupId",
                    "description": "MemberGroup Identifiers to remove the user from",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddResponse": {
            "description": "Response of UserRegistrationAdminAddCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddResponse",
            "properties": {
                "logonId": {
                    "name": "logonId",
                    "description": "The logon ID of the user.",
                    "type": "string",
                    "required": true
                },
                "userId": {
                    "name": "userId",
                    "description": "The user unique identifier.",
                    "type": "string",
                    "required": true
                },
                "addressId": {
                    "name": "addressId",
                    "description": "The address identifier of the user.",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary.address": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary.address",
            "properties": {
                "country": {
                    "description": "",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "zipCode": {
                    "description": "",
                    "type": "string"
                },
                "address3": {
                    "description": "",
                    "type": "string"
                },
                "mobilePhone1": {
                    "description": "",
                    "type": "string"
                },
                "address2": {
                    "description": "",
                    "type": "string"
                },
                "city": {
                    "description": "",
                    "type": "string"
                },
                "address1": {
                    "description": "",
                    "type": "string"
                },
                "addressType": {
                    "description": "",
                    "type": "string"
                },
                "nickName": {
                    "description": "",
                    "type": "string"
                },
                "addressId": {
                    "description": "",
                    "type": "string"
                },
                "phone1": {
                    "description": "",
                    "type": "string"
                },
                "firstName": {
                    "description": "",
                    "type": "string"
                },
                "email1": {
                    "description": "",
                    "type": "string"
                },
                "middleName": {
                    "description": "",
                    "type": "string"
                },
                "state": {
                    "description": "",
                    "type": "string"
                },
                "memberId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All.orgIdRoleDataBeans": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All.orgIdRoleDataBeans",
            "properties": {}
        },
        "person-person.receiveSMSPreference": {
            "id": "person-person.receiveSMSPreference",
            "properties": {
                "storeID": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "value": {
                    "description": "",
                    "type": "string",
                    "required": true
                }
            }
        },
        "person-person.contextAttribute": {
            "id": "person-person.contextAttribute",
            "properties": {
                "attributeValue": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.contextAttribute.attributeValue"
                    },
                    "required": true
                },
                "attributeName": {
                    "description": "",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered",
            "properties": {
                "topLevelOrganizationsDirectlyAdministered": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered.topLevelOrganizationsDirectlyAdministered"
                },
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "registerType": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin",
            "properties": {
                "orgIdRoleDataBeans": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin.orgIdRoleDataBeans"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$DeleteContextAttribute": {
            "description": "Delete context attribute response.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$DeleteContextAttribute",
            "properties": {
                "userId": {
                    "name": "userId",
                    "description": "The user identifier list.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "addressId": {
                    "name": "addressId",
                    "description": "The address identifier list.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                }
            }
        },
        "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_all": {
            "description": "",
            "id": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_all",
            "properties": {
                "userReceiveSMS": {
                    "description": "",
                    "type": "boolean"
                },
                "userReceive": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.userRegistry": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.userRegistry",
            "properties": {
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details.rolesWithDetails": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details.rolesWithDetails",
            "properties": {
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "roleId": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.userRegistry": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.userRegistry",
            "properties": {
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.price.commands.SetCurrencyPreferenceCmd": {
            "description": "",
            "id": "com.ibm.commerce.price.commands.SetCurrencyPreferenceCmd",
            "properties": {}
        },
        "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin.orgIdRoleDataBeans": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin.orgIdRoleDataBeans",
            "properties": {}
        },
        "person-person.attributes": {
            "id": "person-person.attributes",
            "properties": {
                "contactInfoAttrValue": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "pProfileAttrKey": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "bProfileAttrValue": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "bProfileAttrKey": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "contactInfoAttrKey": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "pProfileAttrValue": {
                    "description": "",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans",
            "properties": {
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "parentMemberId": {
                    "description": "",
                    "type": "string"
                },
                "preferredCurrency": {
                    "description": "",
                    "type": "string"
                },
                "roles": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "distinguishedName": {
                    "description": "",
                    "type": "string"
                },
                "registerType": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userProfile": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.userProfile"
                },
                "firstName": {
                    "description": "",
                    "type": "string"
                },
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "profileType": {
                    "description": "",
                    "type": "string"
                },
                "businessProfile": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.businessProfile"
                },
                "personalizationId": {
                    "description": "",
                    "type": "string"
                },
                "state": {
                    "description": "",
                    "type": "string"
                },
                "userRegistry": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.userRegistry"
                },
                "demographics": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.demographics"
                },
                "memberId": {
                    "description": "",
                    "type": "string"
                },
                "preferredLanguageId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.usermanagement.commands.MemberRoleAssignCmd": {
            "description": "",
            "id": "com.ibm.commerce.usermanagement.commands.MemberRoleAssignCmd",
            "properties": {}
        },
        "com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType": {
            "id": "com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType",
            "properties": {
                "distinguishedName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "uniqueID": {
                    "description": "",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details",
            "properties": {
                "recordSetCount": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "pageNumber": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "userDataBeans": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans"
                    }
                },
                "pageSize": {
                    "description": "",
                    "type": "string"
                },
                "recordSetTotal": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "recordSetCompleteIndicator": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.businessProfile": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.businessProfile",
            "properties": {
                "organizationId": {
                    "description": "",
                    "type": "string"
                },
                "employeeType": {
                    "description": "",
                    "type": "string"
                },
                "departmentNumber": {
                    "description": "",
                    "type": "string"
                },
                "employeeId": {
                    "description": "",
                    "type": "string"
                },
                "organizationUnitId": {
                    "description": "",
                    "type": "string"
                },
                "requistionerId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.userProfile": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.userProfile",
            "properties": {
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "receiveSMSNotification": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary",
            "properties": {
                "personTitle": {
                    "description": "",
                    "type": "string"
                },
                "address": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary.address"
                },
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "registerType": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details",
            "properties": {
                "rolesWithDetails": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details.rolesWithDetails"
                    }
                },
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.demographics": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.demographics",
            "properties": {
                "gender": {
                    "description": "",
                    "type": "string"
                },
                "dateOfBirth": {
                    "description": "",
                    "type": "string"
                },
                "age": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "person-person": {
            "id": "person-person",
            "properties": {
                "personTitle": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "country": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "zipCode": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "registrationStatus": {
                    "description": "",
                    "type": "string",
                    "required": false,
                    "enum": [
                        "Guest",
                        "RegisteredPerson"
                    ]
                },
                "mobilePhone1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "householdSize": {
                    "format": "int32",
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "companyName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "preferredCurrency": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone2": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "phone2Publish": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "language": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone1Publish": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "organizationUnitName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "geographicalShippingCode": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "addressId": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "email2": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "email1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "profileType": {
                    "description": "",
                    "type": "string",
                    "required": false,
                    "enum": [
                        "Consumer",
                        "Business"
                    ]
                },
                "organizationIdentifier": {
                    "description": "",
                    "$ref": "com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType",
                    "required": false
                },
                "businessTitle": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "contact": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.contact"
                    },
                    "required": false
                },
                "fax2": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "state": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "fax1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "phone2Type": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "organizationName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "nickName": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "addressType": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "contextAttribute": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.contextAttribute"
                    },
                    "required": false
                },
                "registrationDateTime": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "firstName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "numberOfChildren": {
                    "format": "int32",
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "lastUpdate": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "departmentNumber": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "maritalStatus": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "primary": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "income": {
                    "description": "",
                    "$ref": "com.ibm.commerce.member.facade.datatypes.IncomeAmountType",
                    "required": false
                },
                "lastName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "preferredLanguage": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "gender": {
                    "description": "",
                    "type": "string",
                    "required": false,
                    "enum": [
                        "Male",
                        "Female",
                        "Unspecified"
                    ]
                },
                "city": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "displayName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "distinguishedName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "description": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "employeeID": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "orgizationId": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "accountStatus": {
                    "description": "",
                    "type": "string",
                    "required": false,
                    "enum": [
                        "Enabled",
                        "Disabled"
                    ]
                },
                "secretary": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "photoURI": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "challengeQuestion": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "manager": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1Country": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "userDataField": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.userDataField"
                    },
                    "required": false
                },
                "dateOfBirth": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "geographicalTaxCode": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "preferredDelivery": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "addressLine": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "userId": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone1Type": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "bestCallingTime": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "organizationDistinguishedName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "employeeType": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "preferredCommunication": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "logonId": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "receiveEmailPreference": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.receiveEmailPreference"
                    },
                    "required": false
                },
                "hobbies": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "registrationApprovalStatus": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "internalOfficeAddress": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "personIdentifier": {
                    "description": "",
                    "$ref": "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType",
                    "required": false
                },
                "attributes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.attributes"
                    },
                    "required": false
                },
                "middleName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "passwordExpired": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "receiveSMSNotification": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "receiveSMSPreference": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.receiveSMSPreference"
                    },
                    "required": false
                }
            }
        },
        "person-person.contextAttribute.attributeValue": {
            "id": "person-person.contextAttribute.attributeValue",
            "properties": {
                "storeId": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "value": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                }
            }
        },
        "com.ibm.commerce.security.commands.ResetPasswordAdministratorCmd": {
            "description": "",
            "id": "com.ibm.commerce.security.commands.ResetPasswordAdministratorCmd",
            "properties": {}
        },
        "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All",
            "properties": {
                "orgIdRoleDataBeans": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All.orgIdRoleDataBeans"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.userProfile": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details.userDataBeans.userProfile",
            "properties": {
                "preferredCommunication": {
                    "description": "",
                    "type": "string"
                },
                "preferredMeasure": {
                    "description": "",
                    "type": "string"
                },
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "taxPayerId": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "preferredDelivery": {
                    "description": "",
                    "type": "string"
                },
                "receiveSMSNotification": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Empty": {
            "description": "Empty model. Used as default value when no model is specified.",
            "id": "Empty",
            "properties": {}
        },
        "person-person.contact.userDataField": {
            "id": "person-person.contact.userDataField",
            "properties": {
                "value": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "key": {
                    "description": "",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier": {
            "description": "User identitifier.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
            "properties": {
                "userId": {
                    "name": "userId",
                    "description": "The user identifier.",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans",
            "properties": {
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "preferredCurrency": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userProfile": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.userProfile"
                },
                "firstName": {
                    "description": "",
                    "type": "string"
                },
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "businessProfile": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.businessProfile"
                },
                "personalizationId": {
                    "description": "",
                    "type": "string"
                },
                "state": {
                    "description": "",
                    "type": "string"
                },
                "demographics": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.demographics"
                },
                "memberId": {
                    "description": "",
                    "type": "string"
                },
                "preferredLanguageId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUserResponse": {
            "description": "response of MemberGroupMemberUpdateCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUserResponse",
            "properties": {
                "addAsExplicitExclusionToMemberGroupId": {
                    "name": "addAsExplicitExclusionToMemberGroupId",
                    "description": "MemberGroup Identifiers to explicitly exclude the user from ",
                    "type": "string",
                    "required": false
                },
                "requesttype": {
                    "name": "requesttype",
                    "description": "The request type ie (ajax)",
                    "type": "string",
                    "required": false
                },
                "catalogId": {
                    "name": "catalogId",
                    "description": "The catalog identifier",
                    "type": "string",
                    "required": false
                },
                "addAsExplicitInclusionToMemberGroupId": {
                    "name": "addAsExplicitInclusionToMemberGroupId",
                    "description": "MemberGroup Identifiers to explicitly add the user too .",
                    "type": "string",
                    "required": false
                },
                "removeFromMemberGroupId": {
                    "name": "removeFromMemberGroupId",
                    "description": "MemberGroup Identifiers to remove the user from",
                    "type": "string",
                    "required": false
                },
                "storeId": {
                    "name": "storeId",
                    "description": "The current store identifier",
                    "type": "string",
                    "required": false
                },
                "userId": {
                    "name": "userId",
                    "description": "The user identifier",
                    "type": "string",
                    "required": false
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered.topLevelOrganizationsDirectlyAdministered": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered.topLevelOrganizationsDirectlyAdministered",
            "properties": {}
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.businessProfile": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.businessProfile",
            "properties": {
                "organizationId": {
                    "description": "",
                    "type": "string"
                },
                "employeeId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.address": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.address",
            "properties": {
                "country": {
                    "description": "",
                    "type": "string"
                },
                "lastName": {
                    "description": "",
                    "type": "string"
                },
                "zipCode": {
                    "description": "",
                    "type": "string"
                },
                "address3": {
                    "description": "",
                    "type": "string"
                },
                "mobilePhone1": {
                    "description": "",
                    "type": "string"
                },
                "address2": {
                    "description": "",
                    "type": "string"
                },
                "city": {
                    "description": "",
                    "type": "string"
                },
                "address1": {
                    "description": "",
                    "type": "string"
                },
                "addressType": {
                    "description": "",
                    "type": "string"
                },
                "mobilePhone1Country": {
                    "description": "",
                    "type": "string"
                },
                "nickName": {
                    "description": "",
                    "type": "string"
                },
                "phone2": {
                    "description": "",
                    "type": "string"
                },
                "addressId": {
                    "description": "",
                    "type": "string"
                },
                "phone1": {
                    "description": "",
                    "type": "string"
                },
                "email2": {
                    "description": "",
                    "type": "string"
                },
                "firstName": {
                    "description": "",
                    "type": "string"
                },
                "email1": {
                    "description": "",
                    "type": "string"
                },
                "fax2": {
                    "description": "",
                    "type": "string"
                },
                "middleName": {
                    "description": "",
                    "type": "string"
                },
                "fax1": {
                    "description": "",
                    "type": "string"
                },
                "state": {
                    "description": "",
                    "type": "string"
                },
                "memberId": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$MemberRoleAssignRequest": {
            "description": "Request of MemberRoleAssignCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$MemberRoleAssignRequest",
            "properties": {
                "roleIdi": {
                    "name": "roleIdi",
                    "description": "The role identifier. The roleId parameter takes the forms like roleId, roleId1, roleId2..., the corresponding orgEntityId should be orgEntityId, orgEntiyId1, orgEntityId2...",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                },
                "orgEntityIdi": {
                    "name": "orgEntityIdi",
                    "description": "The organization entity identifier.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                }
            }
        },
        "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_sms": {
            "description": "",
            "id": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_sms",
            "properties": {
                "userReceiveSMS": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType.externalIdentifier": {
            "id": "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType.externalIdentifier",
            "properties": {
                "identifier": {
                    "description": "",
                    "type": "string",
                    "required": false
                }
            }
        },
        "java.util.Map$Entry": {
            "id": "java.util.Map$Entry",
            "properties": {
                "value": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "key": {
                    "description": "",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.userProfile": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans.userProfile",
            "properties": {
                "preferredCommunication": {
                    "description": "",
                    "type": "string"
                },
                "preferredMeasure": {
                    "description": "",
                    "type": "string"
                },
                "displayName": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "preferredDelivery": {
                    "description": "",
                    "type": "string"
                },
                "receiveSMSNotification": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_email": {
            "description": "",
            "id": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_email",
            "properties": {
                "userReceive": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationUpdateRequest": {
            "description": "Request of UserRegistrationUpdateCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationUpdateRequest",
            "properties": {
                "country": {
                    "name": "country",
                    "description": "The name of the country or region where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "personTitle": {
                    "name": "personTitle",
                    "description": "The title of the user whose address is being entered (for example, Dr., Rev., Mr. or Ms.).",
                    "type": "string",
                    "required": false
                },
                "taxGeoCode": {
                    "name": "taxGeoCode",
                    "description": "A tax code based on geographical region, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "zipCode": {
                    "name": "zipCode",
                    "description": "The ZIP or postal code of the registrant's address.",
                    "type": "string",
                    "required": false
                },
                "challengeAnswer": {
                    "name": "challengeAnswer",
                    "description": "Answer to the challenge question.",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1": {
                    "name": "mobilePhone1",
                    "description": "The registrant's mobile phone number used for SMS, for example, 4161235555.",
                    "type": "string",
                    "required": false
                },
                "preferredCurrency": {
                    "name": "preferredCurrency",
                    "description": "The registrant's preferred currency for transactions.",
                    "type": "string",
                    "required": false
                },
                "companyName": {
                    "name": "companyName",
                    "description": "The company name of the organization that the registrant represents, obtained when filling in demographic information.",
                    "type": "string",
                    "required": false
                },
                "phone2": {
                    "name": "phone2",
                    "description": "The registrant's secondary phone number.",
                    "type": "string",
                    "required": false
                },
                "organizationUnitName": {
                    "name": "organizationUnitName",
                    "description": "The name of the unit within the organization that the registrant represents.",
                    "type": "string",
                    "required": false
                },
                "receiveSMS": {
                    "name": "receiveSMS",
                    "description": "Specifies whether the registrant wants to receive marketing SMS messages for the current store (or all stores if no stores have been visited during the session). Valid values are true or false (default).",
                    "type": "string",
                    "required": false
                },
                "phone1": {
                    "name": "phone1",
                    "description": "The registrant's primary phone number.",
                    "type": "string",
                    "required": false
                },
                "organizationId": {
                    "name": "organizationId",
                    "description": "The identifier of the registrant's company.",
                    "type": "string",
                    "required": false
                },
                "email2": {
                    "name": "email2",
                    "description": "The registrant's secondary e-mail or Web address.",
                    "type": "string",
                    "required": false
                },
                "email1": {
                    "name": "email1",
                    "description": "The registrant's primary e-mail or Web address.",
                    "type": "string",
                    "required": false
                },
                "children": {
                    "name": "children",
                    "description": "The number of children the registrant has.",
                    "type": "string",
                    "required": false
                },
                "addressField1": {
                    "name": "addressField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "organizationUnitId": {
                    "name": "organizationUnitId",
                    "description": "The identifier of the registrant's organizational unit.",
                    "type": "string",
                    "required": false
                },
                "fax2": {
                    "name": "fax2",
                    "description": "The registrant's secondary facsimile number.",
                    "type": "string",
                    "required": false
                },
                "fax1": {
                    "name": "fax1",
                    "description": "The registrant's primary facsimile number.",
                    "type": "string",
                    "required": false
                },
                "state": {
                    "name": "state",
                    "description": "The name of the state, province, or equivalent where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "addressField2": {
                    "name": "addressField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "phone2Type": {
                    "name": "phone2Type",
                    "description": "The type of phone used for the registrant's secondary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.",
                    "type": "string",
                    "required": false
                },
                "addressField3": {
                    "name": "addressField3",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "organizationName": {
                    "name": "organizationName",
                    "description": "The name of the organization that the registrant represents.",
                    "type": "string",
                    "required": false
                },
                "addressType": {
                    "name": "addressType",
                    "description": "The purpose of the address. Valid values are: S - shipto, B - billto, SB - shipto and billto (The default value.).",
                    "type": "string",
                    "required": false
                },
                "timeZone": {
                    "name": "timeZone",
                    "description": "The time zone in which the registrant does business (report as GMT +\/- hours).",
                    "type": "string",
                    "required": false
                },
                "logonPassword": {
                    "name": "logonPassword",
                    "description": "The registrant's password. In database mode, the password is encrypted before it is saved in the database. In LDAP mode, the password is only stored on the LDAP server.",
                    "type": "string",
                    "required": false
                },
                "firstName": {
                    "name": "firstName",
                    "description": "The first name of the registrant.",
                    "type": "string",
                    "required": false
                },
                "userField3": {
                    "name": "userField3",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "customMemberAttributes": {
                    "name": "customMemberAttributes",
                    "description": "You can manage custom member attributes (MBRATTRVAL table) for this user using the following syntax: &attributeName_storeId_action_number=value.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "userField1": {
                    "name": "userField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "demographicField7": {
                    "name": "demographicField7",
                    "description": "Customizable field for demographic information; a field varchar, length 6.",
                    "type": "string",
                    "required": false
                },
                "userField2": {
                    "name": "userField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "taxPayerId": {
                    "name": "taxPayerId",
                    "description": "A string used to identify the user for taxation, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "demographicField5": {
                    "name": "demographicField5",
                    "description": "Customizable field for demographic information; a field of 254 characters.",
                    "type": "string",
                    "required": false
                },
                "departmentNumber": {
                    "name": "departmentNumber",
                    "description": "The department identifier for the registrant.",
                    "type": "string",
                    "required": false
                },
                "demographicField6": {
                    "name": "demographicField6",
                    "description": "Customizable field for demographic information; an integer field.",
                    "type": "string",
                    "required": false
                },
                "packageSuppression": {
                    "name": "packageSuppression",
                    "description": "1 - An indicator to include package inserts when the order is shipped; 0 - An indicator to not include package inserts when the order is shipped. There is no default for this field. If the field is left unused, it remains null in the database",
                    "type": "string",
                    "required": false
                },
                "orderBefore": {
                    "name": "orderBefore",
                    "description": "Whether the registrant has previously placed an order. This value is supplied by the registrant.",
                    "type": "string",
                    "required": false
                },
                "userProfileField1": {
                    "name": "userProfileField1",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "userProfileField2": {
                    "name": "userProfileField2",
                    "description": "Customizable field.",
                    "type": "string",
                    "required": false
                },
                "maritalStatus": {
                    "name": "maritalStatus",
                    "description": "The registrant's marital statu.",
                    "type": "string",
                    "required": false
                },
                "income": {
                    "name": "income",
                    "description": "The registrant's annual incom.",
                    "type": "string",
                    "required": false
                },
                "lastName": {
                    "name": "lastName",
                    "description": "Required if the authentication mode is LDAP: The last name of the registrant. If the authentication mode is LDAP, this parameter is mandatory.",
                    "type": "string",
                    "required": false
                },
                "preferredLanguage": {
                    "name": "preferredLanguage",
                    "description": "The registrant's preferred language.",
                    "type": "string",
                    "required": false
                },
                "gender": {
                    "name": "gender",
                    "description": "The registrant's gender.",
                    "type": "string",
                    "required": false
                },
                "city": {
                    "name": "city",
                    "description": "The name of the city where the registrant resides.",
                    "type": "string",
                    "required": false
                },
                "demographicField3": {
                    "name": "demographicField3",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "description": {
                    "name": "description",
                    "description": "A description of the registrant.",
                    "type": "string",
                    "required": false
                },
                "demographicField4": {
                    "name": "demographicField4",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "demographicField1": {
                    "name": "demographicField1",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "demographicField2": {
                    "name": "demographicField2",
                    "description": "Customizable field for demographic information; this is single-character field.",
                    "type": "string",
                    "required": false
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                },
                "publishPhone2": {
                    "name": "publishPhone2",
                    "description": "1 - An indicator that the registrant's secondary phone number is listed; 0 - An indicator that the registrant's secondary phone number is unlisted.",
                    "type": "string",
                    "required": false
                },
                "publishPhone1": {
                    "name": "publishPhone1",
                    "description": "1 - An indicator that the registrant's primary phone number is listed; 0 - An indicator that the registrant's primary phone number is unlisted. There is no default for these publishPhone fields. If the field is left unused, it remains null in the database.",
                    "type": "string",
                    "required": false
                },
                "secretary": {
                    "name": "secretary",
                    "description": "The name of the registrant's secretary.",
                    "type": "string",
                    "required": false
                },
                "billingCodeType": {
                    "name": "billingCodeType",
                    "description": "Code designating the method of code structure used for the billing code. The default value is D, assigned by buyer.",
                    "type": "string",
                    "required": false
                },
                "incomeCurrency": {
                    "name": "incomeCurrency",
                    "description": "The currency in which the registrant's income is paid.",
                    "type": "string",
                    "required": false
                },
                "challengeQuestion": {
                    "name": "challengeQuestion",
                    "description": "Challenge question for verbal confirmation of the customer's identity.",
                    "type": "string",
                    "required": false
                },
                "preferredMeasure": {
                    "name": "preferredMeasure",
                    "description": "The registrant's preferred unit of measure.",
                    "type": "string",
                    "required": false
                },
                "manager": {
                    "name": "manager",
                    "description": "The name of the registrant's manager.",
                    "type": "string",
                    "required": false
                },
                "address3": {
                    "name": "address3",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "address2": {
                    "name": "address2",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "address1": {
                    "name": "address1",
                    "description": "The registrant's street address, to a maximum of three lines of information.",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1Country": {
                    "name": "mobilePhone1Country",
                    "description": "The country code used for the registrant's mobile phone number, for example, CA for Canada.",
                    "type": "string",
                    "required": false
                },
                "photo": {
                    "name": "photo",
                    "description": "URL or path to a photo of the registrant.",
                    "type": "string",
                    "required": false
                },
                "receiveEmail": {
                    "name": "receiveEmail",
                    "description": "Determines whether the registrant wants to receive marketing e-mail activities for the current store (or all stores if no stores have been visited during the session): true - The user wants to receive marketing e-mail activities; false - The user does not want to receive e-mail activities (the default).",
                    "type": "string",
                    "required": false
                },
                "employeeId": {
                    "name": "employeeId",
                    "description": "The registrant's ID with his or her employer.",
                    "type": "string",
                    "required": false
                },
                "dateOfBirth": {
                    "name": "dateOfBirth",
                    "description": "Date of birth. The format is yyyy-mm-dd, for example: 1980-01-01.",
                    "type": "string",
                    "required": false
                },
                "preferredDelivery": {
                    "name": "preferredDelivery",
                    "description": "The registrant's preferred mode of delivery.",
                    "type": "string",
                    "required": false
                },
                "officeAddress": {
                    "name": "officeAddress",
                    "description": "The internal address (for example, mail stop).",
                    "type": "string",
                    "required": false
                },
                "phone1Type": {
                    "name": "phone1Type",
                    "description": "The type of phone used for the registrant's primary phone number, for example TTY for hearing impaired, PCM for pulse-coded modulation, or CEL for mobile. This is a field of 3 characters.",
                    "type": "string",
                    "required": false
                },
                "shippingGeoCode": {
                    "name": "shippingGeoCode",
                    "description": "A shipping code based on geographical region, especially useful with tax software.",
                    "type": "string",
                    "required": false
                },
                "alternateId": {
                    "name": "alternateId",
                    "description": "A special ID assigned by the registrant's business organization or organizational unit to this particular registrant..",
                    "type": "string",
                    "required": false
                },
                "bestCallingTime": {
                    "name": "bestCallingTime",
                    "description": "D - An indicator that daytime is the best time to call the registrant; E - An indicator that evening is the best time to call the registrant.",
                    "type": "string",
                    "required": false
                },
                "billingCode": {
                    "name": "billingCode",
                    "description": "The registrant's organization's code to identify the shipping or billing addresses and cost center.",
                    "type": "string",
                    "required": false
                },
                "employeeType": {
                    "name": "employeeType",
                    "description": "The registrant's status as an employee (for example, regular, permanent, contractor, or part time).",
                    "type": "string",
                    "required": false
                },
                "logonId": {
                    "name": "logonId",
                    "description": "The registrant's logon ID. If you are using LDAP, changing a user's logonID is not supported because it would require deleting and recreating the user in LDAP. This process would cause all non-WebSphere Commerce user attributes, such as the password, to be lost. If you are not using LDAP, changing the user's logon ID is not recommended, because the promotion subsystem stores the logon ID of the creator of the promotion in the XMLPARAM column of the PX_PROMOTION table. Note: When the UserRegistrationUpdate command is used to change the logonID, the command will automatically update the USERS.DN database column. Do not assume that ADDRESS.NICKNAME will also change. Instead, the following finder should be used to get the single self address of a user: AddressAccessBean.findSelfAddressByMember(Long memberID).",
                    "type": "string",
                    "required": false
                },
                "preferredCommunication": {
                    "name": "preferredCommunication",
                    "description": "The preferred phone for the registrant (stored in the ADDRESS table), for example: P1=phone 1 P2=phone 2.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "hobbies": {
                    "name": "hobbies",
                    "description": "The registrant's hobbies.",
                    "type": "string",
                    "required": false
                },
                "household": {
                    "name": "household",
                    "description": "The number of people in the registrant's household; the default is 1.",
                    "type": "string",
                    "required": false
                },
                "middleName": {
                    "name": "middleName",
                    "description": "The middle name of the registrant.",
                    "type": "string",
                    "required": false
                },
                "receiveSMSNotification": {
                    "name": "receiveSMSNotification",
                    "description": "Indicates whether the user wants to receive order notification SMS text messages. Valid values are true or false (default).",
                    "type": "string",
                    "required": false
                },
                "logonPasswordVerify": {
                    "name": "logonPasswordVerify",
                    "description": "Required if the logonPassword is used: The registrant's password, entered a second time.",
                    "type": "string",
                    "required": false
                },
                "age": {
                    "name": "age",
                    "description": "The registrant's age.",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType": {
            "id": "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType",
            "properties": {
                "externalIdentifier": {
                    "description": "",
                    "$ref": "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType.externalIdentifier",
                    "required": false
                },
                "distinguishedName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "uniqueID": {
                    "description": "",
                    "type": "string",
                    "required": false
                }
            }
        },
        "person-person.contact": {
            "id": "person-person.contact",
            "properties": {
                "lastName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "personTitle": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "zipCode": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "country": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "city": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone2": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "language": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone2Publish": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone1Publish": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "organizationUnitName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "geographicalShippingCode": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "addressId": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "phone1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "email2": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "email1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "organizationIdentifier": {
                    "description": "",
                    "$ref": "com.ibm.commerce.foundation.common.datatypes.OrganizationIdentifierType",
                    "required": false
                },
                "businessTitle": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "fax2": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "state": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "fax1": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "phone2Type": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "organizationName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "mobilePhone1Country": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "nickName": {
                    "description": "",
                    "type": "string",
                    "required": true
                },
                "addressType": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "userDataField": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "person-person.contact.userDataField"
                    },
                    "required": false
                },
                "geographicalTaxCode": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "addressLine": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": false
                },
                "phone1Type": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "bestCallingTime": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "firstName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "internalOfficeAddress": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "personIdentifier": {
                    "description": "",
                    "$ref": "com.ibm.commerce.foundation.common.datatypes.PersonIdentifierType",
                    "required": false
                },
                "attributes": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "java.util.Map$Entry"
                    },
                    "required": false
                },
                "middleName": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "primary": {
                    "description": "",
                    "type": "string",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary",
            "properties": {
                "recordSetCount": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "pageNumber": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "userDataBeans": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary.userDataBeans"
                    }
                },
                "pageSize": {
                    "description": "",
                    "type": "string"
                },
                "recordSetTotal": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "recordSetCompleteIndicator": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$MemberRoleUnassignRequest": {
            "description": "Request of MemberRoleUnassignCmd.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$MemberRoleUnassignRequest",
            "properties": {
                "roleIdi": {
                    "name": "roleIdi",
                    "description": "The role identifier. The roleId parameter takes the forms like roleId, roleId1, roleId2..., the corresponding orgEntityId should be orgEntityId, orgEntiyId1, orgEntityId2...",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "URL": {
                    "name": "URL",
                    "description": "The URL to be called when the command completes successfully.",
                    "type": "string",
                    "required": false
                },
                "orgEntityIdi": {
                    "name": "orgEntityIdi",
                    "description": "The organization entity identifier.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                }
            }
        },
        "person-person.userDataField": {
            "id": "person-person.userDataField",
            "properties": {
                "value": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "key": {
                    "description": "",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.member.facade.datatypes.IncomeAmountType": {
            "id": "com.ibm.commerce.member.facade.datatypes.IncomeAmountType",
            "properties": {
                "currency": {
                    "description": "",
                    "type": "string",
                    "required": false
                },
                "value": {
                    "format": "int32",
                    "description": "",
                    "type": "integer",
                    "required": false
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details",
            "properties": {
                "personTitle": {
                    "description": "",
                    "type": "string"
                },
                "preferredLanguage": {
                    "description": "",
                    "type": "string"
                },
                "address": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.address"
                },
                "organizationName": {
                    "description": "",
                    "type": "string"
                },
                "parentMemberId": {
                    "description": "",
                    "type": "string"
                },
                "preferredCurrency": {
                    "description": "",
                    "type": "string"
                },
                "registerType": {
                    "description": "",
                    "type": "string"
                },
                "userId": {
                    "description": "",
                    "type": "string"
                },
                "userProfile": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.userProfile"
                },
                "organizationId": {
                    "description": "",
                    "type": "string"
                },
                "logonId": {
                    "description": "",
                    "type": "string"
                },
                "userRegistry": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.userRegistry"
                },
                "demographics": {
                    "description": "",
                    "$ref": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.demographics"
                }
            }
        },
        "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.demographics": {
            "description": "",
            "id": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details.demographics",
            "properties": {
                "gender": {
                    "description": "",
                    "type": "string"
                },
                "dateOfBirth": {
                    "description": "",
                    "type": "string"
                },
                "age": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentity": {
            "description": "Information about a guest user identity.",
            "id": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentity",
            "properties": {
                "personalizationID": {
                    "name": "personalizationID",
                    "description": "The personalization identifier for the current session.",
                    "type": "string",
                    "required": true
                },
                "WCToken": {
                    "name": "WCToken",
                    "description": "The token used for authentication.",
                    "type": "string",
                    "required": true
                },
                "userId": {
                    "name": "userId",
                    "description": "The user unique identifier.",
                    "type": "string",
                    "required": true
                },
                "WCTrustedToken": {
                    "name": "WCTrustedToken",
                    "description": "The trusted token used for authentication. This token should only be used on encrypted channels.",
                    "type": "string",
                    "required": true
                }
            }
        },
        "com.ibm.commerce.usermanagement.commands.MemberRoleUnassignCmd": {
            "description": "",
            "id": "com.ibm.commerce.usermanagement.commands.MemberRoleUnassignCmd",
            "properties": {}
        }
    },
    "apiVersion": "unknown null Version : 0 Fix Pack : 0",
    "swaggerVersion": "1.2",
    "basePath": "https:\/\/@wccc54.torolab.ibm.com:5443\/wcs\/resources",
    "apis": [
        {
            "path": "\/store\/{storeId}\/person\/@self",
            "operations": [
                {
                    "summary": "Gets the account data for a registered user.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "person-person",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findPersonBySelf",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "person-person",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self\/languageCurrency",
            "operations": [
                {
                    "summary": "Change language and currency preference in profile and in context",
                    "notes": "",
                    "method": "PUT",
                    "responseClass": "com.ibm.commerce.price.commands.SetCurrencyPreferenceCmd",
                    "secureCallMandatory": false,
                    "partialAuthenticationAllowed": false,
                    "nickname": "changeLanguageCurrency",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.price.commands.SetCurrencyPreferenceCmd",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserDisplayDataBean_IBM_User_Display_Details",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserId",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserDisplayDataBean_IBM_User_Display_Details",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Registration_Summary",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserIdWUserRegistrationDetailsProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Details",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserIdWUserRegistrationSummaryProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Registration_Summary",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Registration_Summary",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserIdWAssignedRolesDetailsProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_Assigned_Roles_Details",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserIdWUserTopLevelOrganizationsAdministered",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserRegistrationConfigBasedDataBean_IBM_User_Top_Level_Org_Administered",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserIdWRolesOfUserAllProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_All",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to find user information by user identifier.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByUserIdWRolesOfUserInOrgsICanAdminProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.MemberRoleAssignDataBean_IBM_Roles_Of_User_In_Orgs_I_Can_Admin",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_Display_Details",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_Display_Details",
                                "IBM_User_Registration_Details",
                                "IBM_User_Top_Level_Org_Administered",
                                "IBM_Assigned_Roles_Details",
                                "IBM_Roles_Of_User_All",
                                "IBM_Roles_Of_User_In_Orgs_I_Can_Admin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "This allows an administrator to find users in organizations that he\/she can administer.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "usersICanAdmin",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_List_Summary",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_List_Summary",
                                "IBM_User_List_Details"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgName",
                            "description": "The parent organization name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "roleId",
                            "description": "The role ID.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "q",
                            "description": "The query name.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "usersICanAdmin"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "accountStatus",
                            "description": "The account status.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgId",
                            "description": "The parent organization ID.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByTableName",
                            "description": "The order by table name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByFieldName",
                            "description": "The order by field name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "startIndex",
                            "description": "The starting index of the result.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "maxResults",
                            "description": "The maximum number of results to be returned.",
                            "type": "string",
                            "required": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "This allows CSR\/CSS to find approved registered users in store organizations that he\/she can manage.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "registeredUsersICanManage",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Summary",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_List_Summary",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_List_Summary",
                                "IBM_User_List_Details"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "q",
                            "description": "The query name.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "registeredUsersICanManage"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByTableName",
                            "description": "The order by table name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByFieldName",
                            "description": "The order by field name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "startIndex",
                            "description": "The starting index of the result.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "maxResults",
                            "description": "The maximum number of results to be returned.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "logonId",
                            "description": "Logon Id of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "logonIdSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgName",
                            "description": "Parent organization name to search buyers. Only used in B2B store.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstName",
                            "description": "First name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstName",
                            "description": "First name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "lastName",
                            "description": "Last name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "lastNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "middleName",
                            "description": "Middle name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "middleNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "address1",
                            "description": "Address line 1 of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "address1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "city",
                            "description": "The city name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "citySearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "country",
                            "description": "The country or region name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "countrySearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email1",
                            "description": "The primary e-mail address of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email2",
                            "description": "The secondary e-mail address of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax1",
                            "description": "The primary fax number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax2",
                            "description": "The secondary fax number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field1",
                            "description": "Customizable field1 to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field2",
                            "description": "Customizable field1 to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone1",
                            "description": "The primary phone number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone2",
                            "description": "The secondary phone number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "state",
                            "description": "The state or province name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "stateSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "zipcode",
                            "description": " ZIP or postal code of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "zipcodeSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "This allows an administrator to find users in organizations that he\/she can administer.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "usersICanAdminWUserListDetailsProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_List_Summary",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_List_Summary",
                                "IBM_User_List_Details"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgName",
                            "description": "The parent organization name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "roleId",
                            "description": "The role ID.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "accountStatus",
                            "description": "The account status.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgId",
                            "description": "The parent organization ID.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByTableName",
                            "description": "The order by table name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByFieldName",
                            "description": "The order by field name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "startIndex",
                            "description": "The starting index of the result.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "maxResults",
                            "description": "The maximum number of results to be returned.",
                            "type": "string",
                            "required": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "This allows CSR\/CSS to find approved registered users in store organizations that he\/she can manage.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "registeredUsersICanManageWUserListDetailsProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.user.beans.UserSearchDataBean_IBM_User_List_Details",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_User_List_Summary",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_User_List_Summary",
                                "IBM_User_List_Details"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByTableName",
                            "description": "The order by table name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "orderByFieldName",
                            "description": "The order by field name.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "startIndex",
                            "description": "The starting index of the result.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "maxResults",
                            "description": "The maximum number of results to be returned.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "logonId",
                            "description": "Logon Id of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "logonIdSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgName",
                            "description": "Parent organization name to search buyers. Only used in B2B store.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "parentOrgNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstName",
                            "description": "First name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstName",
                            "description": "First name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "firstNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "lastName",
                            "description": "Last name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "lastNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "middleName",
                            "description": "Middle name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "middleNameSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "address1",
                            "description": "Address line 1 of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "address1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "city",
                            "description": "The city name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "citySearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "country",
                            "description": "The country or region name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "countrySearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email1",
                            "description": "The primary e-mail address of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email2",
                            "description": "The secondary e-mail address of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "email2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax1",
                            "description": "The primary fax number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax2",
                            "description": "The secondary fax number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "fax2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field1",
                            "description": "Customizable field1 to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field2",
                            "description": "Customizable field1 to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "field2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone1",
                            "description": "The primary phone number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone1SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone2",
                            "description": "The secondary phone number of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "phone2SearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "state",
                            "description": "The state or province name of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "stateSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "zipcode",
                            "description": " ZIP or postal code of the customer to search for.",
                            "type": "string",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "zipcodeSearchType",
                            "description": "The search type. The valid values are 1 (case sensitive and starts with), 2(case sensitive and contains), 3(case insensitive and starts with),4(case insensitive and contains), 5(case sensitive and exact match), 6(case insensitive and exact match),8(not equals)",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "8"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "This allows an administrator to find users based on a query name. See each query for details on input and output.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "Empty",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findByQuery",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "Empty",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "q",
                            "description": "The query name.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "usersICanAdmin"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self\/optOut",
            "operations": [
                {
                    "summary": "Find personal opt-out.  When the store level personal opt-out does not exist, the site level personal opt-out is returned.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_email",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findOptOutBySelf",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_email",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_optOut_email",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_optOut_email",
                                "IBM_optOut_sms",
                                "IBM_optOut_all"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self\/optOut",
            "operations": [
                {
                    "summary": "Find personal opt-out.  When the store level personal opt-out does not exist, the site level personal opt-out is returned.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_sms",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findOptOutBySelfWOptOutSmsProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_sms",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_optOut_email",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_optOut_email",
                                "IBM_optOut_sms",
                                "IBM_optOut_all"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self\/optOut",
            "operations": [
                {
                    "summary": "Find personal opt-out.  When the store level personal opt-out does not exist, the site level personal opt-out is returned.",
                    "notes": "",
                    "method": "GET",
                    "responseClass": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_all",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "findOptOutBySelfWOptOutAllProfileName",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.emarketing.beans.EmailUserReceiveDataBean_IBM_optOut_all",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "profileName",
                            "description": "Profile name. Profiles determine the subset of data to be returned by a query.  Default profile name = IBM_optOut_email",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "IBM_optOut_email",
                                "IBM_optOut_sms",
                                "IBM_optOut_all"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "Registers a new user.  When mode is set to admin, the register is done by an administrator.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentity",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "registerPerson",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentity",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "person-person",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "mode",
                            "description": "The mode of the rest service. Default value is 'self'.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "self",
                                "admin"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 201,
                            "message": "The requested resource has been created."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person",
            "operations": [
                {
                    "summary": "Registers a new user.  When mode is set to admin, the register is done by an administrator.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddResponse",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "registerPersonOnUserRegistrationAdminAdd",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddResponse",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminAddRequest",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "mode",
                            "description": "The mode of the rest service.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "self",
                                "admin"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 201,
                            "message": "The requested resource has been created."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self",
            "operations": [
                {
                    "summary": "Updates account data for a registered user.  This also supports resetting password for unauthenticated and authenticated users. When action is set to 'updateUserRegistration', user account data is updated using UserRegistrationUpdateCmd",
                    "notes": "",
                    "method": "PUT",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "updatePerson",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "person-person",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "action",
                            "description": "The action of the rest service.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "updateUserRegistration"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self",
            "operations": [
                {
                    "summary": "Updates account data for a registered user.  This also supports resetting password for unauthenticated and authenticated users. When action is set to 'updateUserRegistration', user account data is updated using UserRegistrationUpdateCmd",
                    "notes": "",
                    "method": "PUT",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "updatePersonOnUserRegistrationUpdate",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationUpdateRequest",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "action",
                            "description": "The action of the rest service.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "updateUserRegistration"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to update account data for a registered user.",
                    "notes": "",
                    "method": "PUT",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "updatePersonByAdmin",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserIdentifier",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UserRegistrationAdminUpdateRequest",
                            "required": false
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to assign role(s) to a registered user.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "com.ibm.commerce.usermanagement.commands.MemberRoleAssignCmd",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "assignRoleByAdmin",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.usermanagement.commands.MemberRoleAssignCmd",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$MemberRoleAssignRequest",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "action",
                            "description": "The action of the rest service.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "assignRole"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 201,
                            "message": "The requested resource has been created."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "This allows an administrator to unassign role(s) from a registered user.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "com.ibm.commerce.usermanagement.commands.MemberRoleUnassignCmd",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "unassignRoleByAdmin",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.usermanagement.commands.MemberRoleUnassignCmd",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$MemberRoleUnassignRequest",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "action",
                            "description": "The action of the rest service.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "unassignRole"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/updateMemberPassword",
            "operations": [
                {
                    "summary": "This allows CSR \/ CSS to reset password for a registered user. It also allows resetting password when the CSR \/ CSS has established a session to act on behalf of a user.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "com.ibm.commerce.security.commands.ResetPasswordAdministratorCmd",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "resetPasswordByAdmin",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.security.commands.ResetPasswordAdministratorCmd",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$ResetPasswordAdministratorRequest",
                            "required": false
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "mode",
                            "description": "The mode in which resetPassword will be executed. ResetPassword can be executed in administrator session or in on-behalf session for a user Default value is 'resetPasswordAdmin'.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "resetPasswordAdmin",
                                "resetPasswordOnBehalf"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/{userId}",
            "operations": [
                {
                    "summary": "Performs an action on a person by an administrator. See each action for details on input and output.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "Empty",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "performActionByAdmin",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "Empty",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "action",
                            "description": "The action of the rest service.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "assignRole",
                                "unassignRole"
                            ]
                        }
                    ],
                    "consumes": [
                        "application\/json",
                        "application\/xml"
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 201,
                            "message": "The requested resource has been created."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/@self\/contextattributes\/{jobNames}\/{values}",
            "operations": [
                {
                    "summary": "Deletes one or more values of a context attribute for a registered user.",
                    "notes": "",
                    "method": "DELETE",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$DeleteContextAttribute",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "deleteContextAttributeForPerson",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$DeleteContextAttribute",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "jobNames",
                            "description": "Name of the person's job function to use for the request.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "path",
                            "name": "values",
                            "description": "Value of the person's job function.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "query",
                            "allowMultiple": false,
                            "name": "responseFormat",
                            "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
                            "type": "string",
                            "required": false,
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        },
        {
            "path": "\/store\/{storeId}\/person\/updateMemberUser\/{userId}",
            "operations": [
                {
                    "summary": "Updates user to be included\/excluded from a member group or to be unassgined.",
                    "notes": "",
                    "method": "POST",
                    "responseClass": "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUserResponse",
                    "secureCallMandatory": true,
                    "partialAuthenticationAllowed": false,
                    "nickname": "updateMemberUser",
                    "produces": [
                        "application\/json",
                        "application\/xml",
                        "application\/xhtml+xml",
                        "application\/atom+xml"
                    ],
                    "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUserResponse",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "storeId",
                            "description": "The store identifier.",
                            "type": "string",
                            "required": true,
                            "enum": [
                                "0",
                                "10001",
                                "10501",
                                "11001",
                                "1",
                                "11501"
                            ]
                        },
                        {
                            "paramType": "path",
                            "name": "userId",
                            "description": "The user identifier.",
                            "type": "string",
                            "required": true
                        },
                        {
                            "paramType": "body",
                            "name": "body",
                            "description": "Request body.",
                            "type": "com.ibm.commerce.rest.member.handler.PersonHandler$UpdateMemberUser",
                            "required": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "The requested completed successfully."
                        },
                        {
                            "code": 400,
                            "message": "Bad request. Some of the inputs provided to the request aren't valid."
                        },
                        {
                            "code": 401,
                            "message": "Not authenticated. The user session isn't valid."
                        },
                        {
                            "code": 403,
                            "message": "The user isn't authorized to perform the specified request."
                        },
                        {
                            "code": 500,
                            "message": "Internal server error. Additional details will be contained on the server logs."
                        }
                    ]
                }
            ]
        }
    ],
    "resourcePath": "store\/{storeId}\/person",
    "description": "This class provides RESTful services to get person details, register a member, and update a member.  This class also provides RESTful services used by an administrator to find person information, register new and update existing user information."
}