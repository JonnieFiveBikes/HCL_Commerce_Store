{
  "models": {
    "Empty": {
      "description": "Empty model. Used as default value when no model is specified.",
      "id": "Empty",
      "properties": {
      }
    }
  },
  "apiVersion": "WC.TOOLKIT Enterprise Version : 8 Fix Pack : 0",
  "swaggerVersion": "1.2",
  "basePath": "https:\/\/@slin-ubuntu1.fyre.ibm.com:5443\/wcs\/resources",
  "apis": [
    {
      "path": "\/store\/{storeId}\/seo\/token",
      "operations": [
        {
          "summary": "Finds seo token by a query. See each query for details on input and output.",
          "notes": "",
          "method": "GET",
          "responseClass": "Empty",
          "secureCallMandatory": false,
          "partialAuthenticationAllowed": true,
          "nickname": "findByQuery",
          "produces": [
            "application\/json",
            "application\/xml",
            "application\/xhtml+xml",
            "application\/atom+xml"
          ],
          "type": "Empty",
          "parameters": [
            {
              "paramType": "path",
              "name": "storeId",
              "description": "The store identifier.",
              "type": "string",
              "required": true,
              "enum": [
                "0",
                "10001",
                "10501",
                "11001",
                "1",
                "11501",
                "12001",
                "11"
              ]
            },
            {
              "paramType": "query",
              "allowMultiple": false,
              "name": "q",
              "description": "The query name.",
              "type": "string",
              "required": true,
              "enum": [
                "byUrlKeywordNames"
              ]
            },
            {
              "paramType": "query",
              "allowMultiple": false,
              "name": "responseFormat",
              "description": "The response format. If the request has an input body, that body must also use the format specified in \"responseFormat\". Valid values include \"json\" and \"xml\" without the quotes. If the responseFormat isn't specified, the \"accept\" HTTP header shall be used to determine the format of the response. If the \"accept\" HTTP header isn't specified as well, the default response format shall be in json.",
              "type": "string",
              "required": false,
              "enum": [
                "xml",
                "json"
              ]
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "The requested completed successfully."
            },
            {
              "code": 400,
              "message": "Bad request. Some of the inputs provided to the request aren't valid."
            },
            {
              "code": 401,
              "message": "Not authenticated. The user session isn't valid."
            },
            {
              "code": 403,
              "message": "The user isn't authorized to perform the specified request."
            },
            {
              "code": 500,
              "message": "Internal server error. Additional details will be contained on the server logs."
            }
          ]
        }
      ]
    },
    {
      "path": "\/store\/{storeId}\/seo\/token",
      "operations": [
        {
          "summary": "Gets the feature version data.",
          "notes": "",
          "method": "GET",
          "responseClass": "Empty",
          "secureCallMandatory": false,
          "partialAuthenticationAllowed": true,
          "nickname": "findByUrlKeywordNames",
          "produces": [
            "application\/atom+xml",
            "application\/json",
            "application\/xhtml+xml",
            "application\/xml"
          ],
          "type": "Empty",
          "parameters": [
            {
              "paramType": "path",
              "name": "storeId",
              "description": "The store identifier.",
              "type": "string",
              "required": true,
              "enum": [
                "0",
                "10001",
                "10501",
                "11001",
                "1",
                "11501",
                "12001",
                "11"
              ]
            },
            {
              "paramType": "query",
              "allowMultiple": false,
              "name": "q",
              "description": "The query name.",
              "type": "string",
              "required": true,
              "enum": [
                "byUrlKeywordNames"
              ]
            },
            {
              "paramType": "query",
              "allowMultiple": true,
              "name": "urlKeywordName",
              "description": "the input urlKeyword names",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "The requested completed successfully."
            },
            {
              "code": 400,
              "message": "Bad request. Some of the inputs provided to the request aren't valid."
            },
            {
              "code": 401,
              "message": "Not authenticated. The user session isn't valid."
            },
            {
              "code": 403,
              "message": "The user isn't authorized to perform the specified request."
            },
            {
              "code": 404,
              "message": "The specified resource couldn't be found."
            },
            {
              "code": 500,
              "message": "Internal server error. Additional details will be contained on the server logs."
            }
          ]
        }
      ]
    }
  ],
  "resourcePath": "store\/{storeId}\/seo\/token",
  "description": "This class provides RESTful services to get the SEO related infomation."
}
